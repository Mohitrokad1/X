{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/paper/dist/paper-full.js","webpack:///./src/pen.js","webpack:///./src/move.js","webpack:///./src/cropper.js","webpack:///./node_modules/acorn/dist/acorn.mjs"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","self","undefined","window","document","Base","hidden","array","slice","describe","getOwnPropertyDescriptor","define","forEach","iter","this","length","set","assign","dst","arguments","src","each","obj","desc","inject","dest","beans","preserve","beansNames","field","val","substring","bean","isFunc","res","prev","base","match","toLowerCase","isPlainObject","writable","configurable","test","part","statics","extend","ctor","proto","initialize","apply","clone","constructor","pick","a","b","list","begin","end","toString","_id","_class","_name","type","push","Formatter","instance","number","join","getClassName","importJSON","json","exportJSON","options","toJSON","serialize","props","exclude","filter","_prioritize","equals","obj1","obj2","Array","isArray","keys","read","start","amount","peek","__index","readIndex","_readIndex","readNull","__read","filtered","__filtered","remain","readList","entry","readNamed","getNamed","hasObject","__unfiltered","arg","_hasObject","hasNamed","source","prioritize","processed","handleKey","isPlainValue","asString","compact","dictionary","isRoot","formatter","precision","definitions","references","add","item","id","ref","unshift","_serialize","_compactSerialize","deserialize","_data","_setDictionary","_isRoot","isFirst","hasDictionary","isDictionary","args","JSON","stringify","target","parse","useTarget","Item","Layer","insert","concat","items","itemsLength","startLength","splice","index","remove","append","_index","removed","capitalize","str","replace","toUpperCase","camelize","chr","hyphenate","Emitter","on","func","types","_eventTypes","handlers","_callbacks","indexOf","install","off","uninstall","once","handler","emit","event","setTarget","currentTarget","stop","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","paper","settings","applyMatrix","insertItems","handleSize","hitTolerance","project","projects","tools","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","agent","user","navigator","userAgent","os","exec","platform","browser","v1","v2","rv","chrome","v","version","versionNumber","parseFloat","trident","jsdom","webkit","atom","getView","_view","getPaper","execute","code","PaperScript","View","updateFocus","scope","that","setup","element","Project","createCanvas","width","height","getCanvas","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","Math","pow","round","pair","val1","val2","separator","point","x","y","size","rectangle","Numerical","abscissas","weights","abs","sqrt","log2","log","LOG2E","clamp","min","max","getDiscriminant","split","hi","D","E","ad","bd","cd","q","getNormalizationFactor","norm","EPSILON","MACHINE_EPSILON","CURVETIME_EPSILON","GEOMETRIC_EPSILON","TRIGONOMETRIC_EPSILON","KAPPA","isZero","integrate","f","w","A","B","sum","Ax","findRoot","df","tolerance","fx","dx","nx","solveQuadratic","roots","x1","x2","Infinity","Q","R","count","boundless","minB","maxB","isFinite","solveCubic","b1","c2","qd","evaluate","x0","tmp","td","rd","UID","_pools","pool","Point","arg0","arg1","reading","hasY","_set","setAngle","angle","getLength","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","normalize","current","rotate","center","subtract","transform","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","isNaN","isInQuadrant","point1","point2","random","y1","y2","op","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","isSelected","_selection","_getSelection","setSelected","selected","_changeSelection","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","frm","next","rect","rt","getPoint","_dontLink","setPoint","getSize","_fw","_fh","setSize","sx","_sx","sy","_sy","h","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","epsilon","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","Matrix","ok","_a","_b","_c","_d","_tx","_ty","reset","Error","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","a1","c1","d1","a2","b2","d2","tx2","ty2","prepend","tx1","ty1","appended","prepended","invert","det","inverted","concatenate","preConcatenate","chain","_shiftless","_orNullIfIdentity","isInvertible","isSingular","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","j","inverseTransform","_inverseTransform","decompose","degrees","asin","translation","getTranslation","rotation","scaling","skewing","getScaling","getRotation","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","px","py","vx","vy","ccw","_children","_namedChildren","_activeLayer","_currentStyle","Style","_selectionItems","_selectionCount","_updateVersion","flags","view","_needsUpdate","_requested","_autoUpdate","requestUpdate","changes","_changes","changesById","_changesById","children","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getLayers","getActiveLayer","getSymbolDefinitions","ids","getItems","class","SymbolItem","definition","_definition","getSymbols","getSelectedItems","selectionItems","selection","isInserted","_updateSelection","selectAll","setFullySelected","deselectAll","addLayer","layer","insertLayer","_remove","_setProject","setName","_insertItem","_created","NO_INSERT","insertChild","_getItems","getItem","removeOn","sets","_removeSets","mousedrag","other","draw","pixelRatio","save","param","offset","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","_serializeFields","_canApplyMatrix","_canScaleStroke","_pivot","_visible","_blendMode","_opacity","_locked","_guide","_clipMask","_selectBounds","_selectChildren","pivot","visible","blendMode","opacity","locked","guide","clipMask","data","_countItemEvent","onFrame","_animateItem","onLoad","onError","_itemHandlers","_initialize","hasProps","_matrix","_parent","_style","parent","fields","fontSize","Group","_defaults","symbol","_symbol","cacheParent","_project","_bounds","_position","_decomposed","_globalMatrix","_clearBoundsCache","getId","getName","_removeNamed","_getOwner","namedChildren","getStyle","setStyle","getSelection","setSelection","flag","isFullySelected","isClipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","position","_getPositionFromBounds","setPosition","getBounds","getPivot","setPivot","getStrokeBounds","stroke","getHandleBounds","handle","getInternalBounds","hasMatrix","opts","_boundsOptions","getStrokeScaling","cacheItem","_getCachedBounds","setBounds","_backup","_getBounds","_updateBoundsCache","_getBoundsCacheKey","noInternal","cacheKey","cached","nonscaling","hasStroke","_getStrokeMatrix","_item","getViewMatrix","_boundsCache","cache","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","parents","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","setParent","addChild","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","copy","deep","copyAttributes","copyContent","insertAbove","orig","excludeMatrix","rasterize","resolution","getResolution","topLeft","getTopLeft","floor","bottomRight","getBottomRight","ceil","raster","Raster","canvas","setCanvas","_contains","_asPathItem","Path","getIntersections","hitTest","_hitTest","HitResult","hitTestAll","all","hitTestChildren","_exclude","child","_hitTestChildren","parentViewMatrix","guides","tolerancePadding","_tolerancePadding","_getStrokePadding","checkSelf","hit","checkPoint","pt","checkPosition","checkCenter","checkBounds","points","_hitTestSelf","fill","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","recursive","path","childMatrix","insertChildren","inserted","notifySelf","_insertAt","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","addTo","copyTo","reduce","namedArray","notifyParent","_dispose","replaceWith","reverseChildren","reverse","numChildren","isEditable","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","transformMatrix","fillColor","getFillColor","strokeColor","getStrokeColor","_transformContent","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","fillStyle","toCanvasStyle","strokeStyle","lineWidth","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","blur","getShadowBlur","getShadowOffset","shadowColor","getShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","pop","strokeMatrix","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","getFillRule","process","_isUpdated","updateVersion","CompoundPath","updated","itemSelected","boundsSelected","positionSelected","_drawSelected","color","getSelectedColor","half","pos","beginPath","arc","deltas","delta","moveTo","lineTo","closePath","fillRect","hash","tween","easing","duration","Tween","_handleFrame","time","running","tweenTo","tweenFrom","_clipItem","_getClipItem","isClipped","setClipped","clipped","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","toShape","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","bezierCurveTo","getCornerCenter","halfSize","dir","corner","quadrant","isOnEllipseStroke","padding","vector","hitStroke","hitFill","strokeRadius","strokePadding","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","_smoothing","image","getElementById","getContent","naturalHeight","setImage","setSource","_loaded","getSource","_image","_canvas","_setImage","copyCanvas","drawImage","_crossOrigin","getElement","getLoaded","u","getPpi","getImage","Event","setTimeout","DomEvent","load","error","complete","naturalWidth","_context","e","_change","setContext","context","toDataURL","Image","getCrossOrigin","setCrossOrigin","getSmoothing","setSmoothing","smoothing","getSubCanvas","getSubRaster","getAverageColor","PathItem","_sampleContext","clearRect","sampleSize","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","DomElement","setPrefixed","setDefinition","SymbolDefinition","getDefinition","getSymbol","setSymbol","dontCenter","setItem","_dontCenter","place","values","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","_point","hasHandles","_handleIn","_handleOut","_path","curve","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","isSmooth","clearHandles","oldSelection","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","smooth","_first","_last","factor","getPrevious","p0","p1","p2","k","d1_a","d1_2a","d2_a","d2_2a","N","isLast","reversed","removeSegment","segment","interpolate","handleIn1","handleIn2","handleOut2","handleOut1","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","classify","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","divideAt","location","divideAtTime","getTimeAt","_setHandles","subdivide","setHandles","splitAt","splitAtTime","getLocationAtTime","isTime","straight","h1","h2","y0","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","getMonoCurves","io","o0","o1","o2","o3","isStraight","sort","coord","v0","v3","getTimeOf","p3","getNearestTime","minDist","minT","refine","dist","step","flip","isFlatEnough","flatness","ux","uy","_addBounds","minPad","maxPad","s1","s2","isLinear","third","hasLength","isHorizontal","getTangentAtTime","isVertical","getLocationAt","_isTime","getParameterAt","getTimesWithTangent","tangent","getOffsetAtTime","getLocationOf","getOffsetOf","loc","getOffset","getParameterOf","getNearestLocation","getNearestPoint","methods","_evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","normalized","len","d3","t1","t2","hasRoots","t1Ok","t2Ok","f1","f2","ds","forward","rangeLength","diff","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","getPeaks","addLocation","locations","overlap","excludeStart","excludeEnd","loc1","loc2","_intersection","clipConvexHull","hullTop","hullBottom","dMin","dMax","clipConvexHullPart","threshold","qx","qy","getCurveLineIntersections","getCurveIntersections","overlaps","getOverlaps","straight1","straight2","before","addCurveIntersections","recursion","calls","tMin","tMax","uMin","uMax","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","dp0","dp1","dp2","dp3","hull","dq0","dq1","dq2","dq3","dist1","dist2","distRatio","getConvexHull","tMinNew","tMaxNew","i1","i2","getLoopIntersection","info","getSquaredLineLength","straightBoth","l1","l2","pairs","curves1","curves2","matrix1","matrix2","_returnFirst","length1","length2","values2","arrays","curve1","values1","path1","den","times","t0","_overlap","_distance","_setCurve","_time","getPointAtTime","_next","_previous","_version","_curve","_segment","_setSegment","getSegment","getTime","trySegment","_offset","_curveOffset","getParameter","getCurveOffset","getIntersection","getLastSegment","_ignoreOther","isTouching","inter","curve2","isCrossing","t1Inside","t2Inside","c4","c3","offsets","addOffsets","isInRange","getPointAt","v4","a3","a4","hasOverlap","merge","search","found","path2","expanded","compound","pathData","first","isClockwise","setClockwise","clockwise","setPathData","previous","control","relative","getCoord","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","onPath","windingL","windingR","getCrossings","minLoc","isPath","itemsFrom","itemsTo","setClosed","paths1","paths2","matched","closed","setSegments","_segmentSelection","_area","getSegments","fullySelected","last","_add","getFirstSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","addSegment","skipLine","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newSelection","last1","last2","first2","first1","simplify","flatten","PathFlattener","PathFitter","fit","_default","loop","asymmetric","paddingLeft","paddingRight","knots","n_1","rf","hx","hy","topCenter","seg3","seg4","isArc","pt1","pt2","shape","pos2","end2","pos1","end1","start2","cap","numSegments","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","isJoin","_addBevelJoin","_addSquareCap","getOffsetsWithTangent","curveStart","curveTimes","drawSegments","drawSegment","dashLength","flattener","drawPart","pX","pY","miniSize","miniHalf","drawHandle","hX","hY","drawHandles","getCurrentSegment","moveBy","curveTo","through","extent","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","parameter","cubicCurveBy","quadraticCurveBy","arcBy","method","prevCoords","processSegment","joinBounds","addPoint","addRound","addJoin","addCap","phi","isArea","normal1","getNormalAtTime","normal2","normal","joinPadding","joinRadius","SQRT2","paddingX","paddingY","xn","xx","yn","yx","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tl","tr","getTopRight","br","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","operators","1","2","-1","preparePath","resolve","resolveCrossings","reorient","createResult","result","traceBoolean","operation","trace","splitBoolean","_path1","_path2","operator","crossings","divideLocations","collect","_overlapsOnly","propagateWinding","_winding","tracePaths","reorientPaths","added","addPath","linkIntersections","clearCurveHandles","lookup","container","sorted","entry1","getInteriorPoint","containerWinding","entry2","clearLater","renormalizeLocs","prevCurve","prevTime","results","clearCurves","clearLookup","origTime","newCurve","getWinding","dontFlip","vPrev","vClose","ia","pv","pa","po","qualityEpsilon","paL","paR","pathWindingL","pathWindingR","onAnyPath","quality","addWinding","a0","windingPrev","a3Prev","handleCurve","monoCurves","totalLength","curveLength","operand","SQRT1_2","wind","pathWinding","starts","isValid","_visited","isStart","visitPath","getCrossingSegments","collectStarts","nextInter","_prev","inter1","inter2","over1","over2","branch","visited","valid","finished","branches","shift","hasOverlaps","hasCrossings","intersections","nonZero","intercepts","mv","mo0","mo3","maxRecursion","ignoreStraight","minSpan","addCurve","computeParts","halves","tMid","_get","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","tanCenter","C","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","c0","segLength","eps","degree","maxDist","TextItem","content","_content","_lines","setContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","namedColors","transparent","hsbIndices","converters","rgb-hsb","g","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","converted","string","parseInt","trim","isHSL","component","unit","turn","grad","fromCSS","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","highlight","inverse","_radial","createRadialGradient","createLinearGradient","addColorStop","_color","_types","_setOwner","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","getRadial","stops1","stops2","rampPoint","setColor","setOffset","getRampPoint","setRampPoint","getColor","itemDefaults","fillRule","strokeScaling","shadowOffset","selectedColor","groupDefaults","fontFamily","fontWeight","textDefaults","_values","isColor","isPoint","applyToChildren","old","_dontMerge","childValue","Font","WindingRule","isStyle","style1","style2","secondary","defaults2","value1","value2","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","passive","addEventListener","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","requestAnimationFrame","timer","nativeRequest","requested","callbacks","handleCallbacks","functions","callback","setInterval","getCanvasSize","setAttribute","_viewEvents","userDrag","userSelect","touchCallout","contentZooming","tapHighlightColor","_windowEvents","resize","setViewSize","Stats","_stats","stats","domElement","appendChild","_element","_pixelRatio","devicePixelRatio","_setElementSize","_viewSize","_views","_viewsById","_focused","_frameItems","_frameItemCount","_itemEvents","native","virtual","node","_animate","play","pause","_count","getAutoUpdate","setAutoUpdate","autoUpdate","update","now","Date","animate","_handleFrameItems","getPixelRatio","getViewSize","isVisible","parentNode","temp","createElement","removeChild","getZoom","setZoom","zoom","scrollBy","projectToView","viewToProject","getEventPoint","CanvasView","prevFocus","tempFocus","mousedown","mousemove","mouseup","dragging","mouseDown","pointerEnabled","msPointerEnabled","viewEvents","docEvents","mouseout","nodeName","handleMouseMove","scroll","_handleMouseEvent","downPoint","lastPoint","downItem","overItem","dragItem","clickItem","clickTime","dblClick","called","prevented","fallbacks","doubleclick","wasInView","itemEventsMap","click","mouseenter","mouseleave","itemEvents","hitItems","nativeMove","tool","inView","hitItem","mouse","substr","emitMouseEvent","drag","emitMouseEvents","down","up","cancelable","preventDefault","_handleKeyEvent","character","keyEvent","KeyEvent","sign","_resetState","prevPoint","stopItem","mouseEvent","stopped","MouseEvent","fallback","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","prevFont","measureText","stopPropagation","getTimeStamp","timeStamp","getModifiers","Key","modifiers","metaFixMap","downKey","keyLookup","\t"," ","\b","","Spacebar","Del","Win","Esc","charLookup","tab","space","enter","keyMap","charMap","alt","meta","capsLock","option","mac","getKey","keyIdentifier","String","fromCharCode","keyCode","keydown","altKey","metaKey","ctrlKey","keypress","charCode","keyup","isDown","ToolEvent","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","setCount","Tool","_moveCount","_downCount","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","maxDistance","getFixedDistance","setFixedDistance","distance","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isFunction","_then","_startTime","state","_keys","_parsedKeys","_parseKeys","_from","_getState","_to","then","progress","getValue","__add","__subtract","__multiply","_setProperty","onUpdate","startTime","_getProperty","resolved","_resolveValue","_calculate","parsed","calculateBinary","Http","request","xhr","XMLHttpRequest","open","url","async","mimeType","overrideMimeType","onload","status","responseText","onerror","message","send","canvases","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","srcContext","dstContext","srcCanvas","dstData","SvgElement","svg","xmlns","xlink","attributeNamespace","href","xmlns:xlink","attributes","namespace","setAttributeNS","tag","createElementNS","getAttributeNS","SvgStyles","true","false","attribute","toSVG","fromSVG","exportFilter","getTransform","coordinates","attrs","trans","exportGroup","childNode","exportSVG","clip-path","exportShape","exporters","embedImages","matchShapes","definitionItem","viewBox","overflow","textContent","applyStyle","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","exportGradient","visibility","svgs","__id","typeId","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","rootSize","allowNull","allowPercent","defaultValue","defaultX","defaultY","convertValue","map","importGroup","nodes","childNodes","isClip","isDefs","currentStyle","applyAttributes","querySelectorAll","importNode","importPoly","importGradient","scaleToBounds","_scaleToBounds","importers","#document","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","text","switch","applyTransform","transforms","applyOpacity","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-color","stop-opacity","percent","styles","group","tagName","isElement","nextSibling","importer","onImport","expandShapes","importSVG","DOMParser","parseFromString","File","reader","FileReader","readAsText","mod","global","acorn","input","inputLen","sourceFile","inpt","initTokenState","program","lastStart","lastEnd","tokPos","lastEndLoc","line_loc_t","inFunction","strict","labels","readToken","startNode","tokType","_eof","stmt","parseStatement","isUseStrict","setStrict","finishNode","parseTopLevel","defaultOptions","ecmaVersion","strictSemicolons","allowTrailingCommas","forbidReserved","allowReturnOutsideFunction","onComment","ranges","directSourceFile","opt","tokStart","tokEnd","tokStartLoc","tokEndLoc","tokVal","tokRegexpAllowed","tokCurLine","tokLineStart","getLineInfo","cur","lineBreak","lastIndex","column","raise","err","SyntaxError","raisedAt","tokenize","getToken","forceRegexp","startLoc","endLoc","jumpTo","reAllowed","skipSpace","empty","_num","_regexp","_string","_break","keyword","_case","beforeExpr","_catch","_continue","_debugger","_do","isLoop","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_while","_with","_new","_this","_null","atomValue","_true","_false","binop","keywordTypes","break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","throw","try","var","while","with","null","new","in","instanceof","typeof","void","delete","_bracketL","_bracketR","_braceL","_braceR","_parenL","_parenR","_comma","_semi","_colon","_dot","_question","_slash","_eq","isAssign","_assign","_incDec","postfix","isUpdate","_prefix","_logicalOR","_logicalAND","_bitwiseOR","_bitwiseXOR","_bitwiseAND","_equality","_relational","_bitShift","_plusMin","_multiplyModulo","kw","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","question","slash","eq","eof","num","regexp","makePredicate","words","cats","compareTo","arr","cat","Function","containsEsc","isReservedWord3","isReservedWord5","isStrictReservedWord","isStrictBadIdWord","isKeyword","nonASCIIwhitespace","nonASCIIidentifierStartChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","newline","isIdentifierStart","isIdentifierChar","finishToken","skipBlockComment","skipLineComment","ch","charCodeAt","getTokenFromCode","readNumber","readToken_dot","readInt","readHexNumber","quote","octal","readHexChar","readString","readRegexp","finishOp","readToken_slash","readToken_pipe_amp","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readWord","tok","escaped","inClass","charAt","mods","readWord1","radix","startsWithDot","isFloat","word","esc","escStr","strct","lastIndexOf","node_t","node_loc_t","range","startNodeFrom","expression","eat","canInsertSemicolon","semicolon","unexpected","expect","checkLVal","expr","loopLabel","kind","switchLabel","starttype","isBreak","label","parseIdent","lab","parseParenExpression","parseFor","init","parseVar","declarations","parseForIn","parseExpression","parseFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","block","parseBlock","clause","guard","guardedHandlers","finalizer","maybeName","allowStrict","oldStrict","noIn","decl","noComma","parseMaybeAssign","expressions","parseExprOp","minPrec","prec","parseMaybeUnary","exprNode","parseExprOps","parseMaybeConditional","parseSubscripts","parseExprAtom","noCalls","computed","callee","parseExprList","raw","tokStartLoc1","tokStart1","elements","sawGetSet","parsePropertyName","isGetSet","conflict","parseObj","parseNew","isStatement","params","oldInFunc","oldLabels","close","allowTrailingComma","allowEmpty","elts","liberal","binaryOperators","+","-","*","/","%","==","!=","unaryOperators","__self","__$__","$__","compile","insertions","insertion","getCode","replaceCode","offsetCode","sourceMaps","lineBreaks","getElementsByTagName","innerHTML","mappings","encodeVLQ","safari","file","names","sourceRoot","sources","sourcesContent","walkAST","between","getBetween","parentType","exp","declaration","specifiers","dec","specifier","preserveParens","sourceType","btoa","unescape","encodeURIComponent","toolHandlers","compiled","expose","script","head","createTextNode","__paperscript__","onResize","setOnResize","setOnFrame","loadScript","canvasId","baseURI","loadAll","readyState","calculateUnary","PlacedSymbol","onDrawEnd","initPath","onMouseDown","onTouchStart","onMouseDrag","onTouchMove","onMouseMove","onMouseUp","layers","drawPath","movPoint","console","fPoint","newPoint","drawRectangle","startPoint","newPos","canvasElement","me","movingShift","selectedElement","selectedFullMove","hitOptions","scaleOffset","newScale","disSelected","wheelDelta","deltaY","fullZoom","toFixed","select","oldX","oldY","onSelected","selectedPosition","fullMove","activeLayer","addX","addY","cursor","__webpack_exports__","paper__WEBPACK_IMPORTED_MODULE_0__","paper__WEBPACK_IMPORTED_MODULE_0___default","_pen__WEBPACK_IMPORTED_MODULE_1__","_pen__WEBPACK_IMPORTED_MODULE_1___default","_move__WEBPACK_IMPORTED_MODULE_2__","_move__WEBPACK_IMPORTED_MODULE_2___default","cropper","destroy","defaultOption","oncontextmenu","myMove","startAction","myPen","stopAction","getPos","minX","maxX","minY","maxY","realPos","newX","newY","boundWidth","boundHeight","boundPos","output","startPen","startRectangle","crop","imgPos","cropBounds","objects","newPoints","imgX","imgY","enableFullMove","disableFullMove","Cropper","parseExpressionAt","tokenizer","Parser","Position","SourceLocation","Node","TokenType","keywords$1","TokContext","types$1","Token","isNewLine","lineBreakG","reservedWords","3","5","6","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierChars","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","astral","conf","startsExpr","updateContext","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","star","starstar","_const","_super","_extends","_export","_import","_instanceof","_typeof","_void","_delete","ecma2019String","skipWhiteSpace","has","propName","wordsRegexp","onInsertedSemicolon","onTrailingComma","allowReserved","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","onToken","tokens","token","comment","pushComment","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","functionFlags","generator","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","undefinedExports","scopeStack","enterScope","regexpState","prototypeAccessors","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","nextToken","currentVarScope","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","plugins","cls","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","isContextual","eatContextual","expectContextual","insertSemicolon","afterTrailingComma","notNext","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","pp$1","adaptDirectivePrologue","isLet","skip","nextCh","ident","isAsyncFunction","topLevel","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","parseImport","parseExport","parseLabeledStatement","parseExpressionStatement","awaitAt","init$1","await","toAssignable","isAsync","declarationPosition","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","exitScope","parseBindingAtom","simple","i$1","label$1","statementStart","createNewLexicalScope","isFor","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","parseClassElement","superClass","constructorAllowsSuper","this$1","tryContextual","noLineBreak","startNodeAt","static","isGenerator","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","list$1","elt","decls","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","pp$2","isBinding","toAssignableList","exprList","parseSpread","parseRestBinding","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldShorthandAssign","leftStartPos","leftStartLoc","logical","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","maybeAsyncArrow","parseSubscript","parseArrowExpression","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","empty$1","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","allowDuplicates","nameHash","delegate","pp$4","pp$5","Scope","lexical","redeclared","scope$2","scope$3","pp$6","isExpr","preserveSpace","override","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","curContext","inGeneratorContext","statementParens","allowed","ecma9BinaryProperties","unicodeBinaryProperties","9","10","unicodeGeneralCategoryValues","ecma9ScriptValues","unicodeScriptValues","buildUnicodeData","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$9","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","unicode","at","nextIndex","lookahead","advance","validateRegExpFlags","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","pp$8","codePointToString","iterator","done","fullCharCodeAtPos","startSkip","next2","readToken_mult_modulo_exp","tokentype","readToken_caret","readRadixNumber","flagsStart","readCodePoint","codePos","invalidStringToken","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","inTemplate","octalStr","escStart"],"mappings":"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","file":"lf-cropper.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/*!\n * Paper.js v0.12.2 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2019, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Tue Jun 11 21:31:28 2019 +0200\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2019 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * https://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = function(self, undefined) {\n\nself = self || require('./node/self.js');\nvar window = self.window,\n\tdocument = self.document;\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\t\tarray = [],\n\t\tslice = array.slice,\n\t\tcreate = Object.create,\n\t\tdescribe = Object.getOwnPropertyDescriptor,\n\t\tdefine = Object.defineProperty,\n\n\t\tforEach = array.forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++) {\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this) {\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tset = Object.assign || function(dst) {\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tfor (var key in src) {\n\t\t\t\t\tif (src.hasOwnProperty(key))\n\t\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dst;\n\t\t},\n\n\t\teach = function(obj, iter, bind) {\n\t\t\tif (obj) {\n\t\t\t\tvar desc = describe(obj, 'length');\n\t\t\t\t(desc && typeof desc.value === 'number' ? forEach : forIn)\n\t\t\t\t\t.call(obj, iter, bind = bind || obj);\n\t\t\t}\n\t\t\treturn bind;\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res)) {\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\t}\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable != null ? enumerable : !bean;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\tvar src = arguments[i];\n\t\t\tif (src)\n\t\t\t\tset(this, src);\n\t\t}\n\t\treturn this;\n\t}\n\n\treturn inject(Base, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, null, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, obj, l = arguments.length;\n\t\t\t\t\ti < l && !(ctor && proto); i++) {\n\t\t\t\tobj = arguments[i];\n\t\t\t\tctor = ctor || obj.initialize;\n\t\t\t\tproto = proto || obj.prototype;\n\t\t\t}\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = proto || create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}).inject({\n\t\tenumerable: false,\n\n\t\tinitialize: Base,\n\n\t\tset: Base,\n\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src) {\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\tset: set,\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t},\n\n\t\t\tslice: function(list, begin, end) {\n\t\t\t\treturn slice.call(list, begin, end);\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\tenumerable: false,\n\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\timportJSON: function(json) {\n\t\treturn Base.importJSON(json, this);\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\tset: function(props, exclude) {\n\t\tif (props)\n\t\t\tBase.filter(this, props, exclude, this._prioritize);\n\t\treturn this;\n\t}\n}, {\n\nbeans: false,\nstatics: {\n\texports: {},\n\n\textend: function extend() {\n\t\tvar res = extend.base.apply(this, arguments),\n\t\t\tname = res.prototype._class;\n\t\tif (name && !Base.exports[name])\n\t\t\tBase.exports[name] = res;\n\t\treturn res;\n\t},\n\n\tequals: function(obj1, obj2) {\n\t\tif (obj1 === obj2)\n\t\t\treturn true;\n\t\tif (obj1 && obj1.equals)\n\t\t\treturn obj1.equals(obj2);\n\t\tif (obj2 && obj2.equals)\n\t\t\treturn obj2.equals(obj1);\n\t\tif (obj1 && obj2\n\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tvar length = obj1.length;\n\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\tlength = keys.length;\n\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tread: function(list, start, options, amount) {\n\t\tif (this === Base) {\n\t\t\tvar value = this.peek(list, start);\n\t\t\tlist.__index++;\n\t\t\treturn value;\n\t\t}\n\t\tvar proto = this.prototype,\n\t\t\treadIndex = proto._readIndex,\n\t\t\tbegin = start || readIndex && list.__index || 0,\n\t\t\tlength = list.length,\n\t\t\tobj = list[begin];\n\t\tamount = amount || length - begin;\n\t\tif (obj instanceof this\n\t\t\t|| options && options.readNull && obj == null && amount <= 1) {\n\t\t\tif (readIndex)\n\t\t\t\tlist.__index = begin + 1;\n\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t}\n\t\tobj = Base.create(proto);\n\t\tif (readIndex)\n\t\t\tobj.__read = true;\n\t\tobj = obj.initialize.apply(obj, begin > 0 || begin + amount < length\n\t\t\t\t? Base.slice(list, begin, begin + amount)\n\t\t\t\t: list) || obj;\n\t\tif (readIndex) {\n\t\t\tlist.__index = begin + obj.__read;\n\t\t\tvar filtered = obj.__filtered;\n\t\t\tif (filtered) {\n\t\t\t\tlist.__filtered = filtered;\n\t\t\t\tobj.__filtered = undefined;\n\t\t\t}\n\t\t\tobj.__read = undefined;\n\t\t}\n\t\treturn obj;\n\t},\n\n\tpeek: function(list, start) {\n\t\treturn list[list.__index = start || list.__index || 0];\n\t},\n\n\tremain: function(list) {\n\t\treturn list.length - (list.__index || 0);\n\t},\n\n\treadList: function(list, start, options, amount) {\n\t\tvar res = [],\n\t\t\tentry,\n\t\t\tbegin = start || 0,\n\t\t\tend = amount ? begin + amount : list.length;\n\t\tfor (var i = begin; i < end; i++) {\n\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t}\n\t\treturn res;\n\t},\n\n\treadNamed: function(list, name, start, options, amount) {\n\t\tvar value = this.getNamed(list, name),\n\t\t\thasObject = value !== undefined;\n\t\tif (hasObject) {\n\t\t\tvar filtered = list.__filtered;\n\t\t\tif (!filtered) {\n\t\t\t\tfiltered = list.__filtered = Base.create(list[0]);\n\t\t\t\tfiltered.__unfiltered = list[0];\n\t\t\t}\n\t\t\tfiltered[name] = undefined;\n\t\t}\n\t\tvar l = hasObject ? [value] : list,\n\t\t\tres = this.read(l, start, options, amount);\n\t\treturn res;\n\t},\n\n\tgetNamed: function(list, name) {\n\t\tvar arg = list[0];\n\t\tif (list._hasObject === undefined)\n\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\tif (list._hasObject)\n\t\t\treturn name ? arg[name] : list.__filtered || arg;\n\t},\n\n\thasNamed: function(list, name) {\n\t\treturn !!this.getNamed(list, name);\n\t},\n\n\tfilter: function(dest, source, exclude, prioritize) {\n\t\tvar processed;\n\n\t\tfunction handleKey(key) {\n\t\t\tif (!(exclude && key in exclude) &&\n\t\t\t\t!(processed && key in processed)) {\n\t\t\t\tvar value = source[key];\n\t\t\t\tif (value !== undefined)\n\t\t\t\t\tdest[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tif (prioritize) {\n\t\t\tvar keys = {};\n\t\t\tfor (var i = 0, key, l = prioritize.length; i < l; i++) {\n\t\t\t\tif ((key = prioritize[i]) in source) {\n\t\t\t\t\thandleKey(key);\n\t\t\t\t\tkeys[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessed = keys;\n\t\t}\n\n\t\tObject.keys(source.__unfiltered || source).forEach(handleKey);\n\t\treturn dest;\n\t},\n\n\tisPlainValue: function(obj, asString) {\n\t\treturn Base.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t|| asString && typeof obj === 'string';\n\t},\n\n\tserialize: function(obj, options, compact, dictionary) {\n\t\toptions = options || {};\n\n\t\tvar isRoot = !dictionary,\n\t\t\tres;\n\t\tif (isRoot) {\n\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\tdictionary = {\n\t\t\t\tlength: 0,\n\t\t\t\tdefinitions: {},\n\t\t\t\treferences: {},\n\t\t\t\tadd: function(item, create) {\n\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t}\n\t\t\t\t\treturn ref;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif (obj && obj._serialize) {\n\t\t\tres = obj._serialize(options, dictionary);\n\t\t\tvar name = obj._class;\n\t\t\tif (name && !obj._compactSerialize && (isRoot || !compact)\n\t\t\t\t\t&& res[0] !== name) {\n\t\t\t\tres.unshift(name);\n\t\t\t}\n\t\t} else if (Array.isArray(obj)) {\n\t\t\tres = [];\n\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\tres[i] = Base.serialize(obj[i], options, compact, dictionary);\n\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\tres = {};\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\tdictionary);\n\t\t\t}\n\t\t} else if (typeof obj === 'number') {\n\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t} else {\n\t\t\tres = obj;\n\t\t}\n\t\treturn isRoot && dictionary.length > 0\n\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t: res;\n\t},\n\n\tdeserialize: function(json, create, _data, _setDictionary, _isRoot) {\n\t\tvar res = json,\n\t\t\tisFirst = !_data,\n\t\t\thasDictionary = isFirst && json && json.length\n\t\t\t\t&& json[0][0] === 'dictionary';\n\t\t_data = _data || {};\n\t\tif (Array.isArray(json)) {\n\t\t\tvar type = json[0],\n\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\tif (json.length == 1 && /^#/.test(type)) {\n\t\t\t\treturn _data.dictionary[type];\n\t\t\t}\n\t\t\ttype = Base.exports[type];\n\t\t\tres = [];\n\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\tisDictionary, hasDictionary));\n\t\t\t}\n\t\t\tif (type) {\n\t\t\t\tvar args = res;\n\t\t\t\tif (create) {\n\t\t\t\t\tres = create(type, args, isFirst || _isRoot);\n\t\t\t\t} else {\n\t\t\t\t\tres = new type(args);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Base.isPlainObject(json)) {\n\t\t\tres = {};\n\t\t\tif (_setDictionary)\n\t\t\t\t_data.dictionary = res;\n\t\t\tfor (var key in json)\n\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t}\n\t\treturn hasDictionary ? res[1] : res;\n\t},\n\n\texportJSON: function(obj, options) {\n\t\tvar json = Base.serialize(obj, options);\n\t\treturn options && options.asString == false\n\t\t\t\t? json\n\t\t\t\t: JSON.stringify(json);\n\t},\n\n\timportJSON: function(json, target) {\n\t\treturn Base.deserialize(\n\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\tfunction(ctor, args, isRoot) {\n\t\t\t\t\tvar useTarget = isRoot && target\n\t\t\t\t\t\t\t&& target.constructor === ctor,\n\t\t\t\t\t\tobj = useTarget ? target\n\t\t\t\t\t\t\t: Base.create(ctor.prototype);\n\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t&& (useTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\tif (Base.isPlainObject(arg)) {\n\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t\tif (useTarget) {\n\t\t\t\t\t\t\t\targs = args.concat([{ insert: true }]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(useTarget ? obj.set : ctor).apply(obj, args);\n\t\t\t\t\tif (useTarget)\n\t\t\t\t\t\ttarget = null;\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t},\n\n\tpush: function(list, items) {\n\t\tvar itemsLength = items.length;\n\t\tif (itemsLength < 4096) {\n\t\t\tlist.push.apply(list, items);\n\t\t} else {\n\t\t\tvar startLength = list.length;\n\t\t\tlist.length += itemsLength;\n\t\t\tfor (var i = 0; i < itemsLength; i++) {\n\t\t\t\tlist[startLength + i] = items[i];\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t},\n\n\tsplice: function(list, items, index, remove) {\n\t\tvar amount = items && items.length,\n\t\t\tappend = index === undefined;\n\t\tindex = append ? list.length : index;\n\t\tif (index > list.length)\n\t\t\tindex = list.length;\n\t\tfor (var i = 0; i < amount; i++)\n\t\t\titems[i]._index = index + i;\n\t\tif (append) {\n\t\t\tBase.push(list, items);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tvar args = [index, remove];\n\t\t\tif (items)\n\t\t\t\tBase.push(args, items);\n\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\tremoved[i]._index = undefined;\n\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\tlist[i]._index = i;\n\t\t\treturn removed;\n\t\t}\n\t},\n\n\tcapitalize: function(str) {\n\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\treturn match.toUpperCase();\n\t\t});\n\t},\n\n\tcamelize: function(str) {\n\t\treturn str.replace(/-(.)/g, function(match, chr) {\n\t\t\treturn chr.toUpperCase();\n\t\t});\n\t},\n\n\thyphenate: function(str) {\n\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t}\n}});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function handler() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, handler);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = Base.slice(arguments, 1),\n\t\t\tsetTarget = event && event.target && !event.currentTarget;\n\t\thandlers = handlers.slice();\n\t\tif (setTarget)\n\t\t\tevent.currentTarget = this;\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) == false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t   }\n\t\t}\n\t\tif (setTarget)\n\t\t\tdelete event.currentTarget;\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar types = this._eventTypes,\n\t\t\thandlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tif (types) {\n\t\t\tfor (var type in handlers) {\n\t\t\t\tif (handlers[type].length > 0) {\n\t\t\t\t\tvar entry = types[type],\n\t\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\t\tif (func)\n\t\t\t\t\t\tfunc.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\tinsertItems: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1) || {};\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\t\tif (!this.agent) {\n\t\t\tvar user = self.navigator.userAgent.toLowerCase(),\n\t\t\t\tos = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user)||[])[0],\n\t\t\t\tplatform = os === 'darwin' ? 'mac' : os,\n\t\t\t\tagent = proto.agent = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tagent[platform] = true;\n\t\t\tuser.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g,\n\t\t\t\tfunction(match, n, v1, v2, rv) {\n\t\t\t\t\tif (!agent.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 :\n\t\t\t\t\t\t\t\t/^(node|trident)$/.test(n) ? rv : v1;\n\t\t\t\t\t\tagent.version = v;\n\t\t\t\t\t\tagent.versionNumber = parseFloat(v);\n\t\t\t\t\t\tn = { trident: 'msie', jsdom: 'node' }[n] || n;\n\t\t\t\t\t\tagent.name = n;\n\t\t\t\t\t\tagent[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (agent.chrome)\n\t\t\t\tdelete agent.webkit;\n\t\t\tif (agent.atom)\n\t\t\t\tdelete agent.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.12.2\",\n\n\tgetView: function() {\n\t\tvar project = this.project;\n\t\treturn project && project._view;\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, options) {\n\t\t\tvar exports = paper.PaperScript.execute(code, this, options);\n\t\t\tView.updateFocus();\n\t\t\treturn exports;\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tcreateCanvas: function(width, height) {\n\t\treturn CanvasProvider.getCanvas(width, height);\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tvar projects = this.projects,\n\t\t\ttools = this.tools;\n\t\tfor (var i = projects.length - 1; i >= 0; i--)\n\t\t\tprojects[i].remove();\n\t\tfor (var i = tools.length - 1; i >= 0; i--)\n\t\t\ttools[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._scope.getView();\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = Base.pick(precision, 5);\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn this.precision < 16\n\t\t\t\t? Math.round(val * this.multiplier) / this.multiplier : val;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tlog2 = Math.log2 || function(x) {\n\t\t\treturn Math.log(x) * Math.LOG2E;\n\t\t},\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clamp(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\tfunction getDiscriminant(a, b, c) {\n\t\tfunction split(v) {\n\t\t\tvar x = v * 134217729,\n\t\t\t\ty = v - x,\n\t\t\t\thi = y + x,\n\t\t\t\tlo = v - hi;\n\t\t\treturn [hi, lo];\n\t\t}\n\n\t\tvar D = b * b - a * c,\n\t\t\tE = b * b + a * c;\n\t\tif (abs(D) * 3 < E) {\n\t\t\tvar ad = split(a),\n\t\t\t\tbd = split(b),\n\t\t\t\tcd = split(c),\n\t\t\t\tp = b * b,\n\t\t\t\tdp = (bd[0] * bd[0] - p + 2 * bd[0] * bd[1]) + bd[1] * bd[1],\n\t\t\t\tq = a * c,\n\t\t\t\tdq = (ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0])\n\t\t\t\t\t\t+ ad[1] * cd[1];\n\t\t\tD = (p - q) + (dp - dq);\n\t\t}\n\t\treturn D;\n\t}\n\n\tfunction getNormalizationFactor() {\n\t\tvar norm = Math.max.apply(Math, arguments);\n\t\treturn norm && (norm < 1e-8 || norm > 1e8)\n\t\t\t\t? pow(2, -Math.round(log2(norm)))\n\t\t\t\t: 0;\n\t}\n\n\treturn {\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 1e-8,\n\t\tGEOMETRIC_EPSILON: 1e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-8,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tclamp: clamp,\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clamp(x, a, b);\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar x1, x2 = Infinity;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(b) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / b;\n\t\t\t} else {\n\t\t\t\tb *= -0.5;\n\t\t\t\tvar D = getDiscriminant(a, b, c);\n\t\t\t\tif (D && abs(D) < MACHINE_EPSILON) {\n\t\t\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\t\t\t\t\tif (f) {\n\t\t\t\t\t\ta *= f;\n\t\t\t\t\t\tb *= f;\n\t\t\t\t\t\tc *= f;\n\t\t\t\t\t\tD = getDiscriminant(a, b, c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\t\tif (R === 0) {\n\t\t\t\t\t\tx1 = c / a;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = R / a;\n\t\t\t\t\t\tx2 = c / R;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = 0,\n\t\t\t\tboundless = min == null,\n\t\t\t\tminB = min - EPSILON,\n\t\t\t\tmaxB = max + EPSILON;\n\t\t\tif (isFinite(x1) && (boundless || x1 > minB && x1 < maxB))\n\t\t\t\troots[count++] = boundless ? x1 : clamp(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (boundless || x2 > minB && x2 < maxB))\n\t\t\t\troots[count++] = boundless ? x2 : clamp(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n\t\t\t\tx, b1, c2, qd, q;\n\t\t\tif (f) {\n\t\t\t\ta *= f;\n\t\t\t\tb *= f;\n\t\t\t\tc *= f;\n\t\t\t\td *= f;\n\t\t\t}\n\n\t\t\tfunction evaluate(x0) {\n\t\t\t\tx = x0;\n\t\t\t\tvar tmp = a * x;\n\t\t\t\tb1 = tmp + b;\n\t\t\t\tc2 = b1 * x + c;\n\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\tq = c2 * x + d;\n\t\t\t}\n\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tevaluate(-(b / a) / 3);\n\t\t\t\tvar t = q / a,\n\t\t\t\t\tr = pow(abs(t), 1/3),\n\t\t\t\t\ts = t < 0 ? -1 : 1,\n\t\t\t\t\ttd = -qd / a,\n\t\t\t\t\trd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n\t\t\t\t\tx0 = x - s * rd;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tevaluate(x0);\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n\t\t\t\tboundless = min == null;\n\t\t\tif (isFinite(x) && (count === 0\n\t\t\t\t\t|| count > 0 && x !== roots[0] && x !== roots[1])\n\t\t\t\t\t&& (boundless || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = boundless ? x : clamp(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(name) {\n\t\tif (name) {\n\t\t\tvar pool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasY ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('angle' in obj) {\n\t\t\t\tthis._set(obj.length || 0, 0);\n\t\t\t\tthis.setAngle(obj.angle || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis._set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) <= tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.x) && isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tisInQuadrant: function(q) {\n\t\treturn this.x * (q > 1 && q < 4 ? -1 : 1) >= 0\n\t\t\t&& this.y * (q > 2 ? -1 : 1) >= 0;\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\treturn this._setter === 'setPosition' ? 4 : 0;\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasHeight ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.width) && isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread;\n\t\tif (type === 'number') {\n\t\t\tthis._set(arg0, arg1, arg2, arg3);\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0, 0, 0);\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis._set.apply(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis._set(arg0.x || 0, arg0.y || 0,\n\t\t\t\t\t\targ0.width || 0, arg0.height || 0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis._set(0, 0, 0, 0);\n\t\t\t\tBase.filter(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (read === undefined) {\n\t\t\tvar frm = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments),\n\t\t\t\tx = frm.x,\n\t\t\t\ty = frm.y,\n\t\t\t\twidth,\n\t\t\t\theight;\n\t\t\tif (next && next.x !== undefined\n\t\t\t\t\t|| Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\twidth = to.x - x;\n\t\t\t\theight = to.y - y;\n\t\t\t\tif (width < 0) {\n\t\t\t\t\tx = to.x;\n\t\t\t\t\twidth = -width;\n\t\t\t\t}\n\t\t\t\tif (height < 0) {\n\t\t\t\t\ty = to.y;\n\t\t\t\t\theight = -height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\twidth = size.width;\n\t\t\t\theight = size.height;\n\t\t\t}\n\t\t\tthis._set(x, y, width, height);\n\t\t\tread = arguments.__index;\n\t\t\tvar filtered = arguments.__filtered;\n\t\t\tif (filtered)\n\t\t\t\tthis.__filtered = filtered;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\t_fw: 1,\n\t_fh: 1,\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tsx = this._sx,\n\t\t\tsy = this._sy,\n\t\t\tw = size.width,\n\t\t\th = size.height;\n\t\tif (sx) {\n\t\t\tthis.x += (this.width - w) * sx;\n\t\t}\n\t\tif (sy) {\n\t\t\tthis.y += (this.height - h) * sy;\n\t\t}\n\t\tthis.width = w;\n\t\tthis.height = h;\n\t\tthis._fw = this._fh = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = left - this.x;\n\t\t\tthis.width -= this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = left;\n\t\tthis._sx = this._fw = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = top - this.y;\n\t\t\tthis.height -= this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = top;\n\t\tthis._sy = this._fh = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = right - this.x;\n\t\t\tthis.width = this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = right - this.width;\n\t\tthis._sx = 1;\n\t\tthis._fw = 0;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = bottom - this.y;\n\t\t\tthis.height = this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = bottom - this.height;\n\t\tthis._sy = 1;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width / 2;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tif (this._fw || this._sx === 0.5) {\n\t\t\tthis.x = x - this.width / 2;\n\t\t} else {\n\t\t\tif (this._sx) {\n\t\t\t\tthis.x += (x - this.x) * 2 * this._sx;\n\t\t\t}\n\t\t\tthis.width = (x - this.x) * 2;\n\t\t}\n\t\tthis._sx = 0.5;\n\t\tthis._fw = 0;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height / 2;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tif (this._fh || this._sy === 0.5) {\n\t\t\tthis.y = y - this.height / 2;\n\t\t} else {\n\t\t\tif (this._sy) {\n\t\t\t\tthis.y += (y - this.y) * 2 * this._sy;\n\t\t\t}\n\t\t\tthis.height = (y - this.y) * 2;\n\t\t}\n\t\tthis._sy = 0.5;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length === 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tepsilon = Base.read(arguments) || 0;\n\t\treturn rect.x + rect.width > this.x - epsilon\n\t\t\t\t&& rect.y + rect.height > this.y - epsilon\n\t\t\t\t&& rect.x < this.x + this.width + epsilon\n\t\t\t\t&& rect.y < this.y + this.height + epsilon;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join(''),\n\t\t\txFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis._set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key),\n\t\t\tinternal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn !!(this._owner._selection & 2);\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner._changeSelection) {\n\t\t\t\t\towner._changeSelection(2, selected);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg, _dontNotify) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count >= 6) {\n\t\t\tthis._set.apply(this, arguments);\n\t\t} else if (count === 1 || count === 2) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty,\n\t\t\t\t\t\t_dontNotify);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis._set.apply(this,\n\t\t\t\t\t\t_dontNotify ? arg.concat([_dontNotify]) : arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (!count) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok) {\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t\t}\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(a, b, c, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._b = b;\n\t\tthis._c = c;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.getValues(), options, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(25);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._c),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._b), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._b = this._c = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._c;\n\t\tthis._ty += x * this._b + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._b *= scale.x;\n\t\tthis._c *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * c;\n\t\tthis._b = cos * b + sin * d;\n\t\tthis._c = -sin * a + cos * c;\n\t\tthis._d = -sin * b + cos * d;\n\t\tthis._tx += tx * a + ty * c;\n\t\tthis._ty += tx * b + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tb = this._b;\n\t\tthis._a += shear.y * this._c;\n\t\tthis._b += shear.y * this._d;\n\t\tthis._c += shear.x * a;\n\t\tthis._d += shear.x * b;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tappend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + c2 * c1;\n\t\t\tthis._c = b2 * a1 + d2 * c1;\n\t\t\tthis._b = a2 * b1 + c2 * d1;\n\t\t\tthis._d = b2 * b1 + d2 * d1;\n\t\t\tthis._tx += tx2 * a1 + ty2 * c1;\n\t\t\tthis._ty += tx2 * b1 + ty2 * d1;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tprepend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + b2 * b1;\n\t\t\tthis._c = a2 * c1 + b2 * d1;\n\t\t\tthis._b = c2 * a1 + d2 * b1;\n\t\t\tthis._d = c2 * c1 + d2 * d1;\n\t\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tappended: function(mx) {\n\t\treturn this.clone().append(mx);\n\t},\n\n\tprepended: function(mx) {\n\t\treturn this.clone().prepend(mx);\n\t},\n\n\tinvert: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tthis._a = d / det;\n\t\t\tthis._b = -b / det;\n\t\t\tthis._c = -c / det;\n\t\t\tthis._d = a / det;\n\t\t\tthis._tx = (c * ty - d * tx) / det;\n\t\t\tthis._ty = (b * tx - a * ty) / det;\n\t\t\tres = this;\n\t\t}\n\t\treturn res;\n\t},\n\n\tinverted: function() {\n\t\treturn this.clone().invert();\n\t},\n\n\tconcatenate: '#append',\n\tpreConcatenate: '#prepend',\n\tchain: '#appended',\n\n\t_shiftless: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n\t},\n\n\t_orNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\tisInvertible: function() {\n\t\tvar det = this._a * this._d - this._c * this._b;\n\t\treturn det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n\t},\n\n\tisSingular: function() {\n\t\treturn !this.isInvertible();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest._set(\n\t\t\t\tx * this._a + y * this._c + this._tx,\n\t\t\t\tx * this._b + y * this._d + this._ty,\n\t\t\t\t_dontNotify);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tfor (var i = 0, max = 2 * count; i < max; i += 2) {\n\t\t\tvar x = src[i],\n\t\t\t\ty = src[i + 1];\n\t\t\tdst[i] = x * this._a + y * this._c + this._tx;\n\t\t\tdst[i + 1] = x * this._b + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j]) {\n\t\t\t\tmin[j] = val;\n\t\t\t} else if (val > max[j]) {\n\t\t\t\tmax[j] = val;\n\t\t\t}\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tvar x = point.x - this._tx,\n\t\t\t\ty = point.y - this._ty;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\tres = dest._set(\n\t\t\t\t\t(x * d - y * c) / det,\n\t\t\t\t\t(y * a - x * b) / det,\n\t\t\t\t\t_dontNotify);\n\t\t}\n\t\treturn res;\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\tdet = a * d - b * c,\n\t\t\tsqrt = Math.sqrt,\n\t\t\tatan2 = Math.atan2,\n\t\t\tdegrees = 180 / Math.PI,\n\t\t\trotate,\n\t\t\tscale,\n\t\t\tskew;\n\t\tif (a !== 0 || b !== 0) {\n\t\t\tvar r = sqrt(a * a + b * b);\n\t\t\trotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n\t\t\tscale = [r, det / r];\n\t\t\tskew = [atan2(a * c + b * d, r * r), 0];\n\t\t} else if (c !== 0 || d !== 0) {\n\t\t\tvar s = sqrt(c * c + d * d);\n\t\t\trotate = Math.asin(c / s)  * (d > 0 ? 1 : -1);\n\t\t\tscale = [det / s, s];\n\t\t\tskew = [0, atan2(a * c + b * d, s * s)];\n\t\t} else {\n\t\t\trotate = 0;\n\t\t\tskew = scale = [0, 0];\n\t\t}\n\t\treturn {\n\t\t\ttranslation: this.getTranslation(),\n\t\t\trotation: rotate * degrees,\n\t\t\tscaling: new Point(scale),\n\t\t\tskewing: new Point(skew[0] * degrees, skew[1] * degrees)\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._b, this._c, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn this.decompose().scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn this.decompose().rotation;\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tif (!this.isIdentity()) {\n\t\t\tctx.transform(this._a, this._b, this._c, this._d,\n\t\t\t\t\tthis._tx, this._ty);\n\t\t}\n\t}\n}, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function(key) {\n\tvar part = Base.capitalize(key),\n\t\tprop = '_' + key;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(this.getSignedDistance(point));\n\t},\n\n\tgetSignedDistance: function(point) {\n\t\treturn Line.getSignedDistance(this._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (!isInfinite && Numerical.isZero(ccw)) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t},\n\n\t\tgetDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\treturn Math.abs(\n\t\t\t\t\tLine.getSignedDistance(px, py, vx, vy, x, y, asVector));\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\t_compactSerialize: true,\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tthis._activeLayer = null;\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectionItems = {};\n\t\tthis._selectionCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this._children, options, true, dictionary);\n\t},\n\n\t_changed: function(flags, item) {\n\t\tif (flags & 1) {\n\t\t\tvar view = this._view;\n\t\t\tif (view) {\n\t\t\t\tview._needsUpdate = true;\n\t\t\t\tif (!view._requested && view._autoUpdate)\n\t\t\t\t\tview.requestUpdate();\n\t\t\t}\n\t\t}\n\t\tvar changes = this._changes;\n\t\tif (changes && item) {\n\t\t\tvar changesById = this._changesById,\n\t\t\t\tid = item._id,\n\t\t\t\tentry = changesById[id];\n\t\t\tif (entry) {\n\t\t\t\tentry.flags |= flags;\n\t\t\t} else {\n\t\t\t\tchanges.push(changesById[id] = { item: item, flags: flags });\n\t\t\t}\n\t\t}\n\t},\n\n\tclear: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--)\n\t\t\tchildren[i].remove();\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children.length;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.set(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetLayers: function() {\n\t\treturn this._children;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this, insert: true });\n\t},\n\n\tgetSymbolDefinitions: function() {\n\t\tvar definitions = [],\n\t\t\tids = {};\n\t\tthis.getItems({\n\t\t\tclass: SymbolItem,\n\t\t\tmatch: function(item) {\n\t\t\t\tvar definition = item._definition,\n\t\t\t\t\tid = definition._id;\n\t\t\t\tif (!ids[id]) {\n\t\t\t\t\tids[id] = true;\n\t\t\t\t\tdefinitions.push(definition);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn definitions;\n\t},\n\n\tgetSymbols: 'getSymbolDefinitions',\n\n\tgetSelectedItems: function() {\n\t\tvar selectionItems = this._selectionItems,\n\t\t\titems = [];\n\t\tfor (var id in selectionItems) {\n\t\t\tvar item = selectionItems[id],\n\t\t\t\tselection = item._selection;\n\t\t\tif ((selection & 1) && item.isInserted()) {\n\t\t\t\titems.push(item);\n\t\t\t} else if (!selection) {\n\t\t\t\tthis._updateSelection(item);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectionItems = this._selectionItems;\n\t\tif (item._selection) {\n\t\t\tif (selectionItems[id] !== item) {\n\t\t\t\tthis._selectionCount++;\n\t\t\t\tselectionItems[id] = item;\n\t\t\t}\n\t\t} else if (selectionItems[id] === item) {\n\t\t\tthis._selectionCount--;\n\t\t\tdelete selectionItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectionItems = this._selectionItems;\n\t\tfor (var i in selectionItems)\n\t\t\tselectionItems[i].setFullySelected(false);\n\t},\n\n\taddLayer: function(layer) {\n\t\treturn this.insertLayer(undefined, layer);\n\t},\n\n\tinsertLayer: function(index, layer) {\n\t\tif (layer instanceof Layer) {\n\t\t\tlayer._remove(false, true);\n\t\t\tBase.splice(this._children, [layer], index, 0);\n\t\t\tlayer._setProject(this, true);\n\t\t\tvar name = layer._name;\n\t\t\tif (name)\n\t\t\t\tlayer.setName(name);\n\t\t\tif (this._changes)\n\t\t\t\tlayer._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = layer;\n\t\t} else {\n\t\t\tlayer = null;\n\t\t}\n\t\treturn layer;\n\t},\n\n\t_insertItem: function(index, item, _created) {\n\t\titem = this.insertLayer(index, item)\n\t\t\t\t|| (this._activeLayer || this._insertItem(undefined,\n\t\t\t\t\t\tnew Layer(Item.NO_INSERT), true))\n\t\t\t\t\t\t.insertChild(index, item);\n\t\tif (_created && item.activate)\n\t\t\titem.activate();\n\t\treturn item;\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tremoveOn: function(type) {\n\t\tvar sets = this._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar children = this._children,\n\t\t\tparam = new Base({\n\t\t\t\toffset: new Point(0, 0),\n\t\t\t\tpixelRatio: pixelRatio,\n\t\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\t\tmatrices: [new Matrix()],\n\t\t\t\tupdateMatrix: true\n\t\t\t});\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].draw(ctx, param);\n\t\t}\n\t\tctx.restore();\n\n\t\tif (this._selectionCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectionItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items) {\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = Base.set({},\n\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_name: null,\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_canScaleStroke: false,\n\t_pivot: null,\n\t_visible: true,\n\t_blendMode: 'normal',\n\t_opacity: 1,\n\t_locked: false,\n\t_guide: false,\n\t_clipMask: false,\n\t_selection: 0,\n\t_selectBounds: true,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tlocked: false,\n\t\tguide: false,\n\t\tclipMask: false,\n\t\tselected: false,\n\t\tdata: {}\n\t},\n\t_prioritize: ['applyMatrix']\n},\nnew function() {\n\tvar handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n\treturn Base.each(handlers,\n\t\tfunction(name) {\n\t\t\tthis._events[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, 1);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, -1);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\t_events: {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t\t},\n\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {},\n\t\t\t\tonError: {}\n\t\t\t},\n\t\t\tstatics: {\n\t\t\t\t_itemHandlers: handlers\n\t\t\t}\n\t\t}\n\t);\n}, {\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project,\n\t\t\tsettings = paper.settings;\n\t\tthis._id = internal ? null : UID.get();\n\t\tthis._parent = this._index = null;\n\t\tthis._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (internal || hasProps && props.insert == false\n\t\t\t|| !settings.insertItems && !(hasProps && props.insert === true)) {\n\t\t\tthis._setProject(project);\n\t\t} else {\n\t\t\t(hasProps && props.parent || project)\n\t\t\t\t\t._insertItem(undefined, this, true);\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT) {\n\t\t\tthis.set(props, {\n\t\t\t\tinternal: true, insert: true, project: true, parent: true\n\t\t\t});\n\t\t}\n\t\treturn hasProps;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._symbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed = undefined;\n\t\t}\n\t\tif (flags & 16) {\n\t\t\tthis._globalMatrix = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 72)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project)\n\t\t\tproject._changed(flags, this);\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar owner = this._getOwner();\n\t\tif (name && owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren;\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tif (!(name in children))\n\t\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(256);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tkey = '_' + name,\n\t\t\tflags = {\n\t\t\t\tlocked: 256,\n\t\t\t\tvisible: 265\n\t\t\t};\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[key];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[key]) {\n\t\t\t\tthis[key] = value;\n\t\t\t\tthis._changed(flags[name] || 257);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tif (selection !== this._selection) {\n\t\t\tthis._selection = selection;\n\t\t\tvar project = this._project;\n\t\t\tif (project) {\n\t\t\t\tproject._updateSelection(this);\n\t\t\t\tthis._changed(257);\n\t\t\t}\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn !!(this._selection & 1);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisFullySelected: function() {\n\t\tvar children = this._children,\n\t\t\tselected = !!(this._selection & 1);\n\t\tif (children && selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(257);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(2048);\n\t\t}\n\t},\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\tvar position = this._position ||\n\t\t\t(this._position = this._getPositionFromBounds());\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\t_getPositionFromBounds: function(bounds) {\n\t\treturn this._pivot\n\t\t\t\t? this._matrix._transformPoint(this._pivot)\n\t\t\t\t: (bounds || this.getBounds()).getCenter(true);\n\t},\n\n\tgetPivot: function() {\n\t\tvar pivot = this._pivot;\n\t\treturn pivot\n\t\t\t\t? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot')\n\t\t\t\t: null;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t}\n}, Base.each({\n\t\tgetStrokeBounds: { stroke: true },\n\t\tgetHandleBounds: { handle: true },\n\t\tgetInternalBounds: { internal: true }\n\t},\n\tfunction(options, key) {\n\t\tthis[key] = function(matrix) {\n\t\t\treturn this.getBounds(matrix, options);\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\tgetBounds: function(matrix, options) {\n\t\tvar hasMatrix = options || matrix instanceof Matrix,\n\t\t\topts = Base.set({}, hasMatrix ? options : matrix,\n\t\t\t\t\tthis._boundsOptions);\n\t\tif (!opts.stroke || this.getStrokeScaling())\n\t\t\topts.cacheItem = this;\n\t\tvar rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\t\treturn !arguments.length\n\t\t\t\t? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height,\n\t\t\t\t\tthis, 'setBounds')\n\t\t\t\t: rect;\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\t_matrix = this._matrix,\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tif (!_matrix.isInvertible()) {\n\t\t\t\t_matrix.set(_matrix._backup\n\t\t\t\t\t\t|| new Matrix().translate(_matrix.getTranslation()));\n\t\t\t\tbounds = this.getBounds();\n\t\t\t}\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width !== 0 ? rect.width / bounds.width : 0,\n\t\t\t\t\tbounds.height !== 0 ? rect.height / bounds.height : 0);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar children = this._children;\n\t\tif (!children || !children.length)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, options.cacheItem);\n\t\treturn Item._getBounds(children, matrix, options);\n\t},\n\n\t_getBoundsCacheKey: function(options, internal) {\n\t\treturn [\n\t\t\toptions.stroke ? 1 : 0,\n\t\t\toptions.handle ? 1 : 0,\n\t\t\tinternal ? 1 : 0\n\t\t].join('');\n\t},\n\n\t_getCachedBounds: function(matrix, options, noInternal) {\n\t\tmatrix = matrix && matrix._orNullIfIdentity();\n\t\tvar internal = options.internal && !noInternal,\n\t\t\tcacheItem = options.cacheItem,\n\t\t\t_matrix = internal ? null : this._matrix._orNullIfIdentity(),\n\t\t\tcacheKey = cacheItem && (!matrix || matrix.equals(_matrix))\n\t\t\t\t&& this._getBoundsCacheKey(options, internal),\n\t\t\tbounds = this._bounds;\n\t\tItem._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\t\tif (cacheKey && bounds && cacheKey in bounds) {\n\t\t\tvar cached = bounds[cacheKey];\n\t\t\treturn {\n\t\t\t\trect: cached.rect.clone(),\n\t\t\t\tnonscaling: cached.nonscaling\n\t\t\t};\n\t\t}\n\t\tvar res = this._getBounds(matrix || _matrix, options),\n\t\t\trect = res.rect || res,\n\t\t\tstyle = this._style,\n\t\t\tnonscaling = res.nonscaling || style.hasStroke()\n\t\t\t\t&& !style.getStrokeScaling();\n\t\tif (cacheKey) {\n\t\t\tif (!bounds) {\n\t\t\t\tthis._bounds = bounds = {};\n\t\t\t}\n\t\t\tvar cached = bounds[cacheKey] = {\n\t\t\t\trect: rect.clone(),\n\t\t\t\tnonscaling: nonscaling,\n\t\t\t\tinternal: internal\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trect: rect,\n\t\t\tnonscaling: nonscaling\n\t\t};\n\t},\n\n\t_getStrokeMatrix: function(matrix, options) {\n\t\tvar parent = this.getStrokeScaling() ? null\n\t\t\t\t: options && options.internal ? this\n\t\t\t\t\t: this._parent || this._symbol && this._symbol._item,\n\t\t\tmx = parent ? parent.getViewMatrix().invert() : matrix;\n\t\treturn mx && mx._shiftless();\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent && item) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_getBounds: function(items, matrix, options) {\n\t\t\tvar x1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2,\n\t\t\t\tnonscaling = false;\n\t\t\toptions = options || {};\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item._visible && !item.isEmpty(true)) {\n\t\t\t\t\tvar bounds = item._getCachedBounds(\n\t\t\t\t\t\tmatrix && matrix.appended(item._matrix), options, true),\n\t\t\t\t\t\trect = bounds.rect;\n\t\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t\t\tif (bounds.nonscaling)\n\t\t\t\t\t\tnonscaling = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trect: isFinite(x1)\n\t\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t\t: new Rectangle(),\n\t\t\t\tnonscaling: nonscaling\n\t\t\t};\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._applyMatrix\n\t\t\t? null\n\t\t\t: this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decompose();\n\t\treturn decomposed ? decomposed.rotation : 0;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.rotation = rotation;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\ts = decomposed && decomposed.scaling;\n\t\treturn new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling && !current.equals(scaling)) {\n\t\t\tvar rotation = this.getRotation(),\n\t\t\t\tdecomposed = this._decomposed,\n\t\t\t\tmatrix = new Matrix(),\n\t\t\t\tcenter = this.getPosition(true);\n\t\t\tmatrix.translate(center);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(rotation);\n\t\t\tmatrix.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(-rotation);\n\t\t\tmatrix.translate(center.negate());\n\t\t\tthis.transform(matrix);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.scaling = scaling;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix;\n\t\tif (matrix) {\n\t\t\tvar parent = this._parent;\n\t\t\tvar parents = [];\n\t\t\twhile (parent) {\n\t\t\t\tif (!parent._globalMatrix) {\n\t\t\t\t\tmatrix = null;\n\t\t\t\t\tfor (var i = 0, l = parents.length; i < l; i++) {\n\t\t\t\t\t\tparents[i]._globalMatrix = null;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparents.push(parent);\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\t\t}\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.prepend(parent.getGlobalMatrix(true));\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetViewMatrix: function() {\n\t\treturn this.getGlobalMatrix().prepend(this.getView()._matrix);\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\t_getOwner: '#getParent',\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(options) {\n\t\tvar copy = new this.constructor(Item.NO_INSERT),\n\t\t\tchildren = this._children,\n\t\t\tinsert = Base.pick(options ? options.insert : undefined,\n\t\t\t\t\toptions === undefined || options === true),\n\t\t\tdeep = Base.pick(options ? options.deep : undefined, true);\n\t\tif (children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (!children || deep)\n\t\t\tcopy.copyContent(this);\n\t\tif (!children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (insert)\n\t\t\tcopy.insertAbove(this);\n\t\tvar name = this._name,\n\t\t\tparent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\tif (name !== orig)\n\t\t\t\tcopy.setName(name);\n\t\t}\n\t\treturn copy;\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar children = source._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tthis.addChild(children[i].clone(false), true);\n\t\t}\n\t},\n\n\tcopyAttributes: function(source, excludeMatrix) {\n\t\tthis.setStyle(source._style);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (source.hasOwnProperty(key))\n\t\t\t\tthis[key] = source[key];\n\t\t}\n\t\tif (!excludeMatrix)\n\t\t\tthis._matrix.set(source._matrix, true);\n\t\tthis.setApplyMatrix(source._applyMatrix);\n\t\tthis.setPivot(source._pivot);\n\t\tthis.setSelection(source._selection);\n\t\tvar data = source._data,\n\t\t\tname = source._name;\n\t\tthis._data = data ? Base.clone(data) : null;\n\t\tif (name)\n\t\t\tthis.setName(name);\n\t},\n\n\trasterize: function(resolution, insert) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\tif (!size.isZero()) {\n\t\t\tvar canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\traster.setCanvas(canvas);\n\t\t}\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\tif (insert === undefined || insert)\n\t\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tif (children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix, true).length > 0;\n\t}\n},\nnew function() {\n\tfunction hitTest() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(arguments));\n\t}\n\n\tfunction hitTestAll() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(arguments),\n\t\t\tall = [];\n\t\tthis._hitTest(point, Base.set({ all: all }, options));\n\t\treturn all;\n\t}\n\n\tfunction hitTestChildren(point, options, viewMatrix, _exclude) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar res = child !== _exclude && child._hitTest(point, options,\n\t\t\t\t\t\tviewMatrix);\n\t\t\t\tif (res && !options.all)\n\t\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tProject.inject({\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTest: hitTestChildren\n\t});\n\n\treturn {\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTestChildren: hitTestChildren,\n\t};\n}, {\n\n\t_hitTest: function(point, options, parentViewMatrix) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar matrix = this._matrix,\n\t\t\tviewMatrix = parentViewMatrix\n\t\t\t\t\t? parentViewMatrix.appended(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().prepend(this.getView()._matrix),\n\t\t\ttolerance = Math.max(options.tolerance, 1e-12),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\tPath._getStrokePadding(tolerance,\n\t\t\t\t\t\tmatrix._shiftless().invert()));\n\t\tpoint = matrix._inverseTransform(point);\n\t\tif (!point || !this._children &&\n\t\t\t!this.getBounds({ internal: true, stroke: true, handle: true })\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this.isSelected()\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tmatch = options.match,\n\t\t\tthat = this,\n\t\t\tbounds,\n\t\t\tres;\n\n\t\tfunction filter(hit) {\n\t\t\tif (hit && match && !match(hit))\n\t\t\t\thit = null;\n\t\t\tif (hit && options.all)\n\t\t\t\toptions.all.push(hit);\n\t\t\treturn hit;\n\t\t}\n\n\t\tfunction checkPoint(type, part) {\n\t\t\tvar pt = part ? bounds['get' + part]() : that.getPosition();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n\t\t\t\treturn new HitResult(type, that, {\n\t\t\t\t\tname: part ? Base.hyphenate(part) : type,\n\t\t\t\t\tpoint: pt\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar checkPosition = options.position,\n\t\t\tcheckCenter = options.center,\n\t\t\tcheckBounds = options.bounds;\n\t\tif (checkSelf && this._parent\n\t\t\t\t&& (checkPosition || checkCenter || checkBounds)) {\n\t\t\tif (checkCenter || checkBounds) {\n\t\t\t\tbounds = this.getInternalBounds();\n\t\t\t}\n\t\t\tres = checkPosition && checkPoint('position') ||\n\t\t\t\t\tcheckCenter && checkPoint('center', 'Center');\n\t\t\tif (!res && checkBounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++) {\n\t\t\t\t\tres = checkPoint('bounds', points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres = filter(res);\n\t\t}\n\n\t\tif (!res) {\n\t\t\tres = this._hitTestChildren(point, options, viewMatrix)\n\t\t\t\t|| checkSelf\n\t\t\t\t\t&& filter(this._hitTestSelf(point, options, viewMatrix,\n\t\t\t\t\t\tthis.getStrokeScaling() ? null\n\t\t\t\t\t\t\t: viewMatrix._shiftless().invert()))\n\t\t\t\t|| null;\n\t\t}\n\t\tif (res && res.point) {\n\t\t\tres.point = matrix.transform(res.point);\n\t\t}\n\t\treturn res;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else if (name === 'match') {\n\t\t\treturn compare(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (name === 'class') {\n\t\t\t\tif (typeof compare === 'function')\n\t\t\t\t\treturn this instanceof compare;\n\t\t\t\tvalue = this._class;\n\t\t\t}\n\t\t\tif (typeof compare === 'function') {\n\t\t\t\treturn !!compare(value);\n\t\t\t} else if (compare) {\n\t\t\t\tif (compare.test) {\n\t\t\t\t\treturn compare.test(value);\n\t\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\t\treturn matchObject(compare, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Base.equals(value, compare);\n\t\t}\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix, null, true)[0]\n\t\t\t\t|| null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(item, options, matrix, param, firstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar obj = typeof options === 'object' && options,\n\t\t\t\t\toverlapping = obj && obj.overlapping,\n\t\t\t\t\tinside = obj && obj.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\trecursive: obj && obj.recursive !== false,\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (obj) {\n\t\t\t\t\toptions = Base.filter({}, options, {\n\t\t\t\t\t\trecursive: true, inside: true, overlapping: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar children = item._children,\n\t\t\t\titems = param.items,\n\t\t\t\trect = param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.appended(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(rect.contains(bounds)\n\t\t\t\t\t\t\t|| param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(options)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (param.recursive !== false) {\n\t\t\t\t\t_getItems(child, options, childMatrix, param, firstOnly);\n\t\t\t\t}\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this ? this.addChild(res) : res;\n\t},\n\n\taddChild: function(item) {\n\t\treturn this.insertChild(undefined, item);\n\t},\n\n\tinsertChild: function(index, item) {\n\t\tvar res = item ? this.insertChildren(index, [item]) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items) {\n\t\treturn this.insertChildren(this._children.length, items);\n\t},\n\n\tinsertChildren: function(index, items) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Base.slice(items);\n\t\t\tvar inserted = {};\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tid = item && item._id;\n\t\t\t\tif (!item || inserted[id]) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\titem._remove(false, true);\n\t\t\t\t\tinserted[id] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tname = item._name;\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(project, true);\n\t\t\t\tif (name)\n\t\t\t\t\titem.setName(name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\titem._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertItem: '#insertChild',\n\n\t_insertAt: function(item, offset) {\n\t\tvar owner = item && item._getOwner(),\n\t\t\tres = item !== this && owner ? this : null;\n\t\tif (res) {\n\t\t\tres._remove(false, true);\n\t\t\towner._insertItem(item._index + offset, res);\n\t\t}\n\t\treturn res;\n\t},\n\n\tinsertAbove: function(item) {\n\t\treturn this._insertAt(item, 1);\n\t},\n\n\tinsertBelow: function(item) {\n\t\treturn this._insertAt(item, 0);\n\t},\n\n\tsendToBack: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(0, this) : null;\n\t},\n\n\tbringToFront: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(undefined, this) : null;\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\taddTo: function(owner) {\n\t\treturn owner._insertItem(undefined, this);\n\t},\n\n\tcopyTo: function(owner) {\n\t\treturn this.clone(false).addTo(owner);\n\t},\n\n\treduce: function(options) {\n\t\tvar children = this._children;\n\t\tif (children && children.length === 1) {\n\t\t\tvar child = children[0].reduce(options);\n\t\t\tif (this._parent) {\n\t\t\t\tchild.insertAbove(this);\n\t\t\t\tthis.remove();\n\t\t\t} else {\n\t\t\t\tchild.remove();\n\t\t\t}\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar owner = this._getOwner();\n\t\tif (owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[0];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar owner = this._getOwner(),\n\t\t\tproject = this._project,\n\t\t\tindex = this._index;\n\t\tif (this._style)\n\t\t\tthis._style._dispose();\n\t\tif (owner) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (index != null) {\n\t\t\t\tif (project._activeLayer === this)\n\t\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\t\tBase.splice(owner._children, null, index, 1);\n\t\t\t}\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent)\n\t\t\t\towner._changed(11, this);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(start, end) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, start, end - start);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function(recursively) {\n\t\tvar children = this._children;\n\t\tvar numChildren = children ? children.length : 0;\n\t\tif (recursively) {\n\t\t\tfor (var i = 0; i < numChildren; i++) {\n\t\t\t\tif (!children[i].isEmpty(recursively)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn !numChildren;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent === item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar value = (rotate ? Base : Point).read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tvar _matrix = this._matrix,\n\t\t\ttransformMatrix = matrix && !matrix.isIdentity(),\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || transformMatrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!transformMatrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (transformMatrix) {\n\t\t\tif (!matrix.isInvertible() && _matrix.isInvertible())\n\t\t\t\t_matrix._backup = _matrix.getValues();\n\t\t\t_matrix.prepend(matrix, true);\n\t\t\tvar style = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(matrix);\n\t\t}\n\t\tif (applyMatrix && (applyMatrix = this._transformContent(_matrix,\n\t\t\t\t_applyRecursively, _setApplyMatrix))) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tif (transformMatrix || applyMatrix) {\n\t\t\tthis._changed(25);\n\t\t}\n\t\tvar decomp = transformMatrix && bounds && matrix.decompose();\n\t\tif (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar cache = bounds[key];\n\t\t\t\tif (cache.nonscaling) {\n\t\t\t\t\tdelete bounds[key];\n\t\t\t\t} else if (applyMatrix || !cache.internal) {\n\t\t\t\t\tvar rect = cache.rect;\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._bounds = bounds;\n\t\t\tvar cached = bounds[this._getBoundsCacheKey(\n\t\t\t\tthis._boundsOptions || {})];\n\t\t\tif (cached) {\n\t\t\t\tthis._position = this._getPositionFromBounds(cached.rect);\n\t\t\t}\n\t\t} else if (transformMatrix && position && this._pivot) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t}\n}), {\n\n\t_setStyles: function(ctx, param, viewMatrix) {\n\t\tvar style = this._style,\n\t\t\tmatrix = this._matrix;\n\t\tif (style.hasFill()) {\n\t\t\tctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n\t\t}\n\t\tif (style.hasStroke()) {\n\t\t\tctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n\t\t\tctx.lineWidth = style.getStrokeWidth();\n\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\tif (strokeJoin)\n\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\tif (strokeCap)\n\t\t\t\tctx.lineCap = strokeCap;\n\t\t\tif (miterLimit)\n\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\tif (paper.support.nativeDash) {\n\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style.hasShadow()) {\n\t\t\tvar pixelRatio = param.pixelRatio || 1,\n\t\t\t\tmx = viewMatrix._shiftless().prepend(\n\t\t\t\t\tnew Matrix().scale(pixelRatio, pixelRatio)),\n\t\t\t\tblur = mx.transform(new Point(style.getShadowBlur(), 0)),\n\t\t\t\toffset = mx.transform(this.getShadowOffset());\n\t\t\tctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n\t\t\tctx.shadowBlur = blur.getLength();\n\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\tctx.shadowOffsetY = offset.y;\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].appended(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tviewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix)\n\t\t\t\t: globalMatrix;\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(viewMatrix);\n\t\t\tif (!bounds.width || !bounds.height) {\n\t\t\t\tmatrices.pop();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.appended(matrix)\n\t\t\t\t: this._canScaleStroke && !this.getStrokeScaling(true)\n\t\t\t\t\t&& viewMatrix,\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform) {\n\t\t\t(direct ? matrix : viewMatrix).applyToContext(ctx);\n\t\t}\n\t\tif (clip) {\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, viewMatrix, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish) {\n\t\t\tctx.clip(this.getFillRule());\n\t\t}\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectionItems, updateVersion) {\n\t\tvar selection = this._selection,\n\t\t\titemSelected = selection & 1,\n\t\t\tboundsSelected = selection & 2\n\t\t\t\t\t|| itemSelected && this._selectBounds,\n\t\t\tpositionSelected = selection & 4;\n\t\tif (!this._drawSelected)\n\t\t\titemSelected = false;\n\t\tif ((itemSelected || boundsSelected || positionSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar layer,\n\t\t\t\tcolor = this.getSelectedColor(true) || (layer = this.getLayer())\n\t\t\t\t\t&& layer.getSelectedColor(true),\n\t\t\t\tmx = matrix.appended(this.getGlobalMatrix(true)),\n\t\t\t\thalf = size / 2;\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (itemSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectionItems);\n\t\t\tif (positionSelected) {\n\t\t\t\tvar pos = this.getPosition(true),\n\t\t\t\t\tparent = this._parent,\n\t\t\t\t\tpoint = parent ? parent.localToGlobal(pos) : pos,\n\t\t\t\t\tx = point.x,\n\t\t\t\t\ty = point.y;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(x, y, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.stroke();\n\t\t\t\tvar deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n\t\t\t\t\tstart = half,\n\t\t\t\t\tend = size + 1;\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tvar delta = deltas[i],\n\t\t\t\t\t\tdx = delta[0],\n\t\t\t\t\t\tdy = delta[1];\n\t\t\t\t\tctx.moveTo(x + dx * start, y + dy * start);\n\t\t\t\t\tctx.lineTo(x + dx * end, y + dy * end);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (boundsSelected) {\n\t\t\t\tvar coords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(key) {\n\tthis['removeOn' + Base.capitalize(key)] = function() {\n\t\tvar hash = {};\n\t\thash[key] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}), {\n\ttween: function(from, to, options) {\n\t\tif (!options) {\n\t\t\toptions = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t\tif (!options) {\n\t\t\t\toptions = to;\n\t\t\t\tto = null;\n\t\t\t}\n\t\t}\n\t\tvar easing = options && options.easing,\n\t\t\tstart = options && options.start,\n\t\t\tduration = options != null && (\n\t\t\t\ttypeof options === 'number' ? options : options.duration\n\t\t\t),\n\t\t\ttween = new Tween(this, from, to, duration, easing, start);\n\t\tfunction onFrame(event) {\n\t\t\ttween._handleFrame(event.time * 1000);\n\t\t\tif (!tween.running) {\n\t\t\t\tthis.off('frame', onFrame);\n\t\t\t}\n\t\t}\n\t\tif (duration) {\n\t\t\tthis.on('frame', onFrame);\n\t\t}\n\t\treturn tween;\n\t},\n\n\ttweenTo: function(to, options) {\n\t\treturn this.tween(null, to, options);\n\t},\n\n\ttweenFrom: function(from, options) {\n\t\treturn this.tween(from, null, options);\n\t}\n});\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectBounds: false,\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 2050) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tif (children[i]._clipMask) {\n\t\t\t\t\tclipItem = children[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_getBounds: function _getBounds(matrix, options) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn clipItem\n\t\t\t? clipItem._getCachedBounds(clipItem._matrix.prepended(matrix),\n\t\t\t\tBase.set({}, options, { stroke: false }))\n\t\t\t: _getBounds.base.call(this, matrix, options);\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn (!clipItem || clipItem.contains(point))\n\t\t\t\t&& _hitTestChildren.base.call(this, point, options, viewMatrix,\n\t\t\t\t\tclipItem);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem();\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tctx.beginPath();\n\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif (item !== clipItem)\n\t\t\t\titem.draw(ctx, param);\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer() {\n\t\tGroup.apply(this, arguments);\n\t},\n\n\t_getOwner: function() {\n\t\treturn this._parent || this._index != null && this._project;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_hitTestSelf: function() {\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_canScaleStroke: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props, point) {\n\t\tthis._initialize(props, point);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setType(source._type);\n\t\tthis.setSize(source._size);\n\t\tthis.setRadius(source._radius);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tthis._radius.set(Size.min(this._radius, size.divide(2)));\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius._set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size._set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size._set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size._set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.copyAttributes(this);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\tif (insert === undefined || insert)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\ttoShape: '#clone',\n\n\t_asPathItem: function() {\n\t\treturn this.toPath(false);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\tstyle = this._style,\n\t\t\tstrokeWidth = options.stroke && style.hasStroke()\n\t\t\t\t\t&& style.getStrokeWidth();\n\t\tif (matrix)\n\t\t\trect = matrix._transformBounds(rect);\n\t\treturn strokeWidth\n\t\t\t\t? rect.expand(Path._getStrokePadding(strokeWidth,\n\t\t\t\t\tthis._getStrokeMatrix(matrix, options)))\n\t\t\t\t: rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var q = 1; q <= 4; q++) {\n\t\t\t\tvar dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(\n\t\t\t\t\t\t\texpand ? corner.add(dir.multiply(expand)) : corner,\n\t\t\t\t\t\t\tcenter);\n\t\t\t\tif (rect.contains(point))\n\t\t\t\t\treturn { point: center, quadrant: q };\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction isOnEllipseStroke(point, radius, padding, quadrant) {\n\t\tvar vector = point.divide(radius);\n\t\treturn (!quadrant || vector.isInQuadrant(quadrant)) &&\n\t\t\t\tvector.subtract(vector.normalize()).multiply(radius)\n\t\t\t\t\t.divide(padding).length <= 1;\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center.point).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options, viewMatrix,\n\t\t\t\tstrokeMatrix) {\n\t\t\tvar hit = false,\n\t\t\t\tstyle = this._style,\n\t\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\t\thitFill = options.fill && style.hasFill();\n\t\t\tif (hitStroke || hitFill) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n\t\t\t\t\tstrokePadding = options._tolerancePadding.add(\n\t\t\t\t\t\tPath._getStrokePadding(strokeRadius,\n\t\t\t\t\t\t\t!style.getStrokeScaling() && strokeMatrix));\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar padding = strokePadding.multiply(2),\n\t\t\t\t\t\tcenter = getCornerCenter(this, point, padding);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\thit = isOnEllipseStroke(point.subtract(center.point),\n\t\t\t\t\t\t\t\tradius, strokePadding, center.quadrant);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(padding),\n\t\t\t\t\t\t\tinner = rect.expand(padding.negate());\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thit = isOnEllipseStroke(point, radius, strokePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args), point);\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item;\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n}, {\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: false, handle: false },\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\t_prioritize: ['crossOrigin'],\n\t_smoothing: true,\n\tbeans: true,\n\n\tinitialize: function Raster(source, position) {\n\t\tif (!this._initialize(source,\n\t\t\t\tposition !== undefined && Point.read(arguments))) {\n\t\t\tvar image,\n\t\t\t\ttype = typeof source,\n\t\t\t\tobject = type === 'string'\n\t\t\t\t\t? document.getElementById(source)\n\t\t\t\t\t: type  === 'object'\n\t\t\t\t\t\t? source\n\t\t\t\t\t\t: null;\n\t\t\tif (object && object !== Item.NO_INSERT) {\n\t\t\t\tif (object.getContent || object.naturalHeight != null) {\n\t\t\t\t\timage = object;\n\t\t\t\t} else if (object) {\n\t\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\t\tif (!size.isZero()) {\n\t\t\t\t\t\timage = CanvasProvider.getCanvas(size);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (image) {\n\t\t\t\tthis.setImage(image);\n\t\t\t} else {\n\t\t\t\tthis.setSource(source);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar image = source._image,\n\t\t\tcanvas = source._canvas;\n\t\tif (image) {\n\t\t\tthis._setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(source._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tthis._setImage(copyCanvas);\n\t\t}\n\t\tthis._crossOrigin = source._crossOrigin;\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis._setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tgetLoaded: function() {\n\t\treturn this._loaded;\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tvar that = this;\n\n\t\tfunction emit(event) {\n\t\t\tvar view = that.getView(),\n\t\t\t\ttype = event && event.type || 'load';\n\t\t\tif (view && that.responds(type)) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.emit(type, new Event(event));\n\t\t\t}\n\t\t}\n\n\t\tthis._setImage(image);\n\t\tif (this._loaded) {\n\t\t\tsetTimeout(emit, 0);\n\t\t} else if (image) {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: function(event) {\n\t\t\t\t\tthat._setImage(image);\n\t\t\t\t\temit(event);\n\t\t\t\t},\n\t\t\t\terror: emit\n\t\t\t});\n\t\t}\n\t},\n\n\t_setImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = !!(image && image.src && image.complete);\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(1033);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(_change) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (_change) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(1025);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar image = new self.Image(),\n\t\t\tcrossOrigin = this._crossOrigin;\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (src)\n\t\t\timage.src = src;\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tvar image = this._image;\n\t\tif (image)\n\t\t\timage.crossOrigin = crossOrigin;\n\t},\n\n\tgetSmoothing: function() {\n\t\treturn this._smoothing;\n\t},\n\n\tsetSmoothing: function(smoothing) {\n\t\tthis._smoothing = smoothing;\n\t\tthis._changed(257);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster._setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.prepend(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar image = this._image,\n\t\t\tsrc = image && image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (typeof object === 'object') {\n\t\t\tif ('width' in object) {\n\t\t\t\tbounds = new Rectangle(object);\n\t\t\t} else if ('x' in object) {\n\t\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t\t}\n\t\t}\n\t\tif (!bounds)\n\t\t\treturn null;\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tclear: function() {\n\t\tvar size = this._size;\n\t\tthis.getContext(true).clearRect(0, 0, size.width + 1, size.height + 1);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx, param, viewMatrix) {\n\t\tvar element = this.getElement();\n\t\tif (element && element.width > 0 && element.height > 0) {\n\t\t\tctx.globalAlpha = this._opacity;\n\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\n\t\t\tDomElement.setPrefixed(\n\t\t\t\tctx, 'imageSmoothingEnabled', this._smoothing\n\t\t\t);\n\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar SymbolItem = Item.extend({\n\t_class: 'SymbolItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: true },\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function SymbolItem(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setDefinition(arg0 instanceof SymbolDefinition ?\n\t\t\t\t\targ0 : new SymbolDefinition(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._definition === item._definition;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setDefinition(source._definition);\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(definition) {\n\t\tthis._definition = definition;\n\t\tthis._changed(9);\n\t},\n\n\tgetSymbol: '#getDefinition',\n\tsetSymbol: '#setDefinition',\n\n\tisEmpty: function() {\n\t\treturn this._definition._item.isEmpty();\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar item = this._definition._item;\n\t\treturn item._getCachedBounds(item._matrix.prepended(matrix), options);\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix) {\n\t\tvar res = this._definition._item._hitTest(point, options, viewMatrix);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis._definition._item.draw(ctx, param);\n\t}\n\n});\n\nvar SymbolDefinition = Base.extend({\n\t_class: 'SymbolDefinition',\n\n\tinitialize: function SymbolDefinition(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tif (item)\n\t\t\tthis.setItem(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._item],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8)\n\t\t\tItem._clearBoundsCache(this);\n\t\tif (flags & 1)\n\t\t\tthis.project._changed(flags);\n\t},\n\n\tgetItem: function() {\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item, _dontCenter) {\n\t\tif (item._symbol)\n\t\t\titem = item.clone();\n\t\tif (this._item)\n\t\t\tthis._item._symbol = null;\n\t\tthis._item = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._symbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tgetDefinition: '#getItem',\n\tsetDefinition: '#setItem',\n\n\tplace: function(position) {\n\t\treturn new SymbolItem(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new SymbolDefinition(this._item.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this._item.equals(symbol._item)\n\t\t\t\t|| false;\n\t}\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values)\n\t\t\tthis.inject(values);\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(args) {\n\t\t\tvar options = args && Base.read(args);\n\t\t\treturn Base.set({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tposition: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\t_selection: 0,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut, selection;\n\t\tif (count > 0) {\n\t\t\tif (arg0 == null || typeof arg0 === 'object') {\n\t\t\t\tif (count === 1 && arg0 && 'point' in arg0) {\n\t\t\t\t\tpoint = arg0.point;\n\t\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t\t\tselection = arg0.selection;\n\t\t\t\t} else {\n\t\t\t\t\tpoint = arg0;\n\t\t\t\t\thandleIn = arg1;\n\t\t\t\t\thandleOut = arg2;\n\t\t\t\t\tselection = arg3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpoint = [ arg0, arg1 ];\n\t\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t\t}\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t\tif (selection)\n\t\t\tthis.setSelection(selection);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar point = this._point,\n\t\t\tselection = this._selection,\n\t\t\tobj = selection || this.hasHandles()\n\t\t\t\t\t? [point, this._handleIn, this._handleOut]\n\t\t\t\t\t: point;\n\t\tif (selection)\n\t\t\tobj.push(selection);\n\t\treturn Base.serialize(obj, options, true, dictionary);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(41);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tthis._point.set(Point.read(arguments));\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tthis._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tthis._handleOut.set(Point.read(arguments));\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tisSmooth: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut;\n\t\treturn !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t&& handleIn.isCollinear(handleOut);\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn._set(0, 0);\n\t\tthis._handleOut._set(0, 0);\n\t},\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tvar oldSelection = this._selection,\n\t\t\tpath = this._path;\n\t\tthis._selection = selection = selection || 0;\n\t\tif (path && selection !== oldSelection) {\n\t\t\tpath._updateSelection(this, oldSelection, selection);\n\t\t\tpath._changed(257);\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._selection & 7);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._changeSelection(7, selected);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tsmooth: function(options, _first, _last) {\n\t\tvar opts = options || {},\n\t\t\ttype = opts.type,\n\t\t\tfactor = opts.factor,\n\t\t\tprev = this.getPrevious(),\n\t\t\tnext = this.getNext(),\n\t\t\tp0 = (prev || this)._point,\n\t\t\tp1 = this._point,\n\t\t\tp2 = (next || this)._point,\n\t\t\td1 = p0.getDistance(p1),\n\t\t\td2 = p1.getDistance(p2);\n\t\tif (!type || type === 'catmull-rom') {\n\t\t\tvar a = factor === undefined ? 0.5 : factor,\n\t\t\t\td1_a = Math.pow(d1, a),\n\t\t\t\td1_2a = d1_a * d1_a,\n\t\t\t\td2_a = Math.pow(d2, a),\n\t\t\t\td2_2a = d2_a * d2_a;\n\t\t\tif (!_first && prev) {\n\t\t\t\tvar A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n\t\t\t\t\tN = 3 * d2_a * (d2_a + d1_a);\n\t\t\t\tthis.setHandleIn(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x,\n\t\t\t\t\t\t(d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t\tif (!_last && next) {\n\t\t\t\tvar A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n\t\t\t\t\tN = 3 * d1_a * (d1_a + d2_a);\n\t\t\t\tthis.setHandleOut(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x,\n\t\t\t\t\t\t(d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t} else if (type === 'geometric') {\n\t\t\tif (prev && next) {\n\t\t\t\tvar vector = p0.subtract(p2),\n\t\t\t\t\tt = factor === undefined ? 0.4 : factor,\n\t\t\t\t\tk = t * d1 / (d1 + d2);\n\t\t\t\tif (!_first)\n\t\t\t\t\tthis.setHandleIn(vector.multiply(k));\n\t\t\t\tif (!_last)\n\t\t\t\t\tthis.setHandleOut(vector.multiply(k - t));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Smoothing method \\'' + type + '\\' not supported.');\n\t\t}\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\ttmp = handleIn.clone();\n\t\thandleIn.set(handleOut);\n\t\thandleOut.set(tmp);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar u = 1 - factor,\n\t\t\tv = factor,\n\t\t\tpoint1 = from._point,\n\t\t\tpoint2 = to._point,\n\t\t\thandleIn1 = from._handleIn,\n\t\t\thandleIn2 = to._handleIn,\n\t\t\thandleOut2 = to._handleOut,\n\t\t\thandleOut1 = from._handleOut;\n\t\tthis._point._set(\n\t\t\t\tu * point1._x + v * point2._x,\n\t\t\t\tu * point1._y + v * point2._y, true);\n\t\tthis._handleIn._set(\n\t\t\t\tu * handleIn1._x + v * handleIn2._x,\n\t\t\t\tu * handleIn1._y + v * handleIn2._y, true);\n\t\tthis._handleOut._set(\n\t\t\t\tu * handleOut1._x + v * handleOut2._x,\n\t\t\t\tu * handleOut1._y + v * handleOut2._y, true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y,\n\t\t\tselected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\t_set: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this._x) && isZero(this._y);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\tvar owner = this._owner;\n\t\treturn this === owner._point ? 1\n\t\t\t: this === owner._handleIn ? 2\n\t\t\t: this === owner._handleOut ? 4\n\t\t\t: 0;\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\tbeans: true,\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (!count) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tclassify: function() {\n\t\treturn Curve.classify(this.getValues());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tthis._segment1._point.set(Point.read(arguments));\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tthis._segment2._point.set(Point.read(arguments));\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tthis._segment1._handleOut.set(Point.read(arguments));\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tthis._segment2._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._segment1._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t}\n}, {\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tdivideAt: function(location) {\n\t\treturn this.divideAtTime(location && location.curve === this\n\t\t\t\t? location.time : this.getTimeAt(location));\n\t},\n\n\tdivideAtTime: function(time, _setHandles) {\n\t\tvar tMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (time >= tMin && time <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), time),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tseg1 = this._segment1,\n\t\t\t\tseg2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tseg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\t\t\t\tseg2._handleIn._set(right[4] - right[6],right[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(seg1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tthis._changed();\n\t\t\t\tres = new Curve(segment, seg2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar path = this._path;\n\t\treturn path ? path.splitAt(location) : null;\n\t},\n\n\tsplitAtTime: function(time) {\n\t\treturn this.splitAt(this.getLocationAtTime(time));\n\t},\n\n\tdivide: function(offset, isTime) {\n\t\treturn this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\tsplit: function(offset, isTime) {\n\t\treturn this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut._set(0, 0);\n\t\tthis._segment2._handleIn._set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix, straight) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tx1 = p1.x, y1 = p1.y,\n\t\t\tx2 = p2.x, y2 = p2.y,\n\t\t\tvalues = straight\n\t\t\t\t? [ x1, y1, x1, y1, x2, y2, x2, y2 ]\n\t\t\t\t: [\n\t\t\t\t\tx1, y1,\n\t\t\t\t\tx1 + h1._x, y1 + h1._y,\n\t\t\t\t\tx2 + h2._x, y2 + h2._y,\n\t\t\t\t\tx2, y2\n\t\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tx4 = u * x0 + t * x1, y4 = u * y0 + t * y1,\n\t\t\tx5 = u * x1 + t * x2, y5 = u * y1 + t * y2,\n\t\t\tx6 = u * x2 + t * x3, y6 = u * y2 + t * y3,\n\t\t\tx7 = u * x4 + t * x5, y7 = u * y4 + t * y5,\n\t\t\tx8 = u * x5 + t * x6, y8 = u * y5 + t * y6,\n\t\t\tx9 = u * x7 + t * x8, y9 = u * y7 + t * y8;\n\t\treturn [\n\t\t\t[x0, y0, x4, y4, x7, y7, x9, y9],\n\t\t\t[x9, y9, x8, y8, x6, y6, x3, y3]\n\t\t];\n\t},\n\n\tgetMonoCurves: function(v, dir) {\n\t\tvar curves = [],\n\t\t\tio = dir ? 0 : 1,\n\t\t\to0 = v[io + 0],\n\t\t\to1 = v[io + 2],\n\t\t\to2 = v[io + 4],\n\t\t\to3 = v[io + 6];\n\t\tif ((o0 >= o1) === (o1 >= o2) && (o1 >= o2) === (o2 >= o3)\n\t\t\t\t|| Curve.isStraight(v)) {\n\t\t\tcurves.push(v);\n\t\t} else {\n\t\t\tvar a = 3 * (o1 - o2) - o0 + o3,\n\t\t\t\tb = 2 * (o0 + o2) - 4 * o1,\n\t\t\t\tc = o1 - o0,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [],\n\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\tif (!n) {\n\t\t\t\tcurves.push(v);\n\t\t\t} else {\n\t\t\t\troots.sort();\n\t\t\t\tvar t = roots[0],\n\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\tcurves.push(parts[0]);\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\tcurves.push(parts[0]);\n\t\t\t\t}\n\t\t\t\tcurves.push(parts[1]);\n\t\t\t}\n\t\t}\n\t\treturn curves;\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar v0 = v[coord],\n\t\t\tv1 = v[coord + 2],\n\t\t\tv2 = v[coord + 4],\n\t\t\tv3 = v[coord + 6],\n\t\t\tres = 0;\n\t\tif (  !(v0 < val && v3 < val && v1 < val && v2 < val ||\n\t\t\t\tv0 > val && v3 > val && v1 > val && v2 > val)) {\n\t\t\tvar c = 3 * (v1 - v0),\n\t\t\t\tb = 3 * (v2 - v1) - c,\n\t\t\t\ta = v3 - v0 - c - b;\n\t\t\tres = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTimeOf: function(v, point) {\n\t\tvar p0 = new Point(v[0], v[1]),\n\t\t\tp3 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tt = point.isClose(p0, epsilon) ? 0\n\t\t\t  : point.isClose(p3, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t === null) {\n\t\t\tvar coords = [point.x, point.y],\n\t\t\t\troots = [];\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar u = roots[i];\n\t\t\t\t\tif (point.isClose(Curve.getPoint(v, u), geomEpsilon))\n\t\t\t\t\t\treturn u;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p0, geomEpsilon) ? 0\n\t\t\t : point.isClose(p3, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestTime: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tvx = x3 - x0, vy = y3 - y0,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getTimeOf(v,\n\t\t\t\t\tnew Point(x0 + u * vx, y0 + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 1e-8) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\tisFlatEnough: function(v, flatness) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tux = 3 * x1 - 2 * x0 - x3,\n\t\t\tuy = 3 * y1 - 2 * y0 - y3,\n\t\t\tvx = 3 * x2 - 2 * x3 - x0,\n\t\t\tvy = 3 * y2 - 2 * y3 - y0;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t<= 16 * flatness * flatness;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2)\n\t\t\t\t+ y1 * (x0 - x2) - x1 * (y0 - y2)\n\t\t\t\t+ y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\n\t\tpadding /= 2;\n\t\tvar minPad = min[coord] - padding,\n\t\t\tmaxPad = max[coord] + padding;\n\t\tif (    v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad ||\n\t\t\t\tv0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n\t\t\tif (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n\t\t\t\tadd(v0, padding);\n\t\t\t\tadd(v3, padding);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\t\t\tc = v1 - v0,\n\t\t\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\t\t\ttMin = 1e-8,\n\t\t\t\t\ttMax = 1 - tMin;\n\t\t\t\tadd(v3, 0);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar t = roots[i],\n\t\t\t\t\t\tu = 1 - t;\n\t\t\t\t\tif (tMin <= t && t <= tMax)\n\t\t\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\t\t\tpadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false, this._path);\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(p1, h1, h2, p2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tvar v = p2.subtract(p1);\n\t\t\tif (v.isZero()) {\n\t\t\t\treturn false;\n\t\t\t} else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n\t\t\t\tvar l = new Line(p1, p2),\n\t\t\t\t\tepsilon = 1e-7;\n\t\t\t\tif (l.getDistance(p1.add(h1)) < epsilon &&\n\t\t\t\t\tl.getDistance(p2.add(h2)) < epsilon) {\n\t\t\t\t\tvar div = v.dot(v),\n\t\t\t\t\t\ts1 = v.dot(h1) / div,\n\t\t\t\t\t\ts2 = v.dot(h2) / div;\n\t\t\t\t\treturn s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(p1, h1, h2, p2) {\n\t\tvar third = p2.subtract(p1).divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function(epsilon) {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point,\n\t\t\t\tepsilon);\n\t};\n\n\tthis.statics[name] = function(v, epsilon) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn test(\n\t\t\t\tnew Point(x0, y0),\n\t\t\t\tnew Point(v[2] - x0, v[3] - y0),\n\t\t\t\tnew Point(v[4] - x3, v[5] - y3),\n\t\t\t\tnew Point(x3, y3), epsilon);\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\thasLength: function(epsilon) {\n\t\treturn (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles())\n\t\t\t\t&& this.getLength() > (epsilon || 0);\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y)\n\t\t\t\t< 1e-8;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x)\n\t\t\t\t< 1e-8;\n\t}\n}), {\n\tbeans: false,\n\n\tgetLocationAt: function(offset, _isTime) {\n\t\treturn this.getLocationAtTime(\n\t\t\t\t_isTime ? offset : this.getTimeAt(offset));\n\t},\n\n\tgetLocationAtTime: function(t) {\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetTimeAt: function(offset, start) {\n\t\treturn Curve.getTimeAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterAt: '#getTimeAt',\n\n\tgetTimesWithTangent: function () {\n\t\tvar tangent = Point.read(arguments);\n\t\treturn tangent.isZero()\n\t\t\t\t? []\n\t\t\t\t: Curve.getTimesWithTangent(this.getValues(), tangent);\n\t},\n\n\tgetOffsetAtTime: function(t) {\n\t\treturn this.getPartLength(0, t);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetTimeOf: function() {\n\t\treturn Curve.getTimeOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetParameterOf: '#getTimeOf',\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestTime(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(location, _isTime) {\n\t\t\t\tvar values = this.getValues();\n\t\t\t\treturn Curve[name](values, _isTime ? location\n\t\t\t\t\t\t: Curve.getTimeAt(values, location));\n\t\t\t};\n\n\t\t\tthis[name + 'AtTime'] = function(time) {\n\t\t\t\treturn Curve[name](this.getValues(), time);\n\t\t\t};\n\t\t}, {\n\t\t\tstatics: {\n\t\t\t\t_evaluateMethods: methods\n\t\t\t}\n\t\t}\n\t);\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\n\t\t\tax = 9 * (x1 - x2) + 3 * (x3 - x0),\n\t\t\tbx = 6 * (x0 + x2) - 12 * x1,\n\t\t\tcx = 3 * (x1 - x0),\n\n\t\t\tay = 9 * (y1 - y2) + 3 * (y3 - y0),\n\t\t\tby = 6 * (y0 + y2) - 12 * y1,\n\t\t\tcy = 3 * (y1 - y0);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(x1 - x0) && isZero(y1 - y0)) {\n\t\t\tx1 = x0;\n\t\t\ty1 = y0;\n\t\t}\n\t\tif (isZero(x2 - x3) && isZero(y2 - y3)) {\n\t\t\tx2 = x3;\n\t\t\ty2 = y3;\n\t\t}\n\t\tvar cx = 3 * (x1 - x0),\n\t\t\tbx = 3 * (x2 - x1) - cx,\n\t\t\tax = x3 - x0 - cx - bx,\n\t\t\tcy = 3 * (y1 - y0),\n\t\t\tby = 3 * (y2 - y1) - cy,\n\t\t\tay = y3 - y0 - cy - by,\n\t\t\tx, y;\n\t\tif (type === 0) {\n\t\t\tx = t === 0 ? x0 : t === 1 ? x3\n\t\t\t\t\t: ((ax * t + bx) * t + cx) * t + x0;\n\t\t\ty = t === 0 ? y0 : t === 1 ? y3\n\t\t\t\t\t: ((ay * t + by) * t + cy) * t + y0;\n\t\t} else {\n\t\t\tvar tMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t < tMin) {\n\t\t\t\tx = cx;\n\t\t\t\ty = cy;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tx = 3 * (x3 - x2);\n\t\t\t\ty = 3 * (y3 - y2);\n\t\t\t} else {\n\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t}\n\t\t\tif (normalized) {\n\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\tx = x2 - x1;\n\t\t\t\t\ty = y2 - y1;\n\t\t\t\t}\n\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\tif (len) {\n\t\t\t\t\tx /= len;\n\t\t\t\t\ty /= len;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type === 3) {\n\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tclassify: function(v) {\n\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\ta1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n\t\t\t\ta2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n\t\t\t\ta3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n\t\t\t\td3 = 3 * a3,\n\t\t\t\td2 = d3 - a2,\n\t\t\t\td1 = d2 - a2 + a1,\n\t\t\t\tl = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n\t\t\t\ts = l !== 0 ? 1 / l : 0,\n\t\t\t\tisZero = Numerical.isZero,\n\t\t\t\tserpentine = 'serpentine';\n\t\t\td1 *= s;\n\t\t\td2 *= s;\n\t\t\td3 *= s;\n\n\t\t\tfunction type(type, t1, t2) {\n\t\t\t\tvar hasRoots = t1 !== undefined,\n\t\t\t\t\tt1Ok = hasRoots && t1 > 0 && t1 < 1,\n\t\t\t\t\tt2Ok = hasRoots && t2 > 0 && t2 < 1;\n\t\t\t\tif (hasRoots && (!(t1Ok || t2Ok)\n\t\t\t\t\t\t|| type === 'loop' && !(t1Ok && t2Ok))) {\n\t\t\t\t\ttype = 'arch';\n\t\t\t\t\tt1Ok = t2Ok = false;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: type,\n\t\t\t\t\troots: t1Ok || t2Ok\n\t\t\t\t\t\t\t? t1Ok && t2Ok\n\t\t\t\t\t\t\t\t? t1 < t2 ? [t1, t2] : [t2, t1]\n\t\t\t\t\t\t\t\t: [t1Ok ? t1 : t2]\n\t\t\t\t\t\t\t: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (isZero(d1)) {\n\t\t\t\treturn isZero(d2)\n\t\t\t\t\t\t? type(isZero(d3) ? 'line' : 'quadratic')\n\t\t\t\t\t\t: type(serpentine, d3 / (3 * d2));\n\t\t\t}\n\t\t\tvar d = 3 * d2 * d2 - 4 * d1 * d3;\n\t\t\tif (isZero(d)) {\n\t\t\t\treturn type('cusp', d2 / (2 * d1));\n\t\t\t}\n\t\t\tvar f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n\t\t\t\tf2 = 2 * d1;\n\t\t\treturn type(d > 0 ? serpentine : 'loop',\n\t\t\t\t\t(d2 + f1) / f2,\n\t\t\t\t\t(d2 - f1) / f2);\n\t\t},\n\n\t\tgetLength: function(v, a, b, ds) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tvar c = v;\n\t\t\t\tif (b < 1) {\n\t\t\t\t\tc = Curve.subdivide(c, b)[0];\n\t\t\t\t\ta /= b;\n\t\t\t\t}\n\t\t\t\tif (a > 0) {\n\t\t\t\t\tc = Curve.subdivide(c, a)[1];\n\t\t\t\t}\n\t\t\t\tvar dx = c[6] - c[0],\n\t\t\t\t\tdy = c[7] - c[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\treturn Numerical.integrate(ds || getLengthIntegrand(v), a, b,\n\t\t\t\t\tgetIterations(a, b));\n\t\t},\n\n\t\tgetTimeAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0;\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Curve.getLength(v, a, b, ds),\n\t\t\t\tdiff = abs(offset) - rangeLength;\n\t\t\tif (abs(diff) < epsilon) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (diff > epsilon) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t},\n\n\t\tgetPeaks: function(v) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tax =     -x0 + 3 * x1 - 3 * x2 + x3,\n\t\t\t\tbx =  3 * x0 - 6 * x1 + 3 * x2,\n\t\t\t\tcx = -3 * x0 + 3 * x1,\n\t\t\t\tay =     -y0 + 3 * y1 - 3 * y2 + y3,\n\t\t\t\tby =  3 * y0 - 6 * y1 + 3 * y2,\n\t\t\t\tcy = -3 * y0 + 3 * y1,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [];\n\t\t\tNumerical.solveCubic(\n\t\t\t\t\t9 * (ax * ax + ay * ay),\n\t\t\t\t\t9 * (ax * bx + by * ay),\n\t\t\t\t\t2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay),\n\t\t\t\t\t(cx * bx + by * cy),\n\t\t\t\t\troots, tMin, tMax);\n\t\t\treturn roots.sort();\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, include, c1, t1, c2, t2, overlap) {\n\t\tvar excludeStart = !overlap && c1.getPrevious() === c2,\n\t\t\texcludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 !== null && t1 >= (excludeStart ? tMin : 0) &&\n\t\t\tt1 <= (excludeEnd ? tMax : 1)) {\n\t\t\tif (t2 !== null && t2 >= (excludeEnd ? tMin : 0) &&\n\t\t\t\tt2 <= (excludeStart ? tMax : 1)) {\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1, null, overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2, null, overlap);\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc1)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc1, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, include, flip,\n\t\t\trecursion, calls, tMin, tMax, uMin, uMax) {\n\t\tif (++calls >= 4096 || ++recursion >= 40)\n\t\t\treturn calls;\n\t\tvar fatLineEpsilon = 1e-9,\n\t\t\tq0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif (d1 === 0 && d2 === 0\n\t\t\t\t&& dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0\n\t\t\t|| (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null\n\t\t\t|| (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn calls;\n\t\tvar tMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n\t\t\tvar t = (tMinNew + tMaxNew) / 2,\n\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tflip ? c2 : c1, flip ? u : t,\n\t\t\t\t\tflip ? c1 : c2, flip ? t : u);\n\t\t} else {\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\tif (tMaxClip - tMinClip > 0.8) {\n\t\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\t\tt = (tMinNew + tMaxNew) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[0], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, t);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[1], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, t, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[0], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, u, tMinNew, tMaxNew);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[1], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, u, uMax, tMinNew, tMaxNew);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (uMax - uMin >= fatLineEpsilon) {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv1, v2, c1, c2, locations, include, flip,\n\t\t\t\t\t\t\trecursion, calls, tMinNew, tMaxNew, uMin, uMax);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn calls;\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= 0.5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction getCurveLineIntersections(v, px, py, vx, vy) {\n\t\tvar isZero = Numerical.isZero;\n\t\tif (isZero(vx) && isZero(vy)) {\n\t\t\tvar t = Curve.getTimeOf(v, new Point(px, py));\n\t\t\treturn t === null ? [] : [t];\n\t\t}\n\t\tvar angle = Math.atan2(-vy, vx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trv = [],\n\t\t\troots = [];\n\t\tfor (var i = 0; i < 8; i += 2) {\n\t\t\tvar x = v[i] - px,\n\t\t\t\ty = v[i + 1] - py;\n\t\t\trv.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tCurve.solveCubic(rv, 1, 0, roots, 0, 1);\n\t\treturn roots;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, include,\n\t\t\tflip) {\n\t\tvar x1 = v2[0], y1 = v2[1],\n\t\t\tx2 = v2[6], y2 = v2[7],\n\t\t\troots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\t\tfor (var i = 0, l = roots.length; i < l; i++) {\n\t\t\tvar t1 = roots[i],\n\t\t\t\tp1 = Curve.getPoint(v1, t1),\n\t\t\t\tt2 = Curve.getTimeOf(v2, p1);\n\t\t\tif (t2 !== null) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tflip ? c2 : c1, flip ? t2 : t1,\n\t\t\t\t\t\tflip ? c1 : c2, flip ? t1 : t2);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, include) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, Curve.getTimeOf(v1, pt),\n\t\t\t\t\tc2, Curve.getTimeOf(v2, pt));\n\t\t}\n\t}\n\n\tfunction getCurveIntersections(v1, v2, c1, c2, locations, include) {\n\t\tvar epsilon = 1e-12,\n\t\t\tmin = Math.min,\n\t\t\tmax = Math.max;\n\n\t\tif (max(v1[0], v1[2], v1[4], v1[6]) + epsilon >\n\t\t\tmin(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmin(v1[0], v1[2], v1[4], v1[6]) - epsilon <\n\t\t\tmax(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmax(v1[1], v1[3], v1[5], v1[7]) + epsilon >\n\t\t\tmin(v2[1], v2[3], v2[5], v2[7]) &&\n\t\t\tmin(v1[1], v1[3], v1[5], v1[7]) - epsilon <\n\t\t\tmax(v2[1], v2[3], v2[5], v2[7])) {\n\t\t\tvar overlaps = getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\tc1, overlap[0],\n\t\t\t\t\t\t\tc2, overlap[1], true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\t\tflip = straight1 && !straight2,\n\t\t\t\t\tbefore = locations.length;\n\t\t\t\t(straight\n\t\t\t\t\t? addLineIntersection\n\t\t\t\t\t: straight1 || straight2\n\t\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\t\tflip ? v2 : v1, flip ? v1 : v2,\n\t\t\t\t\t\t\tflip ? c2 : c1, flip ? c1 : c2,\n\t\t\t\t\t\t\tlocations, include, flip,\n\t\t\t\t\t\t\t0, 0, 0, 1, 0, 1);\n\t\t\t\tif (!straight || locations.length === before) {\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tvar t1 = i >> 1,\n\t\t\t\t\t\t\tt2 = i & 1,\n\t\t\t\t\t\t\ti1 = t1 * 6,\n\t\t\t\t\t\t\ti2 = t2 * 6,\n\t\t\t\t\t\t\tp1 = new Point(v1[i1], v1[i1 + 1]),\n\t\t\t\t\t\t\tp2 = new Point(v2[i2], v2[i2 + 1]);\n\t\t\t\t\t\tif (p1.isClose(p2, epsilon)) {\n\t\t\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\t\t\tc1, t1,\n\t\t\t\t\t\t\t\t\tc2, t2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getLoopIntersection(v1, c1, locations, include) {\n\t\tvar info = Curve.classify(v1);\n\t\tif (info.type === 'loop') {\n\t\t\tvar roots = info.roots;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, roots[0],\n\t\t\t\t\tc1, roots[1]);\n\t\t}\n\t  return locations;\n\t}\n\n\tfunction getIntersections(curves1, curves2, include, matrix1, matrix2,\n\t\t\t_returnFirst) {\n\t\tvar self = !curves2;\n\t\tif (self)\n\t\t\tcurves2 = curves1;\n\t\tvar length1 = curves1.length,\n\t\t\tlength2 = curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tcurrent;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== current) {\n\t\t\t\tcurrent = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tgetLoopIntersection(values1, curve1, locations, include);\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tgetCurveIntersections(values1, values2[j], curve1, curves2[j],\n\t\t\t\t\t\tlocations, include);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tBase.push(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getOverlaps(v1, v2) {\n\n\t\tfunction getSquaredLineLength(v) {\n\t\t\tvar x = v[6] - v[0],\n\t\t\t\ty = v[7] - v[1];\n\t\t\treturn x * x + y * y;\n\t\t}\n\n\t\tvar abs = Math.abs,\n\t\t\tgetDistance = Line.getDistance,\n\t\t\ttimeEpsilon = 1e-8,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\tstraightBoth = straight1 && straight2,\n\t\t\tflip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n\t\t\tl1 = flip ? v2 : v1,\n\t\t\tl2 = flip ? v1 : v2,\n\t\t\tpx = l1[0], py = l1[1],\n\t\t\tvx = l1[6] - px, vy = l1[7] - py;\n\t\tif (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon &&\n\t\t\tgetDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n\t\t\tif (!straightBoth &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n\t\t\t\tstraight1 = straight2 = straightBoth = true;\n\t\t\t}\n\t\t} else if (straightBoth) {\n\t\t\treturn null;\n\t\t}\n\t\tif (straight1 ^ straight2) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar v = [v1, v2],\n\t\t\tpairs = [];\n\t\tfor (var i = 0; i < 4 && pairs.length < 2; i++) {\n\t\t\tvar i1 = i & 1,\n\t\t\t\ti2 = i1 ^ 1,\n\t\t\t\tt1 = i >> 1,\n\t\t\t\tt2 = Curve.getTimeOf(v[i1], new Point(\n\t\t\t\t\tv[i2][t1 ? 6 : 0],\n\t\t\t\t\tv[i2][t1 ? 7 : 1]));\n\t\t\tif (t2 != null) {\n\t\t\t\tvar pair = i1 ? [t1, t2] : [t2, t1];\n\t\t\t\tif (!pairs.length ||\n\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon) {\n\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i > 2 && !pairs.length)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (pairs.length !== 2) {\n\t\t\tpairs = null;\n\t\t} else if (!straightBoth) {\n\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\tpairs = null;\n\t\t}\n\t\treturn pairs;\n\t}\n\n\tfunction getTimesWithTangent(v, tangent) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tnormalized = tangent.normalize(),\n\t\t\ttx = normalized.x,\n\t\t\tty = normalized.y,\n\t\t\tax = 3 * x3 - 9 * x2 + 9 * x1 - 3 * x0,\n\t\t\tay = 3 * y3 - 9 * y2 + 9 * y1 - 3 * y0,\n\t\t\tbx = 6 * x2 - 12 * x1 + 6 * x0,\n\t\t\tby = 6 * y2 - 12 * y1 + 6 * y0,\n\t\t\tcx = 3 * x1 - 3 * x0,\n\t\t\tcy = 3 * y1 - 3 * y0,\n\t\t\tden = 2 * ax * ty - 2 * ay * tx,\n\t\t\ttimes = [];\n\t\tif (Math.abs(den) < Numerical.CURVETIME_EPSILON) {\n\t\t\tvar num = ax * cy - ay * cx,\n\t\t\t\tden = ax * by - ay * bx;\n\t\t\tif (den != 0) {\n\t\t\t\tvar t = -num / den;\n\t\t\t\tif (t >= 0 && t <= 1) times.push(t);\n\t\t\t}\n\t\t} else {\n\t\t\tvar delta = (bx * bx - 4 * ax * cx) * ty * ty +\n\t\t\t\t(-2 * bx * by + 4 * ay * cx + 4 * ax * cy) * tx * ty +\n\t\t\t\t(by * by - 4 * ay * cy) * tx * tx,\n\t\t\t\tk = bx * ty - by * tx;\n\t\t\tif (delta >= 0 && den != 0) {\n\t\t\t\tvar d = Math.sqrt(delta),\n\t\t\t\t\tt0 = -(k + d) / den,\n\t\t\t\t\tt1 = (-k + d) / den;\n\t\t\t\tif (t0 >= 0 && t0 <= 1) times.push(t0);\n\t\t\t\tif (t1 >= 0 && t1 <= 1) times.push(t1);\n\t\t\t}\n\t\t}\n\t\treturn times;\n\t}\n\n\treturn {\n\t\tgetIntersections: function(curve) {\n\t\t\tvar v1 = this.getValues(),\n\t\t\t\tv2 = curve && curve !== this && curve.getValues();\n\t\t\treturn v2 ? getCurveIntersections(v1, v2, this, curve, [])\n\t\t\t\t\t  : getLoopIntersection(v1, this, []);\n\t\t},\n\n\t\tstatics: {\n\t\t\tgetOverlaps: getOverlaps,\n\t\t\tgetIntersections: getIntersections,\n\t\t\tgetCurveLineIntersections: getCurveLineIntersections,\n\t\t\tgetTimesWithTangent: getTimesWithTangent\n\t\t}\n\t};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\n\tinitialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n\t\tif (time >= 0.99999999) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\ttime = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._setCurve(curve);\n\t\tthis._time = time;\n\t\tthis._point = point || curve.getPointAtTime(time);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._previous = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._path = path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._time = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar segment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tif (time === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (time != null) {\n\t\t\t\tsegment = curve.getPartLength(0, time)\n\t\t\t\t\t< curve.getPartLength(time, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tthis._time = this._offset = this._curveOffset = this._curve = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn this._curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetTime: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this._time;\n\t\treturn curve && time == null\n\t\t\t? this._time = curve.getTimeOf(this._point)\n\t\t\t: time;\n\t},\n\n\tgetParameter: '#getTime',\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar offset = this._curveOffset;\n\t\tif (offset == null) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tthis._curveOffset = offset = time != null && curve\n\t\t\t\t\t&& curve.getPartLength(0, time);\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = curve && curve.divideAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tpath = curve._path,\n\t\t\tres = curve && curve.splitAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(path.getLastSegment());\n\t\t}\n\t\treturn  res;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc;\n\t\tif (!res && loc instanceof CurveLocation) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tp1 = c1._path,\n\t\t\t\tp2 = c2._path;\n\t\t\tif (p1 === p2) {\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\tepsilon = 1e-7,\n\t\t\t\t\tdiff = abs(this.getOffset() - loc.getOffset()),\n\t\t\t\t\ti1 = !_ignoreOther && this._intersection,\n\t\t\t\t\ti2 = !_ignoreOther && loc._intersection;\n\t\t\t\tres = (diff < epsilon\n\t\t\t\t\t\t|| p1 && abs(p1.getLength() - diff) < epsilon)\n\t\t\t\t\t&& (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar time = this.getTime();\n\t\tif (time != null)\n\t\t\tparts.push('time: ' + f.number(time));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getTime(),\n\t\t\tt2 = inter.getTime(),\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tt1Inside = t1 >= tMin && t1 <= tMax,\n\t\t\tt2Inside = t2 >= tMin && t2 <= tMax;\n\t\tif (t1Inside && t2Inside)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = t1 < tMin ? c2.getPrevious() : c2,\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = t2 < tMin ? c4.getPrevious() : c4;\n\t\tif (t1 > tMax)\n\t\t\tc2 = c2.getNext();\n\t\tif (t2 > tMax)\n\t\t\tc4 = c4.getNext();\n\t\tif (!c1 || !c2 || !c3 || !c4)\n\t\t\treturn false;\n\n\t\tvar offsets = [];\n\n\t\tfunction addOffsets(curve, end) {\n\t\t\tvar v = curve.getValues(),\n\t\t\t\troots = Curve.classify(v).roots || Curve.getPeaks(v),\n\t\t\t\tcount = roots.length,\n\t\t\t\tt = end && count > 1 ? roots[count - 1]\n\t\t\t\t\t\t: count > 0 ? roots[0]\n\t\t\t\t\t\t: 0.5;\n\t\t\toffsets.push(Curve.getLength(v, end ? t : 0, end ? 1 : t) / 2);\n\t\t}\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t\t? angle > min && angle < max\n\t\t\t\t\t: angle > min || angle < max;\n\t\t}\n\n\t\tif (!t1Inside) {\n\t\t\taddOffsets(c1, true);\n\t\t\taddOffsets(c2, false);\n\t\t}\n\t\tif (!t2Inside) {\n\t\t\taddOffsets(c3, true);\n\t\t\taddOffsets(c4, false);\n\t\t}\n\t\tvar pt = this.getPoint(),\n\t\t\toffset = Math.min.apply(Math, offsets),\n\t\t\tv2 = t1Inside ? c2.getTangentAtTime(t1)\n\t\t\t\t\t: c2.getPointAt(offset).subtract(pt),\n\t\t\tv1 = t1Inside ? v2.negate()\n\t\t\t\t\t: c1.getPointAt(-offset).subtract(pt),\n\t\t\tv4 = t2Inside ? c4.getTangentAtTime(t2)\n\t\t\t\t\t: c4.getPointAt(offset).subtract(pt),\n\t\t\tv3 = t2Inside ? v4.negate()\n\t\t\t\t\t: c3.getPointAt(-offset).subtract(pt),\n\t\t\ta1 = v1.getAngle(),\n\t\t\ta2 = v2.getAngle(),\n\t\t\ta3 = v3.getAngle(),\n\t\t\ta4 = v4.getAngle();\n\t\treturn !!(t1Inside\n\t\t\t\t? (isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4)) &&\n\t\t\t\t  (isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3))\n\t\t\t\t: (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2)) &&\n\t\t\t\t  (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1)));\n\t},\n\n\thasOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve._evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this.getTime();\n\t\treturn time != null && curve && curve[get](time, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t1e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 !== path2\n\t\t\t\t? path1._id - path2._id\n\t\t\t\t: (loc.getIndex() + loc.getTime())\n\t\t\t\t- (loc2.getIndex() + loc2.getTime());\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\t_selectBounds: false,\n\t_canScaleStroke: true,\n\tbeans: true,\n\n\tinitialize: function PathItem() {\n\t},\n\n\tstatics: {\n\t\tcreate: function(arg) {\n\t\t\tvar data,\n\t\t\t\tsegments,\n\t\t\t\tcompound;\n\t\t\tif (Base.isPlainObject(arg)) {\n\t\t\t\tsegments = arg.segments;\n\t\t\t\tdata = arg.pathData;\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tsegments = arg;\n\t\t\t} else if (typeof arg === 'string') {\n\t\t\t\tdata = arg;\n\t\t\t}\n\t\t\tif (segments) {\n\t\t\t\tvar first = segments[0];\n\t\t\t\tcompound = first && Array.isArray(first[0]);\n\t\t\t} else if (data) {\n\t\t\t\tcompound = (data.match(/m/gi) || []).length > 1\n\t\t\t\t\t\t|| /z\\s*\\S+/i.test(data);\n\t\t\t}\n\t\t\tvar ctor = compound ? CompoundPath : Path;\n\t\t\treturn new ctor(arg);\n\t\t}\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tisClockwise: function() {\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\t\t\t\t\tif (move) {\n\t\t\t\t\t\tstart = current;\n\t\t\t\t\t\tmove = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tcurrent = current.clone();\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(1e-12);\n\t\t\t\tcurrent = start;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = point.isInside(\n\t\t\t\tthis.getBounds({ internal: true, handle: true }))\n\t\t\t\t\t? this._getWinding(point)\n\t\t\t\t\t: {};\n\t\treturn winding.onPath || !!(this.getFillRule() === 'evenodd'\n\t\t\t\t? winding.windingL & 1 || winding.windingR & 1\n\t\t\t\t: winding.winding);\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix._orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix)._orNullIfIdentity();\n\t\treturn self || this.getBounds(matrix1).intersects(\n\t\t\t\tpath.getBounds(matrix2), 1e-12)\n\t\t\t\t? Curve.getIntersections(\n\t\t\t\t\t\tthis.getCurves(), !self && path.getCurves(), include,\n\t\t\t\t\t\tmatrix1, matrix2, _returnFirst)\n\t\t\t\t: [];\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.hasOverlap() || inter.isCrossing();\n\t\t});\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar isPath = !this._children,\n\t\t\tname = isPath ? '_segments' : '_children',\n\t\t\titemsFrom = from[name],\n\t\t\titemsTo = to[name],\n\t\t\titems = this[name];\n\t\tif (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n\t\t\tthrow new Error('Invalid operands in interpolate() call: ' +\n\t\t\t\t\tfrom + ', ' + to);\n\t\t}\n\t\tvar current = items.length,\n\t\t\tlength = itemsTo.length;\n\t\tif (current < length) {\n\t\t\tvar ctor = isPath ? Segment : Path;\n\t\t\tfor (var i = current; i < length; i++) {\n\t\t\t\tthis.add(new ctor());\n\t\t\t}\n\t\t} else if (current > length) {\n\t\t\tthis[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n\t\t}\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\titems[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n\t\t}\n\t\tif (isPath) {\n\t\t\tthis.setClosed(from._closed);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tcompare: function(path) {\n\t\tvar ok = false;\n\t\tif (path) {\n\t\t\tvar paths1 = this._children || [this],\n\t\t\t\tpaths2 = path._children ? path._children.slice() : [path],\n\t\t\t\tlength1 = paths1.length,\n\t\t\t\tlength2 = paths2.length,\n\t\t\t\tmatched = [],\n\t\t\t\tcount = 0;\n\t\t\tok = true;\n\t\t\tfor (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n\t\t\t\tvar path1 = paths1[i1];\n\t\t\t\tok = false;\n\t\t\t\tfor (var i2 = length2 - 1; i2 >= 0 && !ok; i2--) {\n\t\t\t\t\tif (path1.compare(paths2[i2])) {\n\t\t\t\t\t\tif (!matched[i2]) {\n\t\t\t\t\t\t\tmatched[i2] = true;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tok = ok && count === length2;\n\t\t}\n\t\treturn ok;\n\t},\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._segmentSelection = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setSegments(source._segments);\n\t\tthis._closed = source._closed;\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tthis._length = this._area = undefined;\n\t\t\tif (flags & 32) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 64) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected(),\n\t\t\tlength = segments && segments.length;\n\t\tthis._segments.length = 0;\n\t\tthis._segmentSelection = 0;\n\t\tthis._curves = undefined;\n\t\tif (length) {\n\t\t\tvar last = segments[length - 1];\n\t\t\tif (typeof last === 'boolean') {\n\t\t\t\tthis.setClosed(last);\n\t\t\t\tlength--;\n\t\t\t}\n\t\t\tthis._add(Segment.readList(segments, 0, {}, length));\n\t\t}\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(41);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine) {\n\t\t\t\t\t\tvar dx = curX - prevX,\n\t\t\t\t\t\t\tdy = curY - prevY;\n\t\t\t\t\t\tparts.push(\n\t\t\t\t\t\t\t  dx === 0 ? 'v' + f.number(dy)\n\t\t\t\t\t\t\t: dy === 0 ? 'h' + f.number(dx)\n\t\t\t\t\t\t\t: 'l' + f.pair(dx, dy));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair( inX - prevX,  inY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (!length)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._segments.length;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar segments = this._segments,\n\t\t\tcoords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selection);\n\t\t}\n\t\tif (append) {\n\t\t\tBase.push(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tstart = index > 0 && index + amount - 1 === total ? index - 1\n\t\t\t\t\t: index,\n\t\t\t\tinsert = start,\n\t\t\t\tend = Math.min(start + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [start, 0].concat(segs._curves));\n\t\t\t\tinsert += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = insert; i < end; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(start, end);\n\t\t}\n\t\tthis._changed(41);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(start, end) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && !start ? segments.length - 1\n\t\t\t\t: start - 1]) {\n\t\t\tcurve._segment2 = segments[start] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[end]) {\n\t\t\tcurve._segment1 = segments[end];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readList(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readList(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(start, end, _includeCurves) {\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(start, end - start),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, segment._selection, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = start, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = start > 0 && end === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? start - 1\n\t\t\t\t\t: start,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\t\tcurves[i]._path = null;\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(41);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar area = this._area;\n\t\tif (area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tclosed = this._closed;\n\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar last = i + 1 === l;\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[last ? 0 : i + 1],\n\t\t\t\t\t\tnull, last && !closed));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this.isSelected() && length > 0 && this._segmentSelection\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelection: function setSelection(selection) {\n\t\tif (!(selection & 1))\n\t\t\tthis._selectSegments(false);\n\t\tsetSelection.base.call(this, selection);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tselection = selected ? 7 : 0;\n\t\tthis._segmentSelection = selection * length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tsegments[i]._selection = selection;\n\t},\n\n\t_updateSelection: function(segment, oldSelection, newSelection) {\n\t\tsegment._selection = newSelection;\n\t\tvar selection = this._segmentSelection += newSelection - oldSelection;\n\t\tif (selection > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tdivideAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tcurve;\n\t\treturn loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset()))\n\t\t\t\t? curve._segment1\n\t\t\t\t: null;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tindex = loc && loc.index,\n\t\t\ttime = loc && loc.time,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (time > tMax) {\n\t\t\tindex++;\n\t\t\ttime = 0;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (time >= tMin) {\n\t\t\t\tcurves[index++].divideAtTime(time);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this);\n\t\t\t\tpath.copyAttributes(this);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tsplit: function(index, time) {\n\t\tvar curve,\n\t\t\tlocation = time === undefined ? index\n\t\t\t\t: (curve = this.getCurves()[index])\n\t\t\t\t\t&& curve.getLocationAtTime(time);\n\t\treturn location != null ? this.splitAt(location) : null;\n\t},\n\n\tjoin: function(path, tolerance) {\n\t\tvar epsilon = tolerance || 0;\n\t\tif (path && path !== this) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.isClose(last2._point, epsilon))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.isClose(first2._point, epsilon)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.isClose(first2._point, epsilon))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.isClose(last2._point, epsilon)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.isClose(last._point, epsilon)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\treduce: function(options) {\n\t\tvar curves = this.getCurves(),\n\t\t\tsimplify = options && options.simplify,\n\t\t\ttolerance = simplify ? 1e-7 : 0;\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (!curve.hasLength(tolerance)\n\t\t\t\t\t|| simplify && curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tthis._changed(9);\n\t},\n\n\tflatten: function(flatness) {\n\t\tvar flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n\t\t\tparts = flattener.parts,\n\t\t\tlength = parts.length,\n\t\t\tsegments = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tsegments.push(new Segment(parts[i].curve.slice(0, 2)));\n\t\t}\n\t\tif (!this._closed && length > 0) {\n\t\t\tsegments.push(new Segment(parts[length - 1].curve.slice(6)));\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tvar segments = new PathFitter(this).fit(tolerance || 2.5);\n\t\tif (segments)\n\t\t\tthis.setSegments(segments);\n\t\treturn !!segments;\n\t},\n\n\tsmooth: function(options) {\n\t\tvar that = this,\n\t\t\topts = options || {},\n\t\t\ttype = opts.type || 'asymmetric',\n\t\t\tsegments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tclosed = this._closed;\n\n\t\tfunction getIndex(value, _default) {\n\t\t\tvar index = value && value.index;\n\t\t\tif (index != null) {\n\t\t\t\tvar path = value.path;\n\t\t\t\tif (path && path !== that)\n\t\t\t\t\tthrow new Error(value._class + ' ' + index + ' of ' + path\n\t\t\t\t\t\t\t+ ' is not part of ' + that);\n\t\t\t\tif (_default && value instanceof Curve)\n\t\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tindex = typeof value === 'number' ? value : _default;\n\t\t\t}\n\t\t\treturn Math.min(index < 0 && closed\n\t\t\t\t\t? index % length\n\t\t\t\t\t: index < 0 ? index + length : index, length - 1);\n\t\t}\n\n\t\tvar loop = closed && opts.from === undefined && opts.to === undefined,\n\t\t\tfrom = getIndex(opts.from, 0),\n\t\t\tto = getIndex(opts.to, length - 1);\n\n\t\tif (from > to) {\n\t\t\tif (closed) {\n\t\t\t\tfrom -= length;\n\t\t\t} else {\n\t\t\t\tvar tmp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = tmp;\n\t\t\t}\n\t\t}\n\t\tif (/^(?:asymmetric|continuous)$/.test(type)) {\n\t\t\tvar asymmetric = type === 'asymmetric',\n\t\t\t\tmin = Math.min,\n\t\t\t\tamount = to - from + 1,\n\t\t\t\tn = amount - 1,\n\t\t\t\tpadding = loop ? min(amount, 4) : 1,\n\t\t\t\tpaddingLeft = padding,\n\t\t\t\tpaddingRight = padding,\n\t\t\t\tknots = [];\n\t\t\tif (!closed) {\n\t\t\t\tpaddingLeft = min(1, from);\n\t\t\t\tpaddingRight = min(1, length - to - 1);\n\t\t\t}\n\t\t\tn += paddingLeft + paddingRight;\n\t\t\tif (n <= 1)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n\t\t\t\tknots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n\t\t\t}\n\n\t\t\tvar x = knots[0]._x + 2 * knots[1]._x,\n\t\t\t\ty = knots[0]._y + 2 * knots[1]._y,\n\t\t\t\tf = 2,\n\t\t\t\tn_1 = n - 1,\n\t\t\t\trx = [x],\n\t\t\t\try = [y],\n\t\t\t\trf = [f],\n\t\t\t\tpx = [],\n\t\t\t\tpy = [];\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tvar internal = i < n_1,\n\t\t\t\t\ta = internal ? 1 : asymmetric ? 1 : 2,\n\t\t\t\t\tb = internal ? 4 : asymmetric ? 2 : 7,\n\t\t\t\t\tu = internal ? 4 : asymmetric ? 3 : 8,\n\t\t\t\t\tv = internal ? 2 : asymmetric ? 0 : 1,\n\t\t\t\t\tm = a / f;\n\t\t\t\tf = rf[i] = b - m;\n\t\t\t\tx = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n\t\t\t\ty = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n\t\t\t}\n\n\t\t\tpx[n_1] = rx[n_1] / rf[n_1];\n\t\t\tpy[n_1] = ry[n_1] / rf[n_1];\n\t\t\tfor (var i = n - 2; i >= 0; i--) {\n\t\t\t\tpx[i] = (rx[i] - px[i + 1]) / rf[i];\n\t\t\t\tpy[i] = (ry[i] - py[i + 1]) / rf[i];\n\t\t\t}\n\t\t\tpx[n] = (3 * knots[n]._x - px[n_1]) / 2;\n\t\t\tpy[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n\t\t\tfor (var i = paddingLeft, max = n - paddingRight, j = from;\n\t\t\t\t\ti <= max; i++, j++) {\n\t\t\t\tvar segment = segments[j < 0 ? j + length : j],\n\t\t\t\t\tpt = segment._point,\n\t\t\t\t\thx = px[i] - pt._x,\n\t\t\t\t\thy = py[i] - pt._y;\n\t\t\t\tif (loop || i < max)\n\t\t\t\t\tsegment.setHandleOut(hx, hy);\n\t\t\t\tif (loop || i > paddingLeft)\n\t\t\t\t\tsegment.setHandleIn(-hx, -hy);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tsegments[i < 0 ? i + length : i].smooth(opts,\n\t\t\t\t\t\t!loop && i === from, !loop && i === to);\n\t\t\t}\n\t\t}\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.copyAttributes(this, true);\n\t\t\tshape._matrix.prepend(this._matrix);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tif (insert === undefined || insert)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\ttoPath: '#clone',\n\n\tcompare: function compare(path) {\n\t\tif (!path || path instanceof CompoundPath)\n\t\t\treturn compare.base.call(this, path);\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = curves2.length;\n\t\tif (!length1 || !length2) {\n\t\t\treturn length1 == length2;\n\t\t}\n\t\tvar v1 = curves1[0].getValues(),\n\t\t\tvalues2 = [],\n\t\t\tpos1 = 0, pos2,\n\t\t\tend1 = 0, end2;\n\t\tfor (var i = 0; i < length2; i++) {\n\t\t\tvar v2 = curves2[i].getValues();\n\t\t\tvalues2.push(v2);\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tpos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n\t\t\t\tend2 = overlaps[0][1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar abs = Math.abs,\n\t\t\tepsilon = 1e-8,\n\t\t\tv2 = values2[pos2],\n\t\t\tstart2;\n\t\twhile (v1 && v2) {\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tvar t1 = overlaps[0][0];\n\t\t\t\tif (abs(t1 - end1) < epsilon) {\n\t\t\t\t\tend1 = overlaps[1][0];\n\t\t\t\t\tif (end1 === 1) {\n\t\t\t\t\t\tv1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n\t\t\t\t\t\tend1 = 0;\n\t\t\t\t\t}\n\t\t\t\t\tvar t2 = overlaps[0][1];\n\t\t\t\t\tif (abs(t2 - end2) < epsilon) {\n\t\t\t\t\t\tif (!start2)\n\t\t\t\t\t\t\tstart2 = [pos2, t2];\n\t\t\t\t\t\tend2 = overlaps[1][1];\n\t\t\t\t\t\tif (end2 === 1) {\n\t\t\t\t\t\t\tif (++pos2 >= length2)\n\t\t\t\t\t\t\t\tpos2 = 0;\n\t\t\t\t\t\t\tv2 = values2[pos2] || curves2[pos2].getValues();\n\t\t\t\t\t\t\tend2 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!v1) {\n\t\t\t\t\t\t\treturn start2[0] === pos2 && start2[1] === end2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix, strokeMatrix) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tstrokeRadius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (strokeRadius !== null) {\n\t\t\tif (strokeRadius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tstrokePadding = strokePadding.add(\n\t\t\t\t\tPath._getStrokePadding(strokeRadius, strokeMatrix));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tvar isJoin = closed || segment._index > 0\n\t\t\t\t\t&& segment._index < numSegments - 1;\n\t\t\tif ((isJoin ? join : cap) === 'round') {\n\t\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t\t} else {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (isJoin) {\n\t\t\t\t\tif (!segment.isSmooth()) {\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius,\n\t\t\t\t\t\t\t   miterLimit, null, strokeMatrix, addToArea, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (cap === 'square') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, null,\n\t\t\t\t\t\t\tstrokeMatrix, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (strokeRadius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar time = loc.getTime();\n\t\t\t\tif (time === 0 || time === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point)\n\t\t\t\t\t\t\t<= miterLimit * strokeRadius\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar loc = this.getLocationAt(offset);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset) {\n\t\tif (typeof offset === 'number') {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar start = length,\n\t\t\t\t\tcurve = curves[i];\n\t\t\t\tlength += curve.getLength();\n\t\t\t\tif (length > offset) {\n\t\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curves.length > 0 && offset <= this.getLength()) {\n\t\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\t\t}\n\t\t} else if (offset && offset.getPath && offset.getPath() === this) {\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetsWithTangent: function() {\n\t\tvar tangent = Point.read(arguments);\n\t\tif (tangent.isZero()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar offsets = [];\n\t\tvar curveStart = 0;\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar curve = curves[i];\n\t\t\tvar curveTimes = curve.getTimesWithTangent(tangent);\n\t\t\tfor (var j = 0, m = curveTimes.length; j < m; j++) {\n\t\t\t\tvar offset = curveStart + curve.getOffsetAtTime(curveTimes[j]);\n\t\t\t\tif (offsets.indexOf(offset) < 0) {\n\t\t\t\t\toffsets.push(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveStart += curve.length;\n\t\t}\n\t\treturn offsets;\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tif (size <= 0) return;\n\n\t\tvar half = size / 2,\n\t\t\tminiSize = size - 2,\n\t\t\tminiHalf = half - 1,\n\t\t\tcoords = new Array(6),\n\t\t\tpX, pY;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i],\n\t\t\t\tselection = segment._selection;\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tpX = coords[0];\n\t\t\tpY = coords[1];\n\t\t\tif (selection & 2)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (selection & 4)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (miniSize > 0 && !(selection & 1)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - miniHalf, pY - miniHalf, miniSize, miniSize);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar flattener = new PathFlattener(this, 0.25, 32, false,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = flattener.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\tflattener.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (!segments.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar abs = Math.abs,\n\t\t\t\tsqrt = Math.sqrt,\n\t\t\t\tcurrent = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else if (!from.equals(to)) {\n\t\t\t\tvar radius = Size.read(arguments),\n\t\t\t\t\tisZero = Numerical.isZero;\n\t\t\t\tif (isZero(radius.width) || isZero(radius.height))\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq = x * x,\n\t\t\t\t\tySq = y * y;\n\t\t\t\tvar factor = sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1) * sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center, true);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extent) {\n\t\t\t\tvar epsilon = 1e-7,\n\t\t\t\t\text = abs(extent),\n\t\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n\t\t\t\t\tinc = extent / count,\n\t\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\t\tsegments = [];\n\t\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\t\tvar pt = to,\n\t\t\t\t\t\tout = null;\n\t\t\t\t\tif (i < count) {\n\t\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t\t}\n\t\t\t\t\tvector = vector.rotate(inc);\n\t\t\t\t}\n\t\t\t\tthis._add(segments);\n\t\t\t}\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(tolerance) {\n\t\t\tthis.setClosed(true);\n\t\t\tthis.join(this, tolerance);\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(matrix, options) {\n\t\tvar method = options.handle\n\t\t\t\t? 'getHandleBounds'\n\t\t\t\t: options.stroke\n\t\t\t\t? 'getStrokeBounds'\n\t\t\t\t: 'getBounds';\n\t\treturn Path[method](this._segments, this._closed, this, matrix, options);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, path, matrix, options, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6)),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = style.hasStroke(),\n\t\t\tstrokeWidth = style.getStrokeWidth(),\n\t\t\tstrokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n\t\t\tstrokePadding = stroke && Path._getStrokePadding(strokeWidth,\n\t\t\t\tstrokeMatrix),\n\t\t\tbounds = Path.getBounds(segments, closed, path, matrix, options,\n\t\t\t\tstrokePadding);\n\t\tif (!stroke)\n\t\t\treturn bounds;\n\t\tvar strokeRadius = strokeWidth / 2,\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = style.getMiterLimit(),\n\t\t\tjoinBounds = new Rectangle(new Size(strokePadding));\n\n\t\tfunction addPoint(point) {\n\t\t\tbounds = bounds.include(point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(\n\t\t\t\t\tjoinBounds.setCenter(segment._point.transform(matrix)));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tif (join === 'round' || segment.isSmooth()) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius, miterLimit,\n\t\t\t\t\t\tmatrix, strokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, matrix,\n\t\t\t\t\t\tstrokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tvar length = segments.length - (closed ? 0 : 1);\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getStrokePadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar hor = new Point(radius, 0).transform(matrix),\n\t\t\tver = new Point(0, radius).transform(matrix),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = Math.atan2(b * tan, a),\n\t\t\tty = Math.atan2(b, tan * a);\n\t\treturn [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, matrix,\n\t\t\tstrokeMatrix, addPoint, isArea) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPoint1().transform(matrix),\n\t\t\tnormal1 = curve1.getNormalAtTime(1).multiply(radius)\n\t\t\t\t.transform(strokeMatrix),\n\t\t\tnormal2 = curve2.getNormalAtTime(0).multiply(radius)\n\t\t\t\t.transform(strokeMatrix),\n\t\t\t\tangle = normal1.getDirectedAngle(normal2);\n\t\tif (angle < 0 || angle >= 180) {\n\t\t\tnormal1 = normal1.negate();\n\t\t\tnormal2 = normal2.negate();\n\t\t}\n\t\tif (isArea)\n\t\t\taddPoint(point);\n\t\taddPoint(point.add(normal1));\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(point.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(point.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit * radius) {\n\t\t\t\taddPoint(corner);\n\t\t\t}\n\t\t}\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, matrix, strokeMatrix,\n\t\t\taddPoint, isArea) {\n\t\tvar point = segment._point.transform(matrix),\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal()\n\t\t\t\t\t.multiply(loc.getTime() === 0 ? radius : -radius)\n\t\t\t\t\t.transform(strokeMatrix);\n\t\tif (cap === 'square') {\n\t\t\tif (isArea) {\n\t\t\t\taddPoint(point.subtract(normal));\n\t\t\t\taddPoint(point.add(normal));\n\t\t\t}\n\t\t\tpoint = point.add(normal.rotate(-90));\n\t\t}\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = options.stroke && style.hasStroke(),\n\t\t\tstrokePadding,\n\t\t\tjoinPadding;\n\t\tif (stroke) {\n\t\t\tvar strokeMatrix = path._getStrokeMatrix(matrix, options),\n\t\t\t\tstrokeRadius = style.getStrokeWidth() / 2,\n\t\t\t\tjoinRadius = strokeRadius;\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n\t\t\tstrokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n\t\t\tjoinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n\t\t}\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = !j ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert == false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props, { insert: true });\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert == false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = sides % 3 === 0,\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\tbeans: true,\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items) {\n\t\tvar list = items,\n\t\t\tfirst = list[0];\n\t\tif (first && typeof first[0] === 'number')\n\t\t\tlist = [list];\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = list[i];\n\t\t\tif (list === items && !(item instanceof Path))\n\t\t\t\tlist = Base.slice(list);\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tlist[i] = new Path({ segments: item, insert: false });\n\t\t\t} else if (item instanceof CompoundPath) {\n\t\t\t\tlist.splice.apply(list, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\treturn insertChildren.base.call(this, index, list);\n\t},\n\n\treduce: function reduce(options) {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce(options);\n\t\t\tif (path.isEmpty())\n\t\t\t\tpath.remove();\n\t\t}\n\t\tif (!children.length) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.copyAttributes(this);\n\t\t\tpath.insertAbove(this);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClosed: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tif (!children[i]._closed)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].setClosed(closed);\n\t\t}\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tBase.push(curves, children[i].getCurves());\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t},\n\n\tgetLength: function() {\n\t\tvar children = this._children,\n\t\t\tlength = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tlength += children[i].getLength();\n\t\treturn length;\n\t},\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.appended(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join('');\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\treturn _hitTestChildren.base.call(this, point,\n\t\t\t\toptions.class === Path || options.type === 'path' ? options\n\t\t\t\t\t: Base.set({}, options, { fill: false }),\n\t\t\t\tviewMatrix);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (!children.length)\n\t\t\treturn;\n\n\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\tctx.beginPath();\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectionItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectionItems[child._id]) {\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.appended(mx));\n\t\t\t}\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && !children.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\treturn Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo',\n\t\t\t'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy',\n\t\t\t'arcBy'],\n\t\tfunction(key) {\n\t\t\tthis[key] = function() {\n\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t};\n\t\t}, {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar current = getCurrentPath(this),\n\t\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\t\tif (path !== current)\n\t\t\t\t\tthis.addChild(path);\n\t\t\t\tpath.moveTo.apply(path, arguments);\n\t\t\t},\n\n\t\t\tmoveBy: function() {\n\t\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\t\tpoint = Point.read(arguments);\n\t\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t\t},\n\n\t\t\tclosePath: function(tolerance) {\n\t\t\t\tgetCurrentPath(this, true).closePath(tolerance);\n\t\t\t}\n\t\t}\n\t);\n}, Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function(key) {\n\tthis[key] = function(param) {\n\t\tvar children = this._children,\n\t\t\tres;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tres = children[i][key](param) || res;\n\t\t}\n\t\treturn res;\n\t};\n}, {}));\n\nPathItem.inject(new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\toperators = {\n\t\t\tunite:     { '1': true, '2': true },\n\t\t\tintersect: { '2': true },\n\t\t\tsubtract:  { '1': true },\n\t\t\texclude:   { '1': true, '-1': true }\n\t\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce({ simplify: true })\n\t\t\t\t.transform(null, true, true);\n\t\treturn resolve\n\t\t\t\t? res.resolveCrossings().reorient(\n\t\t\t\t\tres.getFillRule() === 'nonzero', true)\n\t\t\t\t: res;\n\t}\n\n\tfunction createResult(paths, simplify, path1, path2, options) {\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tresult = result.reduce({ simplify: simplify });\n\t\tif (!(options && options.insert == false)) {\n\t\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t\t&& path1.getIndex() < path2.getIndex() ? path2 : path1);\n\t\t}\n\t\tresult.copyAttributes(path1, true);\n\t\treturn result;\n\t}\n\n\tfunction traceBoolean(path1, path2, operation, options) {\n\t\tif (options && (options.trace == false || options.stroke) &&\n\t\t\t\t/^(subtract|intersect)$/.test(operation))\n\t\t\treturn splitBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true),\n\t\t\toperator = operators[operation];\n\t\toperator[operation] = true;\n\t\tif (_path2 && (operator.subtract || operator.exclude)\n\t\t\t\t^ (_path2.isClockwise() ^ _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar crossings = divideLocations(\n\t\t\t\tCurveLocation.expand(_path1.getCrossings(_path2))),\n\t\t\tpaths1 = _path1._children || [_path1],\n\t\t\tpaths2 = _path2 && (_path2._children || [_path2]),\n\t\t\tsegments = [],\n\t\t\tcurves = [],\n\t\t\tpaths;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tBase.push(segments, path._segments);\n\t\t\t\tBase.push(curves, path.getCurves());\n\t\t\t\tpath._overlapsOnly = true;\n\t\t\t}\n\t\t}\n\n\t\tif (crossings.length) {\n\t\t\tcollect(paths1);\n\t\t\tif (paths2)\n\t\t\t\tcollect(paths2);\n\t\t\tfor (var i = 0, l = crossings.length; i < l; i++) {\n\t\t\t\tpropagateWinding(crossings[i]._segment, _path1, _path2, curves,\n\t\t\t\t\t\toperator);\n\t\t\t}\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i],\n\t\t\t\t\tinter = segment._intersection;\n\t\t\t\tif (!segment._winding) {\n\t\t\t\t\tpropagateWinding(segment, _path1, _path2, curves, operator);\n\t\t\t\t}\n\t\t\t\tif (!(inter && inter._overlap))\n\t\t\t\t\tsegment._path._overlapsOnly = false;\n\t\t\t}\n\t\t\tpaths = tracePaths(segments, operator);\n\t\t} else {\n\t\t\tpaths = reorientPaths(\n\t\t\t\t\tpaths2 ? paths1.concat(paths2) : paths1.slice(),\n\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\treturn !!operator[w];\n\t\t\t\t\t});\n\t\t}\n\n\t\treturn createResult(paths, true, path1, path2, options);\n\t}\n\n\tfunction splitBoolean(path1, path2, operation) {\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = preparePath(path2),\n\t\t\tcrossings = _path1.getCrossings(_path2),\n\t\t\tsubtract = operation === 'subtract',\n\t\t\tdivide = operation === 'divide',\n\t\t\tadded = {},\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (!added[path._id] && (divide ||\n\t\t\t\t\t_path2.contains(path.getPointAt(path.getLength() / 2))\n\t\t\t\t\t\t^ subtract)) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn added[path._id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = crossings.length - 1; i >= 0; i--) {\n\t\t\tvar path = crossings[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn createResult(paths, false, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._previous;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._previous)\n\t\t\t\tto = to._previous;\n\t\t\tfrom._next = to;\n\t\t\tto._previous = from;\n\t\t}\n\t}\n\n\tfunction clearCurveHandles(curves) {\n\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\tcurves[i].clearHandles();\n\t}\n\n\tfunction reorientPaths(paths, isInside, clockwise) {\n\t\tvar length = paths && paths.length;\n\t\tif (length) {\n\t\t\tvar lookup = Base.each(paths, function (path, i) {\n\t\t\t\t\tthis[path._id] = {\n\t\t\t\t\t\tcontainer: null,\n\t\t\t\t\t\twinding: path.isClockwise() ? 1 : -1,\n\t\t\t\t\t\tindex: i\n\t\t\t\t\t};\n\t\t\t\t}, {}),\n\t\t\t\tsorted = paths.slice().sort(function (a, b) {\n\t\t\t\t\treturn abs(b.getArea()) - abs(a.getArea());\n\t\t\t\t}),\n\t\t\t\tfirst = sorted[0];\n\t\t\tif (clockwise == null)\n\t\t\t\tclockwise = first.isClockwise();\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar path1 = sorted[i],\n\t\t\t\t\tentry1 = lookup[path1._id],\n\t\t\t\t\tpoint = path1.getInteriorPoint(),\n\t\t\t\t\tcontainerWinding = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tvar path2 = sorted[j];\n\t\t\t\t\tif (path2.contains(point)) {\n\t\t\t\t\t\tvar entry2 = lookup[path2._id];\n\t\t\t\t\t\tcontainerWinding = entry2.winding;\n\t\t\t\t\t\tentry1.winding += containerWinding;\n\t\t\t\t\t\tentry1.container = entry2.exclude ? entry2.container\n\t\t\t\t\t\t\t\t: path2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isInside(entry1.winding) === isInside(containerWinding)) {\n\t\t\t\t\tentry1.exclude = true;\n\t\t\t\t\tpaths[entry1.index] = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar container = entry1.container;\n\t\t\t\t\tpath1.setClockwise(container ? !container.isClockwise()\n\t\t\t\t\t\t\t: clockwise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\tfunction divideLocations(locations, include, clearLater) {\n\t\tvar results = include && [],\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tclearHandles = false,\n\t\t\tclearCurves = clearLater || [],\n\t\t\tclearLookup = clearLater && {},\n\t\t\trenormalizeLocs,\n\t\t\tprevCurve,\n\t\t\tprevTime;\n\n\t\tfunction getId(curve) {\n\t\t\treturn curve._path._id + '.' + curve._segment1._index;\n\t\t}\n\n\t\tfor (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n\t\t\tvar curve = clearLater[i];\n\t\t\tif (curve._path)\n\t\t\t\tclearLookup[getId(curve)] = true;\n\t\t}\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\ttime = loc._time,\n\t\t\t\torigTime = time,\n\t\t\t\texclude = include && !include(loc),\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tsegment;\n\t\t\tif (curve) {\n\t\t\t\tif (curve !== prevCurve) {\n\t\t\t\t\tclearHandles = !curve.hasHandles()\n\t\t\t\t\t\t\t|| clearLookup && clearLookup[getId(curve)];\n\t\t\t\t\trenormalizeLocs = [];\n\t\t\t\t\tprevTime = null;\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t} else if (prevTime >= tMin) {\n\t\t\t\t\ttime /= prevTime;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (exclude) {\n\t\t\t\tif (renormalizeLocs)\n\t\t\t\t\trenormalizeLocs.push(loc);\n\t\t\t\tcontinue;\n\t\t\t} else if (include) {\n\t\t\t\tresults.unshift(loc);\n\t\t\t}\n\t\t\tprevTime = origTime;\n\t\t\tif (time < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tvar newCurve = curve.divideAtTime(time, true);\n\t\t\t\tif (clearHandles)\n\t\t\t\t\tclearCurves.push(curve, newCurve);\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tfor (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n\t\t\t\t\tvar l = renormalizeLocs[j];\n\t\t\t\t\tl._time = (l._time - time) / (1 - time);\n\t\t\t\t}\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t}\n\t\tif (!clearLater)\n\t\t\tclearCurveHandles(clearCurves);\n\t\treturn results || locations;\n\t}\n\n\tfunction getWinding(point, curves, dir, closed, dontFlip) {\n\t\tvar ia = dir ? 1 : 0,\n\t\t\tio = ia ^ 1,\n\t\t\tpv = [point.x, point.y],\n\t\t\tpa = pv[ia],\n\t\t\tpo = pv[io],\n\t\t\twindingEpsilon = 1e-9,\n\t\t\tqualityEpsilon = 1e-6,\n\t\t\tpaL = pa - windingEpsilon,\n\t\t\tpaR = pa + windingEpsilon,\n\t\t\twindingL = 0,\n\t\t\twindingR = 0,\n\t\t\tpathWindingL = 0,\n\t\t\tpathWindingR = 0,\n\t\t\tonPath = false,\n\t\t\tonAnyPath = false,\n\t\t\tquality = 1,\n\t\t\troots = [],\n\t\t\tvPrev,\n\t\t\tvClose;\n\n\t\tfunction addWinding(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po < min(o0, o3) || po > max(o0, o3)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar a0 = v[ia + 0],\n\t\t\t\ta1 = v[ia + 2],\n\t\t\t\ta2 = v[ia + 4],\n\t\t\t\ta3 = v[ia + 6];\n\t\t\tif (o0 === o3) {\n\t\t\t\tif (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar t =   po === o0 ? 0\n\t\t\t\t\t: po === o3 ? 1\n\t\t\t\t\t: paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3)\n\t\t\t\t\t? 1\n\t\t\t\t\t: Curve.solveCubic(v, io, po, roots, 0, 1) > 0\n\t\t\t\t\t\t? roots[0]\n\t\t\t\t\t\t: 1,\n\t\t\t\ta =   t === 0 ? a0\n\t\t\t\t\t: t === 1 ? a3\n\t\t\t\t\t: Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n\t\t\t\twinding = o0 > o3 ? 1 : -1,\n\t\t\t\twindingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n\t\t\t\ta3Prev = vPrev[ia + 6];\n\t\t\tif (po !== o0) {\n\t\t\t\tif (a < paL) {\n\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t} else if (a > paR) {\n\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t} else {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\tif (a > pa - qualityEpsilon && a < pa + qualityEpsilon)\n\t\t\t\t\tquality /= 2;\n\t\t\t} else {\n\t\t\t\tif (winding !== windingPrev) {\n\t\t\t\t\tif (a0 < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t} else if (a0 > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t}\n\t\t\t\t} else if (a0 != a3Prev) {\n\t\t\t\t\tif (a3Prev < paR && a > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t} else if (a3Prev > paL && a < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tquality = 0;\n\t\t\t}\n\t\t\tvPrev = v;\n\t\t\treturn !dontFlip && a > paL && a < paR\n\t\t\t\t\t&& Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0\n\t\t\t\t\t&& getWinding(point, curves, !dir, closed, true);\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to1 = v[io + 2],\n\t\t\t\to2 = v[io + 4],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n\t\t\t\tvar a0 = v[ia + 0],\n\t\t\t\t\ta1 = v[ia + 2],\n\t\t\t\t\ta2 = v[ia + 4],\n\t\t\t\t\ta3 = v[ia + 6],\n\t\t\t\t\tmonoCurves = paL > max(a0, a1, a2, a3) ||\n\t\t\t\t\t\t\t\t paR < min(a0, a1, a2, a3)\n\t\t\t\t\t\t\t? [v] : Curve.getMonoCurves(v, dir),\n\t\t\t\t\tres;\n\t\t\t\tfor (var i = 0, l = monoCurves.length; i < l; i++) {\n\t\t\t\t\tif (res = addWinding(monoCurves[i]))\n\t\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar curve = curves[i],\n\t\t\t\tpath = curve._path,\n\t\t\t\tv = curve.getValues(),\n\t\t\t\tres;\n\t\t\tif (!i || curves[i - 1]._path !== path) {\n\t\t\t\tvPrev = null;\n\t\t\t\tif (!path._closed) {\n\t\t\t\t\tvClose = Curve.getValues(\n\t\t\t\t\t\t\tpath.getLastCurve().getSegment2(),\n\t\t\t\t\t\t\tcurve.getSegment1(),\n\t\t\t\t\t\t\tnull, !closed);\n\t\t\t\t\tif (vClose[io] !== vClose[io + 6]) {\n\t\t\t\t\t\tvPrev = vClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!vPrev) {\n\t\t\t\t\tvPrev = v;\n\t\t\t\t\tvar prev = path.getLastCurve();\n\t\t\t\t\twhile (prev && prev !== curve) {\n\t\t\t\t\t\tvar v2 = prev.getValues();\n\t\t\t\t\t\tif (v2[io] !== v2[io + 6]) {\n\t\t\t\t\t\t\tvPrev = v2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprev = prev.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (res = handleCurve(v))\n\t\t\t\treturn res;\n\n\t\t\tif (i + 1 === l || curves[i + 1]._path !== path) {\n\t\t\t\tif (vClose && (res = handleCurve(vClose)))\n\t\t\t\t\treturn res;\n\t\t\t\tif (onPath && !pathWindingL && !pathWindingR) {\n\t\t\t\t\tpathWindingL = pathWindingR = path.isClockwise(closed) ^ dir\n\t\t\t\t\t\t\t? 1 : -1;\n\t\t\t\t}\n\t\t\t\twindingL += pathWindingL;\n\t\t\t\twindingR += pathWindingR;\n\t\t\t\tpathWindingL = pathWindingR = 0;\n\t\t\t\tif (onPath) {\n\t\t\t\t\tonAnyPath = true;\n\t\t\t\t\tonPath = false;\n\t\t\t\t}\n\t\t\t\tvClose = null;\n\t\t\t}\n\t\t}\n\t\twindingL = abs(windingL);\n\t\twindingR = abs(windingR);\n\t\treturn {\n\t\t\twinding: max(windingL, windingR),\n\t\t\twindingL: windingL,\n\t\t\twindingR: windingR,\n\t\t\tquality: quality,\n\t\t\tonPath: onAnyPath\n\t\t};\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, curves, operator) {\n\t\tvar chain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twinding;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tvar offsets = [0.5, 0.25, 0.75],\n\t\t\twinding = { winding: 0, quality: -1 },\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n\t\t\tvar length = totalLength * offsets[i];\n\t\t\tfor (var j = 0, l = chain.length; j < l; j++) {\n\t\t\t\tvar entry = chain[j],\n\t\t\t\t\tcurveLength = entry.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tvar curve = entry.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\toperand = parent instanceof CompoundPath ? parent : path,\n\t\t\t\t\t\tt = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n\t\t\t\t\t\tpt = curve.getPointAtTime(t),\n\t\t\t\t\t\tdir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n\t\t\t\t\tvar wind = null;\n\t\t\t\t\tif (operator.subtract && path2) {\n\t\t\t\t\t\tvar pathWinding = operand === path1\n\t\t\t\t\t\t\t\t\t\t  ? path2._getWinding(pt, dir, true)\n\t\t\t\t\t\t\t\t\t\t  : path1._getWinding(pt, dir, true);\n\t\t\t\t\t\tif (operand === path1 && pathWinding.winding ||\n\t\t\t\t\t\t\toperand === path2 && !pathWinding.winding) {\n\t\t\t\t\t\t\tif (pathWinding.quality < 1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twind = { winding: 0, quality: 1 };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twind = wind || getWinding(pt, curves, dir, true);\n\t\t\t\t\tif (wind.quality > winding.quality)\n\t\t\t\t\t\twinding = wind;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tfor (var j = chain.length - 1; j >= 0; j--) {\n\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t}\n\n\tfunction tracePaths(segments, operator) {\n\t\tvar paths = [],\n\t\t\tstarts;\n\n\t\tfunction isValid(seg) {\n\t\t\tvar winding;\n\t\t\treturn !!(seg && !seg._visited && (!operator\n\t\t\t\t\t|| operator[(winding = seg._winding || {}).winding]\n\t\t\t\t\t\t&& !(operator.unite && winding.winding === 2\n\t\t\t\t\t\t\t&& winding.windingL && winding.windingR)));\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\tif (seg) {\n\t\t\t\tfor (var i = 0, l = starts.length; i < l; i++) {\n\t\t\t\t\tif (seg === starts[i])\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction visitPath(path) {\n\t\t\tvar segments = path._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tsegments[i]._visited = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getCrossingSegments(segment, collectStarts) {\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tstart = inter,\n\t\t\t\tcrossings = [];\n\t\t\tif (collectStarts)\n\t\t\t\tstarts = [segment];\n\n\t\t\tfunction collect(inter, end) {\n\t\t\t\twhile (inter && inter !== end) {\n\t\t\t\t\tvar other = inter._segment,\n\t\t\t\t\t\tpath = other && other._path;\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tvar next = other.getNext() || path.getFirstSegment(),\n\t\t\t\t\t\t\tnextInter = next._intersection;\n\t\t\t\t\t\tif (other !== segment && (isStart(other)\n\t\t\t\t\t\t\t|| isStart(next)\n\t\t\t\t\t\t\t|| next && (isValid(other) && (isValid(next)\n\t\t\t\t\t\t\t\t|| nextInter && isValid(nextInter._segment))))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcrossings.push(other);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (collectStarts)\n\t\t\t\t\t\t\tstarts.push(other);\n\t\t\t\t\t}\n\t\t\t\t\tinter = inter._next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inter) {\n\t\t\t\tcollect(inter);\n\t\t\t\twhile (inter && inter._prev)\n\t\t\t\t\tinter = inter._prev;\n\t\t\t\tcollect(inter, start);\n\t\t\t}\n\t\t\treturn crossings;\n\t\t}\n\n\t\tsegments.sort(function(seg1, seg2) {\n\t\t\tvar inter1 = seg1._intersection,\n\t\t\t\tinter2 = seg2._intersection,\n\t\t\t\tover1 = !!(inter1 && inter1._overlap),\n\t\t\t\tover2 = !!(inter2 && inter2._overlap),\n\t\t\t\tpath1 = seg1._path,\n\t\t\t\tpath2 = seg2._path;\n\t\t\treturn over1 ^ over2\n\t\t\t\t\t? over1 ? 1 : -1\n\t\t\t\t\t: !inter1 ^ !inter2\n\t\t\t\t\t\t? inter1 ? 1 : -1\n\t\t\t\t\t\t: path1 !== path2\n\t\t\t\t\t\t\t? path1._id - path2._id\n\t\t\t\t\t\t\t: seg1._index - seg2._index;\n\t\t});\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tvalid = isValid(seg),\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false,\n\t\t\t\tclosed = true,\n\t\t\t\tbranches = [],\n\t\t\t\tbranch,\n\t\t\t\tvisited,\n\t\t\t\thandleIn;\n\t\t\tif (valid && seg._path._overlapsOnly) {\n\t\t\t\tvar path1 = seg._path,\n\t\t\t\t\tpath2 = seg._intersection._segment._path;\n\t\t\t\tif (path1.compare(path2)) {\n\t\t\t\t\tif (path1.getArea())\n\t\t\t\t\t\tpaths.push(path1.clone(false));\n\t\t\t\t\tvisitPath(path1);\n\t\t\t\t\tvisitPath(path2);\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (valid) {\n\t\t\t\tvar first = !path,\n\t\t\t\t\tcrossings = getCrossingSegments(seg, first),\n\t\t\t\t\tother = crossings.shift(),\n\t\t\t\t\tfinished = !first && (isStart(seg) || isStart(other)),\n\t\t\t\t\tcross = !finished && other;\n\t\t\t\tif (first) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (finished) {\n\t\t\t\t\tif (seg.isFirst() || seg.isLast())\n\t\t\t\t\t\tclosed = seg._path._closed;\n\t\t\t\t\tseg._visited = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (cross && branch) {\n\t\t\t\t\tbranches.push(branch);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (!branch) {\n\t\t\t\t\tif (cross)\n\t\t\t\t\t\tcrossings.push(seg);\n\t\t\t\t\tbranch = {\n\t\t\t\t\t\tstart: path._segments.length,\n\t\t\t\t\t\tcrossings: crossings,\n\t\t\t\t\t\tvisited: visited = [],\n\t\t\t\t\t\thandleIn: handleIn\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (cross)\n\t\t\t\t\tseg = other;\n\t\t\t\tif (!isValid(seg)) {\n\t\t\t\t\tpath.removeSegments(branch.start);\n\t\t\t\t\tfor (var j = 0, k = visited.length; j < k; j++) {\n\t\t\t\t\t\tvisited[j]._visited = false;\n\t\t\t\t\t}\n\t\t\t\t\tvisited.length = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tseg = branch && branch.crossings.shift();\n\t\t\t\t\t\tif (!seg || !seg._path) {\n\t\t\t\t\t\t\tseg = null;\n\t\t\t\t\t\t\tbranch = branches.pop();\n\t\t\t\t\t\t\tif (branch) {\n\t\t\t\t\t\t\t\tvisited = branch.visited;\n\t\t\t\t\t\t\t\thandleIn = branch.handleIn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (branch && !isValid(seg));\n\t\t\t\t\tif (!seg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar next = seg.getNext();\n\t\t\t\tpath.add(new Segment(seg._point, handleIn,\n\t\t\t\t\t\tnext && seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tvisited.push(seg);\n\t\t\t\tseg = next || seg._path.getFirstSegment();\n\t\t\t\thandleIn = next && next._handleIn;\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(handleIn);\n\t\t\t\t\tpath.setClosed(closed);\n\t\t\t\t}\n\t\t\t\tif (path.getArea() !== 0) {\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, dir, closed) {\n\t\t\treturn getWinding(point, this.getCurves(), dir, closed);\n\t\t},\n\n\t\tunite: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'unite', options);\n\t\t},\n\n\t\tintersect: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'intersect', options);\n\t\t},\n\n\t\tsubtract: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'subtract', options);\n\t\t},\n\n\t\texclude: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'exclude', options);\n\t\t},\n\n\t\tdivide: function(path, options) {\n\t\t\treturn options && (options.trace == false || options.stroke)\n\t\t\t\t\t? splitBoolean(this, path, 'divide')\n\t\t\t\t\t: createResult([\n\t\t\t\t\t\tthis.subtract(path, options),\n\t\t\t\t\t\tthis.intersect(path, options)\n\t\t\t\t\t], true, this, path, options);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tpaths = children || [this];\n\n\t\t\tfunction hasOverlap(seg, path) {\n\t\t\t\tvar inter = seg && seg._intersection;\n\t\t\t\treturn inter && inter._overlap && inter._path === path;\n\t\t\t}\n\n\t\t\tvar hasOverlaps = false,\n\t\t\t\thasCrossings = false,\n\t\t\t\tintersections = this.getIntersections(null, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap() && (hasOverlaps = true) ||\n\t\t\t\t\t\t\tinter.isCrossing() && (hasCrossings = true);\n\t\t\t\t}),\n\t\t\t\tclearCurves = hasOverlaps && hasCrossings && [];\n\t\t\tintersections = CurveLocation.expand(intersections);\n\t\t\tif (hasOverlaps) {\n\t\t\t\tvar overlaps = divideLocations(intersections, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap();\n\t\t\t\t}, clearCurves);\n\t\t\t\tfor (var i = overlaps.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar overlap = overlaps[i],\n\t\t\t\t\t\tpath = overlap._path,\n\t\t\t\t\t\tseg = overlap._segment,\n\t\t\t\t\t\tprev = seg.getPrevious(),\n\t\t\t\t\t\tnext = seg.getNext();\n\t\t\t\t\tif (hasOverlap(prev, path) && hasOverlap(next, path)) {\n\t\t\t\t\t\tseg.remove();\n\t\t\t\t\t\tprev._handleOut._set(0, 0);\n\t\t\t\t\t\tnext._handleIn._set(0, 0);\n\t\t\t\t\t\tif (prev !== seg && !prev.getCurve().hasLength()) {\n\t\t\t\t\t\t\tnext._handleIn.set(prev._handleIn);\n\t\t\t\t\t\t\tprev.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasCrossings) {\n\t\t\t\tdivideLocations(intersections, hasOverlaps && function(inter) {\n\t\t\t\t\tvar curve1 = inter.getCurve(),\n\t\t\t\t\t\tseg1 = inter.getSegment(),\n\t\t\t\t\t\tother = inter._intersection,\n\t\t\t\t\t\tcurve2 = other._curve,\n\t\t\t\t\t\tseg2 = other._segment;\n\t\t\t\t\tif (curve1 && curve2 && curve1._path && curve2._path)\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif (seg1)\n\t\t\t\t\t\tseg1._intersection = null;\n\t\t\t\t\tif (seg2)\n\t\t\t\t\t\tseg2._intersection = null;\n\t\t\t\t}, clearCurves);\n\t\t\t\tif (clearCurves)\n\t\t\t\t\tclearCurveHandles(clearCurves);\n\t\t\t\tpaths = tracePaths(Base.each(paths, function(path) {\n\t\t\t\t\tBase.push(this, path._segments);\n\t\t\t\t}, []));\n\t\t\t}\n\t\t\tvar length = paths.length,\n\t\t\t\titem;\n\t\t\tif (length > 1 && children) {\n\t\t\t\tif (paths !== children)\n\t\t\t\t\tthis.setChildren(paths);\n\t\t\t\titem = this;\n\t\t\t} else if (length === 1 && !children) {\n\t\t\t\tif (paths[0] !== this)\n\t\t\t\t\tthis.setSegments(paths[0].removeSegments());\n\t\t\t\titem = this;\n\t\t\t}\n\t\t\tif (!item) {\n\t\t\t\titem = new CompoundPath(Item.NO_INSERT);\n\t\t\t\titem.addChildren(paths);\n\t\t\t\titem = item.reduce();\n\t\t\t\titem.copyAttributes(this);\n\t\t\t\tthis.replaceWith(item);\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\n\t\treorient: function(nonZero, clockwise) {\n\t\t\tvar children = this._children;\n\t\t\tif (children && children.length) {\n\t\t\t\tthis.setChildren(reorientPaths(this.removeChildren(),\n\t\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\t\treturn !!(nonZero ? w : w & 1);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclockwise));\n\t\t\t} else if (clockwise !== undefined) {\n\t\t\t\tthis.setClockwise(clockwise);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tgetInteriorPoint: function() {\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\tpoint = bounds.getCenter(true);\n\t\t\tif (!this.contains(point)) {\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\ty = point.y,\n\t\t\t\t\tintercepts = [],\n\t\t\t\t\troots = [];\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar v = curves[i].getValues(),\n\t\t\t\t\t\to0 = v[1],\n\t\t\t\t\t\to1 = v[3],\n\t\t\t\t\t\to2 = v[5],\n\t\t\t\t\t\to3 = v[7];\n\t\t\t\t\tif (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n\t\t\t\t\t\tvar monoCurves = Curve.getMonoCurves(v);\n\t\t\t\t\t\tfor (var j = 0, m = monoCurves.length; j < m; j++) {\n\t\t\t\t\t\t\tvar mv = monoCurves[j],\n\t\t\t\t\t\t\t\tmo0 = mv[1],\n\t\t\t\t\t\t\t\tmo3 = mv[7];\n\t\t\t\t\t\t\tif ((mo0 !== mo3) &&\n\t\t\t\t\t\t\t\t(y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)){\n\t\t\t\t\t\t\t\tvar x = y === mo0 ? mv[0]\n\t\t\t\t\t\t\t\t\t: y === mo3 ? mv[6]\n\t\t\t\t\t\t\t\t\t: Curve.solveCubic(mv, 1, y, roots, 0, 1)\n\t\t\t\t\t\t\t\t\t\t=== 1\n\t\t\t\t\t\t\t\t\t\t? Curve.getPoint(mv, roots[0]).x\n\t\t\t\t\t\t\t\t\t\t: (mv[0] + mv[6]) / 2;\n\t\t\t\t\t\t\t\tintercepts.push(x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (intercepts.length > 1) {\n\t\t\t\t\tintercepts.sort(function(a, b) { return a - b; });\n\t\t\t\t\tpoint.x = (intercepts[0] + intercepts[1]) / 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn point;\n\t\t}\n\t};\n});\n\nvar PathFlattener = Base.extend({\n\t_class: 'PathFlattener',\n\n\tinitialize: function(path, flatness, maxRecursion, ignoreStraight, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminSpan = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, t1, t2) {\n\t\t\tif ((t2 - t1) > minSpan\n\t\t\t\t\t&& !(ignoreStraight && Curve.isStraight(curve))\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, flatness || 0.25)) {\n\t\t\t\tvar halves = Curve.subdivide(curve, 0.5),\n\t\t\t\t\ttMid = (t1 + t2) / 2;\n\t\t\t\tcomputeParts(halves[0], index, t1, tMid);\n\t\t\t\tcomputeParts(halves[1], index, tMid, t2);\n\t\t\t} else {\n\t\t\t\tvar dx = curve[6] - curve[0],\n\t\t\t\t\tdy = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tif (dist > 0) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tcurve: curve,\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\ttime: t2,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2 || segment1, segments[0]);\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\t_get: function(offset) {\n\t\tvar parts = this.parts,\n\t\t\tlength = parts.length,\n\t\t\tstart,\n\t\t\ti, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (!j || parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (; i < length; i++) {\n\t\t\tvar part = parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = parts[i - 1],\n\t\t\t\t\tprevTime = prev && prev.index === part.index ? prev.time : 0,\n\t\t\t\t\tprevOffset = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tindex: part.index,\n\t\t\t\t\ttime: prevTime + (part.time - prevTime)\n\t\t\t\t\t\t* (offset - prevOffset) / (part.offset - prevOffset)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tindex: parts[length - 1].index,\n\t\t\ttime: 1\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tvar start = this._get(from),\n\t\t\tend = this._get(to);\n\t\tfor (var i = start.index, l = end.index; i <= l; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti === start.index ? start.time : 0,\n\t\t\t\t\ti === end.index ? end.time : 1);\n\t\t\tif (i === start.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar param = this._get(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.time);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tclosed = path._closed;\n\t\tfor (var i = 0, prev, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point;\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(prev = point.clone());\n\t\t\t}\n\t\t}\n\t\tif (closed) {\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\t\tthis.closed = closed;\n\t},\n\n\tfit: function(error) {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = null;\n\t\tif (length > 0) {\n\t\t\tsegments = [new Segment(points[0])];\n\t\t\tif (length > 1) {\n\t\t\t\tthis.fitCubic(segments, error, 0, length - 1,\n\t\t\t\t\t\tpoints[1].subtract(points[0]),\n\t\t\t\t\t\tpoints[length - 2].subtract(points[length - 1]));\n\t\t\t\tif (this.closed) {\n\t\t\t\t\tsegments.shift();\n\t\t\t\t\tsegments.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(segments, error, first, last, tan1, tan2) {\n\t\tvar points = this.points;\n\t\tif (last - first === 1) {\n\t\t\tvar pt1 = points[first],\n\t\t\t\tpt2 = points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(error, error * error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < error && parametersInOrder) {\n\t\t\t\tthis.addCurve(segments, curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar tanCenter = points[split - 1].subtract(points[split + 1]);\n\t\tthis.fitCubic(segments, error, first, split, tan1, tanCenter);\n\t\tthis.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(segments, curve) {\n\t\tvar prev = segments[segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tsegments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tabs = Math.abs,\n\t\t\tpoints = this.points,\n\t\t\tpt1 = points[first],\n\t\t\tpt2 = points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1,\n\t\t\talpha2;\n\t\tif (abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X = C[0][0] * X[1]    - C[1][0] * X[0],\n\t\t\t\tdetXC1 = X[0]    * C[1][1] - X[1]    * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\talpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0\n\t\t\t\t\t\t\t: abs(c1) > epsilon ? X[1] / c1\n\t\t\t\t\t\t\t: 0;\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1,\n\t\t\t\tpt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)),\n\t\t\t\tpt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\treturn Numerical.isZero(df) ? u : u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsOptions: { stroke: false, handle: false },\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setContent(source._content);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(521);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx, param, viewMatrix) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\tvar lines = this._lines,\n\t\t\tstyle = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar rect = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(rect, rect) : rect;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tnamedColors = {\n\t\t\ttransparent: [0, 0, 0, 0]\n\t\t},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(\n\t\t\t\t/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})?$/i\n\t\t\t) || string.match(\n\t\t\t\t/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])?$/i\n\t\t\t),\n\t\t\ttype = 'rgb',\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tvar amount = match[4] ? 4 : 3;\n\t\t\tcomponents = new Array(amount);\n\t\t\tfor (var i = 0; i < amount; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^(rgb|hsl)a?\\((.*)\\)$/)) {\n\t\t\ttype = match[1];\n\t\t\tcomponents = match[2].trim().split(/[,\\s]+/g);\n\t\t\tvar isHSL = type === 'hsl';\n\t\t\tfor (var i = 0, l = Math.min(components.length, 4); i < l; i++) {\n\t\t\t\tvar component = components[i];\n\t\t\t\tvar value = parseFloat(component);\n\t\t\t\tif (isHSL) {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tvar unit = component.match(/([a-z]*)$/)[1];\n\t\t\t\t\t\tvalue *= ({\n\t\t\t\t\t\t\tturn: 360,\n\t\t\t\t\t\t\trad: 180 / Math.PI,\n\t\t\t\t\t\t\tgrad: 0.9\n\t\t\t\t\t\t}[unit] || 1);\n\t\t\t\t\t} else if (i < 3) {\n\t\t\t\t\t\tvalue /= 100;\n\t\t\t\t\t}\n\t\t\t\t} else if (i < 3) {\n\t\t\t\t\tvalue /= 255;\n\t\t\t\t}\n\t\t\t\tcomponents[i] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar color = namedColors[string];\n\t\t\tif (!color) {\n\t\t\t\tif (window) {\n\t\t\t\t\tif (!colorCtx) {\n\t\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t\t}\n\t\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\t\tcolor = namedColors[string] = [\n\t\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\t\tdata[2] / 255\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tcolor = [0, 0, 0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponents = color.slice();\n\t\t}\n\t\treturn [type, components];\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = type === 'gradient'\n\t\t\t\t\t? name === 'gradient'\n\t\t\t\t\t\t? function(value) {\n\t\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\t\tvalue = Gradient.read(\n\t\t\t\t\t\t\t\tArray.isArray(value)\n\t\t\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t: function(value) {\n\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : +value;\n\t\t\t\t\t};\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar args = arguments,\n\t\t\t\treading = this.__read,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (reading)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = Base.slice(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (reading) {\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = Base.slice(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\tvar converted = fromCSS(arg);\n\t\t\t\t\ttype = converted[0];\n\t\t\t\t\tcomponents = converted[1];\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && !i && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (reading && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (reading)\n\t\t\t\tthis.__read = read;\n\t\t\treturn this;\n\t\t},\n\n\t\tset: '#initialize',\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner) {\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t}\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this.getAlpha() === col.getAlpha()\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx, matrix) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\thighlight = components[3],\n\t\t\t\tinverse = matrix && matrix.inverted(),\n\t\t\t\tcanvasGradient;\n\t\t\tif (inverse) {\n\t\t\t\torigin = inverse._transformPoint(origin);\n\t\t\t\tdestination = inverse._transformPoint(destination);\n\t\t\t\tif (highlight)\n\t\t\t\t\thighlight = inverse._transformPoint(highlight);\n\t\t\t}\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin);\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tcanvasGradient.addColorStop(\n\t\t\t\t\t\toffset == null ? i / (l - 1) : offset,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t},\n\n\t\t\t_setOwner: function(color, owner, setter) {\n\t\t\t\tif (color) {\n\t\t\t\t\tif (color._owner && owner && color._owner !== owner) {\n\t\t\t\t\t\tcolor = color.clone();\n\t\t\t\t\t}\n\t\t\t\t\tif (!color._owner ^ !owner) {\n\t\t\t\t\t\tcolor._owner = owner || null;\n\t\t\t\t\t\tcolor._setter = setter || null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn color;\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar LinkedColor = Color.extend({\n\tinitialize: function Color(color, item, setter) {\n\t\tpaper.Color.apply(this, [color]);\n\t\tthis._item = item;\n\t\tthis._setter = setter;\n\t},\n\n\t_changed: function(){\n\t\tthis._item[this._setter](this);\n\t}\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && Base.isPlainObject(stops)) {\n\t\t\tthis.set(stops);\n\t\t\tstops = radial = null;\n\t\t}\n\t\tif (this._stops == null) {\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\t}\n\t\tif (this._radial == null) {\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t\t}\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n\t\t\tthis._owners[i]._changed();\n\t\t}\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (!this._owners.length)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tstops[i] = this._stops[i].clone();\n\t\t}\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (stops.length < 2) {\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\t}\n\t\tvar _stops = this._stops;\n\t\tif (_stops) {\n\t\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t\t_stops[i]._owner = undefined;\n\t\t}\n\t\t_stops = this._stops = GradientStop.readList(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t_stops[i]._owner = this;\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class) {\n\t\t\tvar stops1 = this._stops,\n\t\t\t\tstops2 = gradient._stops,\n\t\t\t\tlength = stops1.length;\n\t\t\tif (length === stops2.length) {\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (!stops1[i].equals(stops2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tvar color = arg0,\n\t\t\toffset = arg1;\n\t\tif (typeof arg0 === 'object' && arg1 === undefined) {\n\t\t\tif (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\toffset = arg0[1];\n\t\t\t} else if ('color' in arg0 || 'offset' in arg0\n\t\t\t\t\t|| 'rampPoint' in arg0) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\toffset = arg0.offset || arg0.rampPoint || 0;\n\t\t\t}\n\t\t}\n\t\tthis.setColor(color);\n\t\tthis.setOffset(offset);\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._offset);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar color = this._color,\n\t\t\toffset = this._offset;\n\t\treturn Base.serialize(offset == null ? [color] : [color, offset],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(129);\n\t},\n\n\tgetOffset: function() {\n\t\treturn this._offset;\n\t},\n\n\tsetOffset: function(offset) {\n\t\tthis._offset = offset;\n\t\tthis._changed();\n\t},\n\n\tgetRampPoint: '#getOffset',\n\tsetRampPoint: '#setOffset',\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function() {\n\t\tColor._setOwner(this._color, null);\n\t\tthis._color = Color._setOwner(Color.read(arguments, 0), this,\n\t\t\t\t'setColor');\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._offset == stop._offset\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar itemDefaults = {\n\t\tfillColor: null,\n\t\tfillRule: 'nonzero',\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\tshadowColor: null,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: null\n\t},\n\tgroupDefaults = Base.set({}, itemDefaults, {\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tleading: null,\n\t\tjustification: 'left'\n\t}),\n\ttextDefaults = Base.set({}, groupDefaults, {\n\t\tfillColor: new Color()\n\t}),\n\tflags = {\n\t\tstrokeWidth: 193,\n\t\tstrokeCap: 193,\n\t\tstrokeJoin: 193,\n\t\tstrokeScaling: 201,\n\t\tmiterLimit: 193,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t},\n\titem = {\n\t\tbeans: true\n\t},\n\tfields = {\n\t\t_class: 'Style',\n\t\tbeans: true,\n\n\t\tinitialize: function Style(style, _owner, _project) {\n\t\t\tthis._values = {};\n\t\t\tthis._owner = _owner;\n\t\t\tthis._project = _owner && _owner._project || _project\n\t\t\t\t\t|| paper.project;\n\t\t\tthis._defaults = !_owner || _owner instanceof Group ? groupDefaults\n\t\t\t\t\t: _owner instanceof TextItem ? textDefaults\n\t\t\t\t\t: itemDefaults;\n\t\t\tif (style)\n\t\t\t\tthis.set(style);\n\t\t}\n\t};\n\n\tBase.each(groupDefaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tapplyToChildren = children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath);\n\t\t\tif (applyToChildren) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t}\n\t\t\tif ((key === 'selectedColor' || !applyToChildren)\n\t\t\t\t\t&& key in this._defaults) {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old) {\n\t\t\t\t\t\t\tColor._setOwner(old, null);\n\t\t\t\t\t\t\told._canvasStyle = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tvalue = Color._setOwner(value, owner, set);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 129);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (key in this._defaults && (!children || !children.length\n\t\t\t\t\t|| _dontMerge || owner instanceof CompoundPath)) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone) {\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tvalue = childValue;\n\t\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value && isColor) {\n\t\t\t\tvalue = Color._setOwner(value, owner, set);\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tBase.each({\n\t\tFont: 'FontFamily',\n\t\tWindingRule: 'FillRule'\n\t}, function(value, key) {\n\t\tvar get = 'get' + key,\n\t\t\tset = 'set' + key;\n\t\tfields[get] = item[get] = '#get' + value;\n\t\tfields[set] = item[set] = '#set' + value;\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\tfunction compare(style1, style2, secondary) {\n\t\t\tvar values1 = style1._values,\n\t\t\t\tvalues2 = style2._values,\n\t\t\t\tdefaults2 = style2._defaults;\n\t\t\tfor (var key in values1) {\n\t\t\t\tvar value1 = values1[key],\n\t\t\t\t\tvalue2 = values2[key];\n\t\t\t\tif (!(secondary && key in values2) && !Base.equals(value1,\n\t\t\t\t\t\tvalue2 === undefined ? defaults2[key] : value2))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& compare(this, style)\n\t\t\t\t&& compare(style, this, true)\n\t\t\t\t|| false;\n\t},\n\n\t_dispose: function() {\n\t\tvar color;\n\t\tcolor = this.getFillColor();\n\t\tif (color) color._canvasStyle = null;\n\t\tcolor = this.getStrokeColor();\n\t\tif (color) color._canvasStyle = null;\n\t\tcolor = this.getShadowColor();\n\t\tif (color) color._canvasStyle = null;\n\t},\n\n\thasFill: function() {\n\t\tvar color = this.getFillColor();\n\t\treturn !!color && color.alpha > 0;\n\t},\n\n\thasStroke: function() {\n\t\tvar color = this.getStrokeColor();\n\t\treturn !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\tvar color = this.getShadowColor();\n\t\treturn !!color && color.alpha > 0 && (this.getShadowBlur() > 0\n\t\t\t\t|| !this.getShadowOffset().isZero());\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tisInserted: function(el) {\n\t\t\treturn document.body.contains(el);\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn el && handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++) {\n\t\t\t\t\tvar name = parts[i];\n\t\t\t\t\tvar options = (\n\t\t\t\t\t\tel === document\n\t\t\t\t\t\t&& (name === 'touchstart' || name === 'touchmove')\n\t\t\t\t\t) ? { passive: false } : false;\n\t\t\t\t\tel.addEventListener(name, func, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t\t}\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\ttimer;\n\n\tfunction handleCallbacks() {\n\t\tvar functions = callbacks;\n\t\tcallbacks = [];\n\t\tfor (var i = 0, l = functions.length; i < l; i++)\n\t\t\tfunctions[i]();\n\t\trequested = nativeRequest && callbacks.length;\n\t\tif (requested)\n\t\t\tnativeRequest(handleCallbacks);\n\t}\n\n\treturn function(callback) {\n\t\tcallbacks.push(callback);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t}\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t}\n\n\t\tvar size;\n\t\tif (window && element) {\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserDrag: none,\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsize = getCanvasSize();\n\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\t\t} else {\n\t\t\tsize = new Size(element);\n\t\t\telement = null;\n\t\t}\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window && window.devicePixelRatio || 1;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize = size;\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t\tthis._itemEvents = { native: {}, virtual: {} };\n\t\tthis._autoUpdate = !paper.agent.node;\n\t\tthis._needsUpdate = false;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tvar project = this._project;\n\t\tif (project._view === this)\n\t\t\tproject._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(\n\t\tItem._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']),\n\t\tfunction(name) {\n\t\t\tthis[name] = {};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\tgetAutoUpdate: function() {\n\t\treturn this._autoUpdate;\n\t},\n\n\tsetAutoUpdate: function(autoUpdate) {\n\t\tthis._autoUpdate = autoUpdate;\n\t\tif (autoUpdate)\n\t\t\tthis.requestUpdate();\n\t},\n\n\tupdate: function() {\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\trequestUpdate: function() {\n\t\tif (!this._requested) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\t\tthat._requested = false;\n\t\t\t\tif (that._animate) {\n\t\t\t\t\tthat.requestUpdate();\n\t\t\t\t\tvar element = that._element;\n\t\t\t\t\tif ((!DomElement.getPrefixed(document, 'hidden')\n\t\t\t\t\t\t\t|| PaperScope.getAttribute(element, 'keepalive')\n\t\t\t\t\t\t\t\t=== 'true') && DomElement.isInView(element)) {\n\t\t\t\t\t\tthat._handleFrame();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (that._autoUpdate)\n\t\t\t\t\tthat.update();\n\t\t\t});\n\t\t\tthis._requested = true;\n\t\t}\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tthis.requestUpdate();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._last ? now - this._last : 0;\n\t\tthis._last = now;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._project._changed(4097);\n\t\tthis._bounds = this._decomposed = undefined;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize.set(size);\n\t\tthis._changed();\n\t\tthis.emit('resize', { size: size, delta: delta });\n\t\tif (this._autoUpdate) {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_setElementSize: function(width, height) {\n\t\tvar element = this._element;\n\t\tif (element) {\n\t\t\tif (element.width !== width)\n\t\t\t\telement.width = width;\n\t\t\tif (element.height !== height)\n\t\t\t\telement.height = height;\n\t\t}\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tisInserted: function() {\n\t\treturn DomElement.isInserted(this._element);\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixels;\n\t\tif (element) {\n\t\t\tvar parent = element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tpixels = parseFloat(pixels);\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\treturn 0;\n\t}\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar value = (rotate ? Base : Point).read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getCenter(true)));\n\t};\n}, {\n\t_decompose: function() {\n\t\treturn this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.translate(this.getCenter().subtract(center));\n\t},\n\n\tgetZoom: function() {\n\t\tvar scaling = this._decompose().scaling;\n\t\treturn (scaling.x + scaling.y) / 2;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis.transform(new Matrix().scale(zoom / this.getZoom(),\n\t\t\tthis.getCenter()));\n\t},\n\n\tgetRotation: function() {\n\t\treturn this._decompose().rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tthis.rotate(rotation - current);\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar scaling = this._decompose().scaling;\n\t\treturn new LinkedPoint(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling) {\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._matrix.append(matrix);\n\t},\n\n\tscrollBy: function() {\n\t\tthis.translate(Point.read(arguments).negate());\n\t}\n}), {\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tgetEventPoint: function(event) {\n\t\treturn this.viewToProject(DomEvent.getOffset(event, this._element));\n\t},\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (document && typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\tvar ctor = window ? CanvasView : View;\n\t\t\treturn new ctor(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tif (!window)\n\t\treturn;\n\tvar prevFocus,\n\t\ttempFocus,\n\t\tdragging = false,\n\t\tmouseDown = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[\n\t\t\t\ttarget.getAttribute('id')];\n\t}\n\n\tfunction updateFocus() {\n\t\tvar view = View._focused;\n\t\tif (!view || !view.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tif ((view = View._views[i]).isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, event, point) {\n\t\tview._handleMouseEvent('mousemove', event, point);\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {},\n\t\tdocEvents = {\n\t\t\tmouseout: function(event) {\n\t\t\t\tvar view = View._focused,\n\t\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\t\tif (view && (!target || target.nodeName === 'HTML')) {\n\t\t\t\t\tvar offset = DomEvent.getOffset(event, view._element),\n\t\t\t\t\t\tx = offset.x,\n\t\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\t\tax = abs(x),\n\t\t\t\t\t\tmax = 1 << 25,\n\t\t\t\t\t\tdiff = ax - max;\n\t\t\t\t\toffset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n\t\t\t\t\thandleMouseMove(view, event, view.viewToProject(offset));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tscroll: updateFocus\n\t\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event);\n\t\tif (!dragging) {\n\t\t\tdragging = true;\n\t\t\tview._handleMouseEvent('mousedown', event);\n\t\t}\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!mouseDown) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target) {\n\t\t\t\t\tif (view)\n\t\t\t\t\t\thandleMouseMove(view, event);\n\t\t\t\t\tif (!prevFocus)\n\t\t\t\t\t\tprevFocus = view;\n\t\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t\t}\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tif (prevFocus && !prevFocus.isInserted())\n\t\t\t\t\tprevFocus = null;\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tprevFocus = null;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view)\n\t\t\thandleMouseMove(view, event);\n\t};\n\n\tdocEvents[mousedown] = function() {\n\t\tmouseDown = true;\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (view && dragging)\n\t\t\tview._handleMouseEvent('mouseup', event);\n\t\tmouseDown = dragging = false;\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar called = false,\n\t\tprevented = false,\n\t\tfallbacks = {\n\t\t\tdoubleclick: 'click',\n\t\t\tmousedrag: 'mousemove'\n\t\t},\n\t\twasInView = false,\n\t\toverView,\n\t\tdownPoint,\n\t\tlastPoint,\n\t\tdownItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tclickItem,\n\t\tclickTime,\n\t\tdblClick;\n\n\tfunction emitMouseEvent(obj, target, type, event, point, prevPoint,\n\t\t\tstopItem) {\n\t\tvar stopped = false,\n\t\t\tmouseEvent;\n\n\t\tfunction emit(obj, type) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point,\n\t\t\t\t\t\t\ttarget || obj,\n\t\t\t\t\t\t\tprevPoint ? point.subtract(prevPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent)) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tif (mouseEvent.prevented)\n\t\t\t\t\t\tprevented = true;\n\t\t\t\t\tif (mouseEvent.stopped)\n\t\t\t\t\t\treturn stopped = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar fallback = fallbacks[type];\n\t\t\t\tif (fallback)\n\t\t\t\t\treturn emit(obj, fallback);\n\t\t\t}\n\t\t}\n\n\t\twhile (obj && obj !== stopItem) {\n\t\t\tif (emit(obj, type))\n\t\t\t\tbreak;\n\t\t\tobj = obj._parent;\n\t\t}\n\t\treturn stopped;\n\t}\n\n\tfunction emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n\t\tview._project.removeOn(type);\n\t\tprevented = called = false;\n\t\treturn (dragItem && emitMouseEvent(dragItem, null, type, event,\n\t\t\t\t\tpoint, prevPoint)\n\t\t\t|| hitItem && hitItem !== dragItem\n\t\t\t\t&& !hitItem.isDescendant(dragItem)\n\t\t\t\t&& emitMouseEvent(hitItem, null, type === 'mousedrag' ?\n\t\t\t\t\t'mousemove' : type, event, point, prevPoint, dragItem)\n\t\t\t|| emitMouseEvent(view, dragItem || hitItem || view, type, event,\n\t\t\t\t\tpoint, prevPoint));\n\t}\n\n\tvar itemEventsMap = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleMouseEvent: function(type, event, point) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\thitItems = itemEvents.native[type],\n\t\t\t\tnativeMove = type === 'mousemove',\n\t\t\t\ttool = this._scope.tool,\n\t\t\t\tview = this;\n\n\t\t\tfunction responds(type) {\n\t\t\t\treturn itemEvents.virtual[type] || view.responds(type)\n\t\t\t\t\t\t|| tool && tool.responds(type);\n\t\t\t}\n\n\t\t\tif (nativeMove && dragging && responds('mousedrag'))\n\t\t\t\ttype = 'mousedrag';\n\t\t\tif (!point)\n\t\t\t\tpoint = this.getEventPoint(event);\n\n\t\t\tvar inView = this.getBounds().contains(point),\n\t\t\t\thit = hitItems && inView && view._project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\thitItem = hit && hit.item || null,\n\t\t\t\thandle = false,\n\t\t\t\tmouse = {};\n\t\t\tmouse[type.substr(5)] = true;\n\n\t\t\tif (hitItems && hitItem !== overItem) {\n\t\t\t\tif (overItem) {\n\t\t\t\t\temitMouseEvent(overItem, null, 'mouseleave', event, point);\n\t\t\t\t}\n\t\t\t\tif (hitItem) {\n\t\t\t\t\temitMouseEvent(hitItem, null, 'mouseenter', event, point);\n\t\t\t\t}\n\t\t\t\toverItem = hitItem;\n\t\t\t}\n\t\t\tif (wasInView ^ inView) {\n\t\t\t\temitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave',\n\t\t\t\t\t\tevent, point);\n\t\t\t\toverView = inView ? this : null;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tif ((inView || mouse.drag) && !point.equals(lastPoint)) {\n\t\t\t\temitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove',\n\t\t\t\t\t\tevent, point, lastPoint);\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\twasInView = inView;\n\t\t\tif (mouse.down && inView || mouse.up && downPoint) {\n\t\t\t\temitMouseEvents(this, hitItem, type, event, point, downPoint);\n\t\t\t\tif (mouse.down) {\n\t\t\t\t\tdblClick = hitItem === clickItem\n\t\t\t\t\t\t&& (Date.now() - clickTime < 300);\n\t\t\t\t\tdownItem = clickItem = hitItem;\n\t\t\t\t\tif (!prevented && hitItem) {\n\t\t\t\t\t\tvar item = hitItem;\n\t\t\t\t\t\twhile (item && !item.responds('mousedrag'))\n\t\t\t\t\t\t\titem = item._parent;\n\t\t\t\t\t\tif (item)\n\t\t\t\t\t\t\tdragItem = hitItem;\n\t\t\t\t\t}\n\t\t\t\t\tdownPoint = point;\n\t\t\t\t} else if (mouse.up) {\n\t\t\t\t\tif (!prevented && hitItem === downItem) {\n\t\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\t\temitMouseEvents(this, hitItem, dblClick ? 'doubleclick'\n\t\t\t\t\t\t\t\t: 'click', event, point, downPoint);\n\t\t\t\t\t\tdblClick = false;\n\t\t\t\t\t}\n\t\t\t\t\tdownItem = dragItem = null;\n\t\t\t\t}\n\t\t\t\twasInView = false;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tlastPoint = point;\n\t\t\tif (handle && tool) {\n\t\t\t\tcalled = tool._handleMouseEvent(type, event, point, mouse)\n\t\t\t\t\t|| called;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tevent.cancelable !== false\n\t\t\t\t&& (called && !mouse.move || mouse.down && responds('mouseup'))\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_handleKeyEvent: function(type, event, key, character) {\n\t\t\tvar scope = this._scope,\n\t\t\t\ttool = scope.tool,\n\t\t\t\tkeyEvent;\n\n\t\t\tfunction emit(obj) {\n\t\t\t\tif (obj.responds(type)) {\n\t\t\t\t\tpaper = scope;\n\t\t\t\t\tobj.emit(type, keyEvent = keyEvent\n\t\t\t\t\t\t\t|| new KeyEvent(type, event, key, character));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isVisible()) {\n\t\t\t\temit(this);\n\t\t\t\tif (tool && tool.responds(type))\n\t\t\t\t\temit(tool);\n\t\t\t}\n\t\t},\n\n\t\t_countItemEvent: function(type, sign) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\tnative = itemEvents.native,\n\t\t\t\tvirtual = itemEvents.virtual;\n\t\t\tfor (var key in itemEventsMap) {\n\t\t\t\tnative[key] = (native[key] || 0)\n\t\t\t\t\t\t+ (itemEventsMap[key][type] || 0) * sign;\n\t\t\t}\n\t\t\tvirtual[type] = (virtual[type] || 0) + sign;\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus,\n\n\t\t\t_resetState: function() {\n\t\t\t\tdragging = mouseDown = called = wasInView = false;\n\t\t\t\tprevFocus = tempFocus = overView = downPoint = lastPoint =\n\t\t\t\t\tdownItem = overItem = dragItem = clickItem = clickTime =\n\t\t\t\t\tdblClick = null;\n\t\t\t}\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof window.HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ Base.slice(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tvar ctx = this._context = canvas.getContext('2d');\n\t\tctx.save();\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(ctx,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t\tthis._needsUpdate = true;\n\t},\n\n\tremove: function remove() {\n\t\tthis._context.restore();\n\t\treturn remove.base.call(this);\n\t},\n\n\t_setElementSize: function _setElementSize(width, height) {\n\t\tvar pixelRatio = this._pixelRatio;\n\t\t_setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\t\tif (pixelRatio !== 1) {\n\t\t\tvar element = this._element,\n\t\t\t\tctx = this._context;\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tctx.restore();\n\t\t\tctx.save();\n\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetContext: function() {\n\t\treturn this._context;\n\t},\n\n\tgetPixelSize: function getPixelSize(size) {\n\t\tvar agent = paper.agent,\n\t\t\tpixels;\n\t\tif (agent && agent.firefox) {\n\t\t\tpixels = getPixelSize.base.call(this, size);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tif (!this._needsUpdate)\n\t\t\treturn false;\n\t\tvar project = this._project,\n\t\t\tctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tif (project)\n\t\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tthis._needsUpdate = false;\n\t\treturn true;\n\t}\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t\tthis.type = event && event.type;\n\t},\n\n\tprevented: false,\n\tstopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.prevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.stopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetTimeStamp: function() {\n\t\treturn this.event.timeStamp;\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(type, event, key, character) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tvar keyLookup = {\n\t\t\t'\\t': 'tab',\n\t\t\t' ': 'space',\n\t\t\t'\\b': 'backspace',\n\t\t\t'\\x7f': 'delete',\n\t\t\t'Spacebar': 'space',\n\t\t\t'Del': 'delete',\n\t\t\t'Win': 'meta',\n\t\t\t'Esc': 'escape'\n\t\t},\n\n\t\tcharLookup = {\n\t\t\t'tab': '\\t',\n\t\t\t'space': ' ',\n\t\t\t'enter': '\\r'\n\t\t},\n\n\t\tkeyMap = {},\n\t\tcharMap = {},\n\t\tmetaFixMap,\n\t\tdownKey,\n\n\t\tmodifiers = new Base({\n\t\t\tshift: false,\n\t\t\tcontrol: false,\n\t\t\talt: false,\n\t\t\tmeta: false,\n\t\t\tcapsLock: false,\n\t\t\tspace: false\n\t\t}).inject({\n\t\t\toption: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.alt;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcommand: {\n\t\t\t\tget: function() {\n\t\t\t\t\tvar agent = paper && paper.agent;\n\t\t\t\t\treturn agent && agent.mac ? this.meta : this.control;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tfunction getKey(event) {\n\t\tvar key = event.key || event.keyIdentifier;\n\t\tkey = /^U\\+/.test(key)\n\t\t\t\t? String.fromCharCode(parseInt(key.substr(2), 16))\n\t\t\t\t: /^Arrow[A-Z]/.test(key) ? key.substr(5)\n\t\t\t\t: key === 'Unidentified'  || key === undefined\n\t\t\t\t\t? String.fromCharCode(event.keyCode)\n\t\t\t\t\t: key;\n\t\treturn keyLookup[key] ||\n\t\t\t\t(key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n\t}\n\n\tfunction handleKey(down, key, character, event) {\n\t\tvar type = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharMap[key] = character;\n\t\t} else {\n\t\t\tdelete charMap[key];\n\t\t}\n\t\tif (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar agent = paper && paper.agent;\n\t\t\tif (name === 'meta' && agent && agent.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tmetaFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var k in metaFixMap) {\n\t\t\t\t\t\tif (k in charMap)\n\t\t\t\t\t\t\thandleKey(false, k, metaFixMap[k], event);\n\t\t\t\t\t}\n\t\t\t\t\tmetaFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && metaFixMap) {\n\t\t\tmetaFixMap[key] = character;\n\t\t}\n\t\tif (view) {\n\t\t\tview._handleKeyEvent(down ? 'keydown' : 'keyup', event, key,\n\t\t\t\t\tcharacter);\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar key = getKey(event),\n\t\t\t\tagent = paper && paper.agent;\n\t\t\tif (key.length > 1 || agent && (agent.chrome && (event.altKey\n\t\t\t\t\t\t|| agent.mac && event.metaKey\n\t\t\t\t\t\t|| !agent.mac && event.ctrlKey))) {\n\t\t\t\thandleKey(true, key,\n\t\t\t\t\t\tcharLookup[key] || (key.length > 1 ? '' : key), event);\n\t\t\t} else {\n\t\t\t\tdownKey = key;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downKey) {\n\t\t\t\tvar key = getKey(event),\n\t\t\t\t\tcode = event.charCode,\n\t\t\t\t\tcharacter = code >= 32 ? String.fromCharCode(code)\n\t\t\t\t\t\t: key.length > 1 ? '' : key;\n\t\t\t\tif (key !== downKey) {\n\t\t\t\t\tkey = character.toLowerCase();\n\t\t\t\t}\n\t\t\t\thandleKey(true, key, character, event);\n\t\t\t\tdownKey = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar key = getKey(event);\n\t\t\tif (key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn this.tool[/^mouse(down|up)$/.test(this.type)\n\t\t\t\t? '_downCount' : '_moveCount'];\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown',\n\t\t\t'onKeyUp'],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._moveCount = -1;\n\t\tthis._downCount = -1;\n\t\tthis.set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_handleMouseEvent: function(type, event, point, mouse) {\n\t\tpaper = this._scope;\n\t\tif (mouse.drag && !this.responds(type))\n\t\t\ttype = 'mousemove';\n\t\tvar move = mouse.move || mouse.drag,\n\t\t\tresponds = this.responds(type),\n\t\t\tminDistance = this.minDistance,\n\t\t\tmaxDistance = this.maxDistance,\n\t\t\tcalled = false,\n\t\t\ttool = this;\n\t\tfunction update(minDistance, maxDistance) {\n\t\t\tvar pt = point,\n\t\t\t\ttoolPoint = move ? tool._point : (tool._downPoint || pt);\n\t\t\tif (move) {\n\t\t\t\tif (tool._moveCount >= 0 && pt.equals(toolPoint)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (toolPoint && (minDistance != null || maxDistance != null)) {\n\t\t\t\t\tvar vector = pt.subtract(toolPoint),\n\t\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\t\tif (distance < (minDistance || 0))\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (maxDistance) {\n\t\t\t\t\t\tpt = toolPoint.add(vector.normalize(\n\t\t\t\t\t\t\t\tMath.min(distance, maxDistance)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttool._moveCount++;\n\t\t\t}\n\t\t\ttool._point = pt;\n\t\t\ttool._lastPoint = toolPoint || pt;\n\t\t\tif (mouse.down) {\n\t\t\t\ttool._moveCount = -1;\n\t\t\t\ttool._downPoint = pt;\n\t\t\t\ttool._downCount++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tfunction emit() {\n\t\t\tif (responds) {\n\t\t\t\tcalled = tool.emit(type, new ToolEvent(tool, type, event))\n\t\t\t\t\t\t|| called;\n\t\t\t}\n\t\t}\n\n\t\tif (mouse.down) {\n\t\t\tupdate();\n\t\t\temit();\n\t\t} else if (mouse.up) {\n\t\t\tupdate(null, maxDistance);\n\t\t\temit();\n\t\t} else if (responds) {\n\t\t\twhile (update(minDistance, maxDistance))\n\t\t\t\temit();\n\t\t}\n\t\treturn called;\n\t}\n\n});\n\nvar Tween = Base.extend(Emitter, {\n\t_class: 'Tween',\n\n\tstatics: {\n\t\teasings: {\n\t\t\tlinear: function(t) {\n\t\t\t\treturn t;\n\t\t\t},\n\n\t\t\teaseInQuad: function(t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\n\t\t\teaseOutQuad: function(t) {\n\t\t\t\treturn t * (2 - t);\n\t\t\t},\n\n\t\t\teaseInOutQuad: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 2 * t * t\n\t\t\t\t\t: -1 + 2 * (2 - t) * t;\n\t\t\t},\n\n\t\t\teaseInCubic: function(t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\n\t\t\teaseOutCubic: function(t) {\n\t\t\t\treturn --t * t * t + 1;\n\t\t\t},\n\n\t\t\teaseInOutCubic: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 4 * t * t * t\n\t\t\t\t\t: (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\t\t\t},\n\n\t\t\teaseInQuart: function(t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\n\t\t\teaseOutQuart: function(t) {\n\t\t\t\treturn 1 - (--t) * t * t * t;\n\t\t\t},\n\n\t\t\teaseInOutQuart: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 8 * t * t * t * t\n\t\t\t\t\t: 1 - 8 * (--t) * t * t * t;\n\t\t\t},\n\n\t\t\teaseInQuint: function(t) {\n\t\t\t\treturn t * t * t * t * t;\n\t\t\t},\n\n\t\t\teaseOutQuint: function(t) {\n\t\t\t\treturn 1 + --t * t * t * t * t;\n\t\t\t},\n\n\t\t\teaseInOutQuint: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 16 * t * t * t * t * t\n\t\t\t\t\t: 1 + 16 * (--t) * t * t * t * t;\n\t\t\t}\n\t\t}\n\t},\n\n\tinitialize: function Tween(object, from, to, duration, easing, start) {\n\t\tthis.object = object;\n\t\tvar type = typeof easing;\n\t\tvar isFunction = type === 'function';\n\t\tthis.type = isFunction\n\t\t\t? type\n\t\t\t: type === 'string'\n\t\t\t\t? easing\n\t\t\t\t: 'linear';\n\t\tthis.easing = isFunction ? easing : Tween.easings[this.type];\n\t\tthis.duration = duration;\n\t\tthis.running = false;\n\n\t\tthis._then = null;\n\t\tthis._startTime = null;\n\t\tvar state = from || to;\n\t\tthis._keys = state ? Object.keys(state) : [];\n\t\tthis._parsedKeys = this._parseKeys(this._keys);\n\t\tthis._from = state && this._getState(from);\n\t\tthis._to = state && this._getState(to);\n\t\tif (start !== false) {\n\t\t\tthis.start();\n\t\t}\n\t},\n\n\tthen: function(then) {\n\t\tthis._then = then;\n\t\treturn this;\n\t},\n\n\tstart: function() {\n\t\tthis._startTime = null;\n\t\tthis.running = true;\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\tthis.running = false;\n\t\treturn this;\n\t},\n\n\tupdate: function(progress) {\n\t\tif (this.running) {\n\t\t\tif (progress > 1) {\n\t\t\t\tprogress = 1;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\n\t\t\tvar factor = this.easing(progress),\n\t\t\t\tkeys = this._keys,\n\t\t\t\tgetValue = function(value) {\n\t\t\t\t\treturn typeof value === 'function'\n\t\t\t\t\t\t? value(factor, progress)\n\t\t\t\t\t\t: value;\n\t\t\t\t};\n\t\t\tfor (var i = 0, l = keys && keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i],\n\t\t\t\t\tfrom = getValue(this._from[key]),\n\t\t\t\t\tto = getValue(this._to[key]),\n\t\t\t\t\tvalue = (from && to && from.__add && to.__add)\n\t\t\t\t\t\t? to.__subtract(from).__multiply(factor).__add(from)\n\t\t\t\t\t\t: ((to - from) * factor) + from;\n\t\t\t\tthis._setProperty(this._parsedKeys[key], value);\n\t\t\t}\n\n\t\t\tif (!this.running && this._then) {\n\t\t\t\tthis._then(this.object);\n\t\t\t}\n\t\t\tif (this.responds('update')) {\n\t\t\t\tthis.emit('update', new Base({\n\t\t\t\t\tprogress: progress,\n\t\t\t\t\tfactor: factor\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\t_events: {\n\t\tonUpdate: {}\n\t},\n\n\t_handleFrame: function(time) {\n\t\tvar startTime = this._startTime,\n\t\t\tprogress = startTime\n\t\t\t\t? (time - startTime) / this.duration\n\t\t\t\t: 0;\n\t\tif (!startTime) {\n\t\t\tthis._startTime = time;\n\t\t}\n\t\tthis.update(progress);\n\t},\n\n\t_getState: function(state) {\n\t\tvar keys = this._keys,\n\t\t\tresult = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i],\n\t\t\t\tpath = this._parsedKeys[key],\n\t\t\t\tcurrent = this._getProperty(path),\n\t\t\t\tvalue;\n\t\t\tif (state) {\n\t\t\t\tvar resolved = this._resolveValue(current, state[key]);\n\t\t\t\tthis._setProperty(path, resolved);\n\t\t\t\tvalue = this._getProperty(path);\n\t\t\t\tvalue = value && value.clone ? value.clone() : value;\n\t\t\t\tthis._setProperty(path, current);\n\t\t\t} else {\n\t\t\t\tvalue = current && current.clone ? current.clone() : current;\n\t\t\t}\n\t\t\tresult[key] = value;\n\t\t}\n\t\treturn result;\n\t},\n\n\t_resolveValue: function(current, value) {\n\t\tif (value) {\n\t\t\tif (Array.isArray(value) && value.length === 2) {\n\t\t\t\tvar operator = value[0];\n\t\t\t\treturn (\n\t\t\t\t\toperator &&\n\t\t\t\t\toperator.match &&\n\t\t\t\t\toperator.match(/^[+\\-*/]=/)\n\t\t\t\t)\n\t\t\t\t\t? this._calculate(current, operator[0], value[1])\n\t\t\t\t\t: value;\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tvar match = value.match(/^[+\\-*/]=(.*)/);\n\t\t\t\tif (match) {\n\t\t\t\t\tvar parsed = JSON.parse(match[1].replace(\n\t\t\t\t\t\t/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g,\n\t\t\t\t\t\t'\"$2\": '\n\t\t\t\t\t));\n\t\t\t\t\treturn this._calculate(current, value[0], parsed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\n\t_calculate: function(left, operator, right) {\n\t\treturn paper.PaperScript.calculateBinary(left, operator, right);\n\t},\n\n\t_parseKeys: function(keys) {\n\t\tvar parsed = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i],\n\t\t\t\tpath = key\n\t\t\t\t\t.replace(/\\.([^.]*)/g, '/$1')\n\t\t\t\t\t.replace(/\\[['\"]?([^'\"\\]]*)['\"]?\\]/g, '/$1');\n\t\t\tparsed[key] = path.split('/');\n\t\t}\n\t\treturn parsed;\n\t},\n\n\t_getProperty: function(path, offset) {\n\t\tvar obj = this.object;\n\t\tfor (var i = 0, l = path.length - (offset || 0); i < l && obj; i++) {\n\t\t\tobj = obj[path[i]];\n\t\t}\n\t\treturn obj;\n\t},\n\n\t_setProperty: function(path, value) {\n\t\tvar dest = this._getProperty(path, 1);\n\t\tif (dest) {\n\t\t\tdest[path[path.length - 1]] = value;\n\t\t}\n\t}\n});\n\nvar Http = {\n\trequest: function(options) {\n\t\tvar xhr = new self.XMLHttpRequest();\n\t\txhr.open((options.method || 'get').toUpperCase(), options.url,\n\t\t\t\tBase.pick(options.async, true));\n\t\tif (options.mimeType)\n\t\t\txhr.overrideMimeType(options.mimeType);\n\t\txhr.onload = function() {\n\t\t\tvar status = xhr.status;\n\t\t\tif (status === 0 || status === 200) {\n\t\t\t\tif (options.onLoad) {\n\t\t\t\t\toptions.onLoad.call(xhr, xhr.responseText);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\txhr.onerror();\n\t\t\t}\n\t\t};\n\t\txhr.onerror = function() {\n\t\t\tvar status = xhr.status,\n\t\t\t\tmessage = 'Could not load \"' + options.url + '\" (Status: '\n\t\t\t\t\t\t+ status + ')';\n\t\t\tif (options.onError) {\n\t\t\t\toptions.onError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tif (!window)\n\t\t\treturn null;\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tclear = false;\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (!ctx) {\n\t\t\tthrow new Error('Canvas ' + canvas +\n\t\t\t\t\t' is unable to provide a 2D context.');\n\t\t}\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\tvar canvas = this.getCanvas(width, height);\n\t\treturn canvas ? canvas.getContext('2d') : null;\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj && obj.canvas ? obj.canvas : obj;\n\t\tif (canvas && canvas.getContext) {\n\t\t\tcanvas.getContext('2d').restore();\n\t\t\tthis.canvases.push(canvas);\n\t\t}\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tif (ctx) {\n\t\tBase.each(modes, function(func, mode) {\n\t\t\tvar darken = mode === 'darken',\n\t\t\t\tok = false;\n\t\t\tctx.save();\n\t\t\ttry {\n\t\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tctx.globalCompositeOperation = mode;\n\t\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken\n\t\t\t\t\t\t\t? 170 : 51;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t\tctx.restore();\n\t\t\tnativeModes[mode] = ok;\n\t\t});\n\t\tCanvasProvider.release(ctx);\n\t}\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SvgElement = new function() {\n\tvar svg = 'http://www.w3.org/2000/svg',\n\t\txmlns = 'http://www.w3.org/2000/xmlns',\n\t\txlink = 'http://www.w3.org/1999/xlink',\n\t\tattributeNamespace = {\n\t\t\thref: xlink,\n\t\t\txlink: xmlns,\n\t\t\txmlns: xmlns + '/',\n\t\t\t'xmlns:xlink': xmlns + '/'\n\t\t};\n\n\tfunction create(tag, attributes, formatter) {\n\t\treturn set(document.createElementNS(svg, tag), attributes, formatter);\n\t}\n\n\tfunction get(node, name) {\n\t\tvar namespace = attributeNamespace[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\treturn value === 'null' ? null : value;\n\t}\n\n\tfunction set(node, attributes, formatter) {\n\t\tfor (var name in attributes) {\n\t\t\tvar value = attributes[name],\n\t\t\t\tnamespace = attributeNamespace[name];\n\t\t\tif (typeof value === 'number' && formatter)\n\t\t\t\tvalue = formatter.number(value);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, name, value);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(name, value);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\treturn {\n\t\tsvg: svg,\n\t\txmlns: xmlns,\n\t\txlink: xlink,\n\n\t\tcreate: create,\n\t\tget: get,\n\t\tset: set\n\t};\n};\n\nvar SvgStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tfillRule: ['fill-rule', 'string'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'style']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nnew function() {\n\tvar formatter;\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tvar point;\n\t\t\tif (matrix.isInvertible()) {\n\t\t\t\tmatrix = matrix._shiftless();\n\t\t\t\tpoint = matrix._inverseTransform(trans);\n\t\t\t\ttrans = null;\n\t\t\t} else {\n\t\t\t\tpoint = new Point();\n\t\t\t}\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling,\n\t\t\t\t\tskew = decomposed.skewing;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (skew.x)\n\t\t\t\t\tparts.push('skewX(' + formatter.number(skew.x) + ')');\n\t\t\t\tif (skew.y)\n\t\t\t\t\tparts.push('skewY(' + formatter.number(skew.y) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = SvgElement.create('g', attrs, formatter);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = SvgElement.create('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tSvgElement.set(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages == false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn SvgElement.create('image', attrs, formatter);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\tlength = segments.length,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (matchShapes && length >= 2 && !item.hasHandles()) {\n\t\t\tif (length > 2) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\t}\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar start = segments[0]._point,\n\t\t\t\t\tend = segments[1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: start.x,\n\t\t\t\t\ty1: start.y,\n\t\t\t\t\tx2: end.x,\n\t\t\t\t\ty2: end.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn SvgElement.create('path', attrs, formatter);\n\t}\n\n\tfunction exportSymbolItem(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tdefinition = item._definition,\n\t\t\tnode = getDefinition(definition, 'symbol'),\n\t\t\tdefinitionItem = definition._item,\n\t\t\tbounds = definitionItem.getBounds();\n\t\tif (!node) {\n\t\t\tnode = SvgElement.create('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tnode.appendChild(exportSVG(definitionItem, options));\n\t\t\tsetDefinition(definition, node, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + node.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = bounds.width;\n\t\tattrs.height = bounds.height;\n\t\tattrs.overflow = 'visible';\n\t\treturn SvgElement.create('use', attrs, formatter);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin(),\n\t\t\t\tdestination = color.getDestination(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = SvgElement.create((radial ? 'radial' : 'linear')\n\t\t\t\t\t+ 'Gradient', attrs, formatter);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha(),\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: offset == null ? i / (l - 1) : offset\n\t\t\t\t};\n\t\t\t\tif (stopColor)\n\t\t\t\t\tattrs['stop-color'] = stopColor.toCSS(true);\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(\n\t\t\t\t\t\tSvgElement.create('stop', attrs, formatter));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = SvgElement.create('text', getTransform(item._matrix, true),\n\t\t\t\tformatter);\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tSymbolItem: exportSymbolItem,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent(),\n\t\t\tstyle = [];\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SvgStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tif (type === 'style') {\n\t\t\t\t\tstyle.push(entry.attribute + ': ' + value);\n\t\t\t\t} else {\n\t\t\t\t\tattrs[entry.attribute] = value == null ? 'none'\n\t\t\t\t\t\t\t: type === 'color' ? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array' ? value.join(',')\n\t\t\t\t\t\t\t: type === 'lookup' ? entry.toSVG[value]\n\t\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (style.length)\n\t\t\tattrs.style = style.join(';');\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn SvgElement.set(node, attrs, formatter);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-'\n\t\t\t\t+ (item._id || item.__id || (item.__id = UID.get('svg')))];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + typeId;\n\t\tdefinitions.svgs[type + '-' + (item._id || item.__id)] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = SvgElement.create('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(SvgElement.create('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new self.XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar children = this._children,\n\t\t\t\tview = this.getView(),\n\t\t\t\tbounds = Base.pick(options.bounds, 'view'),\n\t\t\t\tmx = options.matrix || bounds === 'view' && view._matrix,\n\t\t\t\tmatrix = mx && Matrix.read([mx]),\n\t\t\t\trect = bounds === 'view'\n\t\t\t\t\t? new Rectangle([0, 0], view.getViewSize())\n\t\t\t\t\t: bounds === 'content'\n\t\t\t\t\t\t? Item._getBounds(children, matrix, { stroke: true })\n\t\t\t\t\t\t\t.rect\n\t\t\t\t\t\t: Rectangle.read([bounds], 0, { readNull: true }),\n\t\t\t\tattrs = {\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: SvgElement.svg,\n\t\t\t\t\t'xmlns:xlink': SvgElement.xlink,\n\t\t\t\t};\n\t\t\tif (rect) {\n\t\t\t\tattrs.width = rect.width;\n\t\t\t\tattrs.height = rect.height;\n\t\t\t\tif (rect.x || rect.x === 0 || rect.y || rect.y === 0)\n\t\t\t\t\tattrs.viewBox = formatter.rectangle(rect);\n\t\t\t}\n\t\t\tvar node = SvgElement.create('svg', attrs, formatter),\n\t\t\t\tparent = node;\n\t\t\tif (matrix && !matrix.isIdentity()) {\n\t\t\t\tparent = node.appendChild(SvgElement.create('g',\n\t\t\t\t\t\tgetTransform(matrix), formatter));\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tparent.appendChild(exportSVG(children[i], options, true));\n\t\t\t}\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tvar definitions = {},\n\t\trootSize;\n\n\tfunction getValue(node, name, isString, allowNull, allowPercent,\n\t\t\tdefaultValue) {\n\t\tvar value = SvgElement.get(node, name) || defaultValue,\n\t\t\tres = value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString ? '' : 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t\treturn /%\\s*$/.test(value)\n\t\t\t? (res / 100) * (allowPercent ? 1\n\t\t\t\t: rootSize[/x|^width/.test(name) ? 'width' : 'height'])\n\t\t\t: res;\n\t}\n\n\tfunction getPoint(node, x, y, allowNull, allowPercent, defaultX, defaultY) {\n\t\tx = getValue(node, x || 'x', false, allowNull, allowPercent, defaultX);\n\t\ty = getValue(node, y || 'y', false, allowNull, allowPercent, defaultY);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull, allowPercent) {\n\t\tw = getValue(node, w || 'width', false, allowNull, allowPercent);\n\t\th = getValue(node, h || 'height', false, allowNull, allowPercent);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none' ? null\n\t\t\t\t: type === 'number' ? parseFloat(value)\n\t\t\t\t: type === 'array' ?\n\t\t\t\t\tvalue ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t: type === 'color' ? getDefinition(value) || value\n\t\t\t\t: type === 'lookup' ? lookup[value]\n\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\tisDefs = type === 'defs',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip && !isDefs) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportNode(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& !/^defs$/i.test(childNode.nodeName)\n\t\t\t\t\t&& (child = importNode(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof SymbolDefinition))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || isDefs) {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\treturn PathItem.create(node.getAttribute('d'));\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tradial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t\tif (gradient._radial ^ radial) {\n\t\t\t\tgradient = gradient.clone();\n\t\t\t\tgradient._radial = radial;\n\t\t\t}\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, radial);\n\t\t}\n\t\tvar origin, destination, highlight,\n\t\t\tscaleToBounds = getValue(node, 'gradientUnits', true) !==\n\t\t\t\t'userSpaceOnUse';\n\t\tif (radial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy', false, scaleToBounds,\n\t\t\t\t'50%', '50%');\n\t\t\tdestination = origin.add(\n\t\t\t\tgetValue(node, 'r', false, false, scaleToBounds, '50%'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1', false, scaleToBounds,\n\t\t\t\t'0%', '0%');\n\t\t\tdestination = getPoint(node, 'x2', 'y2', false, scaleToBounds,\n\t\t\t\t'100%', '0%');\n\t\t}\n\t\tvar color = applyAttributes(\n\t\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\tcolor._scaleToBounds = scaleToBounds;\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\treturn importNode(child, options, isRoot);\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node);\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = getPoint(node).add(size.divide(2));\n\t\t\t\tthis._matrix.append(new Matrix().translate(center));\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new SymbolDefinition(\n\t\t\t\t\timportGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node);\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof SymbolDefinition\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(\n\t\t\t\t\tgetPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\treturn new Shape.Rectangle(new Rectangle(\n\t\t\t\t\t\tgetPoint(node),\n\t\t\t\t\t\tgetSize(node)\n\t\t\t\t\t), getSize(node, 'rx', 'ry'));\n\t\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(\n\t\t\t\t\tgetPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node).add(\n\t\t\t\t\tgetPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t},\n\n\t\tswitch: importGroup\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tif (item.transform) {\n\t\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\t\tmatrix = new Matrix();\n\t\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\t\tvar transform = transforms[i];\n\t\t\t\tif (!transform)\n\t\t\t\t\tbreak;\n\t\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\t\tcommand = parts[0],\n\t\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\t\tswitch (command) {\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tmatrix.append(\n\t\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tmatrix.rotate(v[0], v[1] || 0, v[2] || 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'translate':\n\t\t\t\t\tmatrix.translate(v[0], v[1] || 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scale':\n\t\t\t\t\tmatrix.scale(v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewX':\n\t\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewY':\n\t\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.transform(matrix);\n\t\t}\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n\t\t\tcolor = item[key] && item[key]();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SvgStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\tif (item[entry.set]) {\n\t\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\t\tif (entry.type === 'color') {\n\t\t\t\t\tvar color = item[entry.get]();\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tif (color._scaleToBounds) {\n\t\t\t\t\t\t\tvar bounds = item.getBounds();\n\t\t\t\t\t\t\tcolor.transform(new Matrix()\n\t\t\t\t\t\t\t\t.translate(bounds.getPoint())\n\t\t\t\t\t\t\t\t.scale(bounds.getSize()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tif (item.setOffset) {\n\t\t\t\tvar percent = value.match(/(.*)%$/);\n\t\t\t\titem.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n\t\t\t}\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, null, null, true),\n\t\t\t\tgroup,\n\t\t\t\tmatrix;\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? size.divide(rect.getSize()) : 1,\n\t\t\t\tmatrix = new Matrix().scale(scale)\n\t\t\t\t\t\t.translate(rect.getPoint().negate());\n\t\t\t\tgroup = item;\n\t\t\t} else if (item instanceof SymbolDefinition) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tgroup = item._item;\n\t\t\t}\n\t\t\tif (group)  {\n\t\t\t\tif (getAttribute(node, 'overflow', styles) !== 'visible') {\n\t\t\t\t\tvar clip = new Shape.Rectangle(rect);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t\tif (matrix)\n\t\t\t\t\tgroup.transform(matrix);\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value && node.style) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value ? undefined\n\t\t\t\t: value === 'none' ? null\n\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar parent = node.parentNode,\n\t\t\tstyles = {\n\t\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\t\tparent: !isRoot && !/^defs$/i.test(parent.tagName)\n\t\t\t\t\t\t&& DomElement.getStyles(parent) || {}\n\t\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\titem = value !== undefined\n\t\t\t\t\t&& apply(item, value, name, node, styles) || item;\n\t\t});\n\t\treturn item;\n\t}\n\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n\t\t\tname = match && match[1],\n\t\t\tres = name && definitions[window\n\t\t\t\t\t? name.replace(window.location.href.split('#')[0] + '#', '')\n\t\t\t\t\t: name];\n\t\tif (res && res._scaleToBounds) {\n\t\t\tres = res.clone();\n\t\t\tres._scaleToBounds = true;\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction importNode(node, options, isRoot) {\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\tisElement = type !== '#document',\n\t\t\tbody = document.body,\n\t\t\tcontainer,\n\t\t\tparent,\n\t\t\tnext;\n\t\tif (isRoot && isElement) {\n\t\t\trootSize = paper.getView().getSize();\n\t\t\trootSize = getSize(node, null, null, true) || rootSize;\n\t\t\tcontainer = SvgElement.create('svg', {\n\t\t\t\tstyle: 'stroke-width: 1px; stroke-miterlimit: 10'\n\t\t\t});\n\t\t\tparent = node.parentNode;\n\t\t\tnext = node.nextSibling;\n\t\t\tcontainer.appendChild(node);\n\t\t\tbody.appendChild(container);\n\t\t}\n\t\tvar settings = paper.settings,\n\t\t\tapplyMatrix = settings.applyMatrix,\n\t\t\tinsertItems = settings.insertItems;\n\t\tsettings.applyMatrix = false;\n\t\tsettings.insertItems = false;\n\t\tvar importer = importers[type],\n\t\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.insertItems = insertItems;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (isElement && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport,\n\t\t\t\tdata = isElement && node.getAttribute('data-paper-data');\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (container) {\n\t\t\tbody.removeChild(container);\n\t\t\tif (parent) {\n\t\t\t\tif (next) {\n\t\t\t\t\tparent.insertBefore(node, next);\n\t\t\t\t} else {\n\t\t\t\t\tparent.appendChild(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importSVG(source, options, owner) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\toptions = typeof options === 'function' ? { onLoad: options }\n\t\t\t\t: options || {};\n\t\tvar scope = paper,\n\t\t\titem = null;\n\n\t\tfunction onLoad(svg) {\n\t\t\ttry {\n\t\t\t\tvar node = typeof svg === 'object' ? svg : new self.DOMParser()\n\t\t\t\t\t\t.parseFromString(svg, 'image/svg+xml');\n\t\t\t\tif (!node.nodeName) {\n\t\t\t\t\tnode = null;\n\t\t\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\t\t\t}\n\t\t\t\tpaper = scope;\n\t\t\t\titem = importNode(node, options, true);\n\t\t\t\tif (!options || options.insert !== false) {\n\t\t\t\t\towner._insertItem(undefined, item);\n\t\t\t\t}\n\t\t\t\tvar onLoad = options.onLoad;\n\t\t\t\tif (onLoad)\n\t\t\t\t\tonLoad(item, svg);\n\t\t\t} catch (e) {\n\t\t\t\tonError(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction onError(message, status) {\n\t\t\tvar onError = options.onError;\n\t\t\tif (onError) {\n\t\t\t\tonError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\tvar node = document.getElementById(source);\n\t\t\tif (node) {\n\t\t\t\tonLoad(node);\n\t\t\t} else {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: source,\n\t\t\t\t\tasync: true,\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\tonLoad(reader.result);\n\t\t\t};\n\t\t\treader.onerror = function() {\n\t\t\t\tonError(reader.error);\n\t\t\t};\n\t\t\treturn reader.readAsText(source);\n\t\t} else {\n\t\t\tonLoad(source);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = function() {\n\tvar global = this,\n\t\tacorn = global.acorn;\n\tif (!acorn && typeof require !== 'undefined') {\n\t\ttry { acorn = require('acorn'); } catch(e) {}\n\t}\n\tif (!acorn) {\n\t\tvar exports, module;\n\t\tacorn = exports = module = {};\n\n(function(root, mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") return mod(exports);\n  if (typeof define == \"function\" && define.amd) return define([\"exports\"], mod);\n  mod(root.acorn || (root.acorn = {}));\n})(this, function(exports) {\n  \"use strict\";\n\n  exports.version = \"0.5.0\";\n\n  var options, input, inputLen, sourceFile;\n\n  exports.parse = function(inpt, opts) {\n\tinput = String(inpt); inputLen = input.length;\n\tsetOptions(opts);\n\tinitTokenState();\n\treturn parseTopLevel(options.program);\n  };\n\n  var defaultOptions = exports.defaultOptions = {\n\tecmaVersion: 5,\n\tstrictSemicolons: false,\n\tallowTrailingCommas: true,\n\tforbidReserved: false,\n\tallowReturnOutsideFunction: false,\n\tlocations: false,\n\tonComment: null,\n\tranges: false,\n\tprogram: null,\n\tsourceFile: null,\n\tdirectSourceFile: null\n  };\n\n  function setOptions(opts) {\n\toptions = opts || {};\n\tfor (var opt in defaultOptions) if (!Object.prototype.hasOwnProperty.call(options, opt))\n\t  options[opt] = defaultOptions[opt];\n\tsourceFile = options.sourceFile || null;\n  }\n\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\n\tfor (var line = 1, cur = 0;;) {\n\t  lineBreak.lastIndex = cur;\n\t  var match = lineBreak.exec(input);\n\t  if (match && match.index < offset) {\n\t\t++line;\n\t\tcur = match.index + match[0].length;\n\t  } else break;\n\t}\n\treturn {line: line, column: offset - cur};\n  };\n\n  exports.tokenize = function(inpt, opts) {\n\tinput = String(inpt); inputLen = input.length;\n\tsetOptions(opts);\n\tinitTokenState();\n\n\tvar t = {};\n\tfunction getToken(forceRegexp) {\n\t  lastEnd = tokEnd;\n\t  readToken(forceRegexp);\n\t  t.start = tokStart; t.end = tokEnd;\n\t  t.startLoc = tokStartLoc; t.endLoc = tokEndLoc;\n\t  t.type = tokType; t.value = tokVal;\n\t  return t;\n\t}\n\tgetToken.jumpTo = function(pos, reAllowed) {\n\t  tokPos = pos;\n\t  if (options.locations) {\n\t\ttokCurLine = 1;\n\t\ttokLineStart = lineBreak.lastIndex = 0;\n\t\tvar match;\n\t\twhile ((match = lineBreak.exec(input)) && match.index < pos) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = match.index + match[0].length;\n\t\t}\n\t  }\n\t  tokRegexpAllowed = reAllowed;\n\t  skipSpace();\n\t};\n\treturn getToken;\n  };\n\n  var tokPos;\n\n  var tokStart, tokEnd;\n\n  var tokStartLoc, tokEndLoc;\n\n  var tokType, tokVal;\n\n  var tokRegexpAllowed;\n\n  var tokCurLine, tokLineStart;\n\n  var lastStart, lastEnd, lastEndLoc;\n\n  var inFunction, labels, strict;\n\n  function raise(pos, message) {\n\tvar loc = getLineInfo(input, pos);\n\tmessage += \" (\" + loc.line + \":\" + loc.column + \")\";\n\tvar err = new SyntaxError(message);\n\terr.pos = pos; err.loc = loc; err.raisedAt = tokPos;\n\tthrow err;\n  }\n\n  var empty = [];\n\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\n\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\n  var _this = {keyword: \"this\"};\n\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\n  var _false = {keyword: \"false\", atomValue: false};\n\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\n\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\n\t\t\t\t\t  \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\n\t\t\t\t\t  \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\n\t\t\t\t\t  \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\n\t\t\t\t\t  \"throw\": _throw, \"try\": _try, \"var\": _var, \"while\": _while, \"with\": _with,\n\t\t\t\t\t  \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\n\t\t\t\t\t  \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\n\t\t\t\t\t  \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\n\t\t\t\t\t  \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\n\t\t\t\t\t  \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true}};\n\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _question = {type: \"?\", beforeExpr: true};\n\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\n  var _assign = {isAssign: true, beforeExpr: true};\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\n  var _logicalOR = {binop: 1, beforeExpr: true};\n  var _logicalAND = {binop: 2, beforeExpr: true};\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\n  var _equality = {binop: 6, beforeExpr: true};\n  var _relational = {binop: 7, beforeExpr: true};\n  var _bitShift = {binop: 8, beforeExpr: true};\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\n\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\n\t\t\t\t\t  parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\n\t\t\t\t\t  dot: _dot, question: _question, slash: _slash, eq: _eq, name: _name, eof: _eof,\n\t\t\t\t\t  num: _num, regexp: _regexp, string: _string};\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\n\n  function makePredicate(words) {\n\twords = words.split(\" \");\n\tvar f = \"\", cats = [];\n\tout: for (var i = 0; i < words.length; ++i) {\n\t  for (var j = 0; j < cats.length; ++j)\n\t\tif (cats[j][0].length == words[i].length) {\n\t\t  cats[j].push(words[i]);\n\t\t  continue out;\n\t\t}\n\t  cats.push([words[i]]);\n\t}\n\tfunction compareTo(arr) {\n\t  if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n\t  f += \"switch(str){\";\n\t  for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\n\t  f += \"return true}return false;\";\n\t}\n\n\tif (cats.length > 3) {\n\t  cats.sort(function(a, b) {return b.length - a.length;});\n\t  f += \"switch(str.length){\";\n\t  for (var i = 0; i < cats.length; ++i) {\n\t\tvar cat = cats[i];\n\t\tf += \"case \" + cat[0].length + \":\";\n\t\tcompareTo(cat);\n\t  }\n\t  f += \"}\";\n\n\t} else {\n\t  compareTo(words);\n\t}\n\treturn new Function(\"str\", f);\n  }\n\n  var isReservedWord3 = makePredicate(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\");\n\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\n\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\n\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\n\n  var isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\");\n\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  var newline = /[\\n\\r\\u2028\\u2029]/;\n\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\n\tif (code < 65) return code === 36;\n\tif (code < 91) return true;\n\tif (code < 97) return code === 95;\n\tif (code < 123)return true;\n\treturn code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  };\n\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\n\tif (code < 48) return code === 36;\n\tif (code < 58) return true;\n\tif (code < 65) return false;\n\tif (code < 91) return true;\n\tif (code < 97) return code === 95;\n\tif (code < 123)return true;\n\treturn code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  };\n\n  function line_loc_t() {\n\tthis.line = tokCurLine;\n\tthis.column = tokPos - tokLineStart;\n  }\n\n  function initTokenState() {\n\ttokCurLine = 1;\n\ttokPos = tokLineStart = 0;\n\ttokRegexpAllowed = true;\n\tskipSpace();\n  }\n\n  function finishToken(type, val) {\n\ttokEnd = tokPos;\n\tif (options.locations) tokEndLoc = new line_loc_t;\n\ttokType = type;\n\tskipSpace();\n\ttokVal = val;\n\ttokRegexpAllowed = type.beforeExpr;\n  }\n\n  function skipBlockComment() {\n\tvar startLoc = options.onComment && options.locations && new line_loc_t;\n\tvar start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\n\tif (end === -1) raise(tokPos - 2, \"Unterminated comment\");\n\ttokPos = end + 2;\n\tif (options.locations) {\n\t  lineBreak.lastIndex = start;\n\t  var match;\n\t  while ((match = lineBreak.exec(input)) && match.index < tokPos) {\n\t\t++tokCurLine;\n\t\ttokLineStart = match.index + match[0].length;\n\t  }\n\t}\n\tif (options.onComment)\n\t  options.onComment(true, input.slice(start + 2, end), start, tokPos,\n\t\t\t\t\t\tstartLoc, options.locations && new line_loc_t);\n  }\n\n  function skipLineComment() {\n\tvar start = tokPos;\n\tvar startLoc = options.onComment && options.locations && new line_loc_t;\n\tvar ch = input.charCodeAt(tokPos+=2);\n\twhile (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n\t  ++tokPos;\n\t  ch = input.charCodeAt(tokPos);\n\t}\n\tif (options.onComment)\n\t  options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\n\t\t\t\t\t\tstartLoc, options.locations && new line_loc_t);\n  }\n\n  function skipSpace() {\n\twhile (tokPos < inputLen) {\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (ch === 32) {\n\t\t++tokPos;\n\t  } else if (ch === 13) {\n\t\t++tokPos;\n\t\tvar next = input.charCodeAt(tokPos);\n\t\tif (next === 10) {\n\t\t  ++tokPos;\n\t\t}\n\t\tif (options.locations) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = tokPos;\n\t\t}\n\t  } else if (ch === 10 || ch === 8232 || ch === 8233) {\n\t\t++tokPos;\n\t\tif (options.locations) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = tokPos;\n\t\t}\n\t  } else if (ch > 8 && ch < 14) {\n\t\t++tokPos;\n\t  } else if (ch === 47) {\n\t\tvar next = input.charCodeAt(tokPos + 1);\n\t\tif (next === 42) {\n\t\t  skipBlockComment();\n\t\t} else if (next === 47) {\n\t\t  skipLineComment();\n\t\t} else break;\n\t  } else if (ch === 160) {\n\t\t++tokPos;\n\t  } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n\t\t++tokPos;\n\t  } else {\n\t\tbreak;\n\t  }\n\t}\n  }\n\n  function readToken_dot() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next >= 48 && next <= 57) return readNumber(true);\n\t++tokPos;\n\treturn finishToken(_dot);\n  }\n\n  function readToken_slash() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (tokRegexpAllowed) {++tokPos; return readRegexp();}\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_slash, 1);\n  }\n\n  function readToken_mult_modulo() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_multiplyModulo, 1);\n  }\n\n  function readToken_pipe_amp(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\n  }\n\n  function readToken_caret() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_bitwiseXOR, 1);\n  }\n\n  function readToken_plus_min(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === code) {\n\t  if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\n\t\t  newline.test(input.slice(lastEnd, tokPos))) {\n\t\ttokPos += 3;\n\t\tskipLineComment();\n\t\tskipSpace();\n\t\treturn readToken();\n\t  }\n\t  return finishOp(_incDec, 2);\n\t}\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_plusMin, 1);\n  }\n\n  function readToken_lt_gt(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tvar size = 1;\n\tif (next === code) {\n\t  size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\n\t  if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\n\t  return finishOp(_bitShift, size);\n\t}\n\tif (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\n\t\tinput.charCodeAt(tokPos + 3) == 45) {\n\t  tokPos += 4;\n\t  skipLineComment();\n\t  skipSpace();\n\t  return readToken();\n\t}\n\tif (next === 61)\n\t  size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\n\treturn finishOp(_relational, size);\n  }\n\n  function readToken_eq_excl(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\n\treturn finishOp(code === 61 ? _eq : _prefix, 1);\n  }\n\n  function getTokenFromCode(code) {\n\tswitch(code) {\n\tcase 46:\n\t  return readToken_dot();\n\n\tcase 40: ++tokPos; return finishToken(_parenL);\n\tcase 41: ++tokPos; return finishToken(_parenR);\n\tcase 59: ++tokPos; return finishToken(_semi);\n\tcase 44: ++tokPos; return finishToken(_comma);\n\tcase 91: ++tokPos; return finishToken(_bracketL);\n\tcase 93: ++tokPos; return finishToken(_bracketR);\n\tcase 123: ++tokPos; return finishToken(_braceL);\n\tcase 125: ++tokPos; return finishToken(_braceR);\n\tcase 58: ++tokPos; return finishToken(_colon);\n\tcase 63: ++tokPos; return finishToken(_question);\n\n\tcase 48:\n\t  var next = input.charCodeAt(tokPos + 1);\n\t  if (next === 120 || next === 88) return readHexNumber();\n\tcase 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n\t  return readNumber(false);\n\n\tcase 34: case 39:\n\t  return readString(code);\n\n\tcase 47:\n\t  return readToken_slash(code);\n\n\tcase 37: case 42:\n\t  return readToken_mult_modulo();\n\n\tcase 124: case 38:\n\t  return readToken_pipe_amp(code);\n\n\tcase 94:\n\t  return readToken_caret();\n\n\tcase 43: case 45:\n\t  return readToken_plus_min(code);\n\n\tcase 60: case 62:\n\t  return readToken_lt_gt(code);\n\n\tcase 61: case 33:\n\t  return readToken_eq_excl(code);\n\n\tcase 126:\n\t  return finishOp(_prefix, 1);\n\t}\n\n\treturn false;\n  }\n\n  function readToken(forceRegexp) {\n\tif (!forceRegexp) tokStart = tokPos;\n\telse tokPos = tokStart + 1;\n\tif (options.locations) tokStartLoc = new line_loc_t;\n\tif (forceRegexp) return readRegexp();\n\tif (tokPos >= inputLen) return finishToken(_eof);\n\n\tvar code = input.charCodeAt(tokPos);\n\tif (isIdentifierStart(code) || code === 92 ) return readWord();\n\n\tvar tok = getTokenFromCode(code);\n\n\tif (tok === false) {\n\t  var ch = String.fromCharCode(code);\n\t  if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\n\t  raise(tokPos, \"Unexpected character '\" + ch + \"'\");\n\t}\n\treturn tok;\n  }\n\n  function finishOp(type, size) {\n\tvar str = input.slice(tokPos, tokPos + size);\n\ttokPos += size;\n\tfinishToken(type, str);\n  }\n\n  function readRegexp() {\n\tvar content = \"\", escaped, inClass, start = tokPos;\n\tfor (;;) {\n\t  if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\n\t  var ch = input.charAt(tokPos);\n\t  if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\n\t  if (!escaped) {\n\t\tif (ch === \"[\") inClass = true;\n\t\telse if (ch === \"]\" && inClass) inClass = false;\n\t\telse if (ch === \"/\" && !inClass) break;\n\t\tescaped = ch === \"\\\\\";\n\t  } else escaped = false;\n\t  ++tokPos;\n\t}\n\tvar content = input.slice(start, tokPos);\n\t++tokPos;\n\tvar mods = readWord1();\n\tif (mods && !/^[gmsiy]*$/.test(mods)) raise(start, \"Invalid regexp flag\");\n\ttry {\n\t  var value = new RegExp(content, mods);\n\t} catch (e) {\n\t  if (e instanceof SyntaxError) raise(start, e.message);\n\t  raise(e);\n\t}\n\treturn finishToken(_regexp, value);\n  }\n\n  function readInt(radix, len) {\n\tvar start = tokPos, total = 0;\n\tfor (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n\t  var code = input.charCodeAt(tokPos), val;\n\t  if (code >= 97) val = code - 97 + 10;\n\t  else if (code >= 65) val = code - 65 + 10;\n\t  else if (code >= 48 && code <= 57) val = code - 48;\n\t  else val = Infinity;\n\t  if (val >= radix) break;\n\t  ++tokPos;\n\t  total = total * radix + val;\n\t}\n\tif (tokPos === start || len != null && tokPos - start !== len) return null;\n\n\treturn total;\n  }\n\n  function readHexNumber() {\n\ttokPos += 2;\n\tvar val = readInt(16);\n\tif (val == null) raise(tokStart + 2, \"Expected hexadecimal number\");\n\tif (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\treturn finishToken(_num, val);\n  }\n\n  function readNumber(startsWithDot) {\n\tvar start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\n\tif (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\n\tif (input.charCodeAt(tokPos) === 46) {\n\t  ++tokPos;\n\t  readInt(10);\n\t  isFloat = true;\n\t}\n\tvar next = input.charCodeAt(tokPos);\n\tif (next === 69 || next === 101) {\n\t  next = input.charCodeAt(++tokPos);\n\t  if (next === 43 || next === 45) ++tokPos;\n\t  if (readInt(10) === null) raise(start, \"Invalid number\");\n\t  isFloat = true;\n\t}\n\tif (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\n\tvar str = input.slice(start, tokPos), val;\n\tif (isFloat) val = parseFloat(str);\n\telse if (!octal || str.length === 1) val = parseInt(str, 10);\n\telse if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\n\telse val = parseInt(str, 8);\n\treturn finishToken(_num, val);\n  }\n\n  function readString(quote) {\n\ttokPos++;\n\tvar out = \"\";\n\tfor (;;) {\n\t  if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (ch === quote) {\n\t\t++tokPos;\n\t\treturn finishToken(_string, out);\n\t  }\n\t  if (ch === 92) {\n\t\tch = input.charCodeAt(++tokPos);\n\t\tvar octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\n\t\tif (octal) octal = octal[0];\n\t\twhile (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\n\t\tif (octal === \"0\") octal = null;\n\t\t++tokPos;\n\t\tif (octal) {\n\t\t  if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\n\t\t  out += String.fromCharCode(parseInt(octal, 8));\n\t\t  tokPos += octal.length - 1;\n\t\t} else {\n\t\t  switch (ch) {\n\t\t  case 110: out += \"\\n\"; break;\n\t\t  case 114: out += \"\\r\"; break;\n\t\t  case 120: out += String.fromCharCode(readHexChar(2)); break;\n\t\t  case 117: out += String.fromCharCode(readHexChar(4)); break;\n\t\t  case 85: out += String.fromCharCode(readHexChar(8)); break;\n\t\t  case 116: out += \"\\t\"; break;\n\t\t  case 98: out += \"\\b\"; break;\n\t\t  case 118: out += \"\\u000b\"; break;\n\t\t  case 102: out += \"\\f\"; break;\n\t\t  case 48: out += \"\\0\"; break;\n\t\t  case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos;\n\t\t  case 10:\n\t\t\tif (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\n\t\t\tbreak;\n\t\t  default: out += String.fromCharCode(ch); break;\n\t\t  }\n\t\t}\n\t  } else {\n\t\tif (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) raise(tokStart, \"Unterminated string constant\");\n\t\tout += String.fromCharCode(ch);\n\t\t++tokPos;\n\t  }\n\t}\n  }\n\n  function readHexChar(len) {\n\tvar n = readInt(16, len);\n\tif (n === null) raise(tokStart, \"Bad character escape sequence\");\n\treturn n;\n  }\n\n  var containsEsc;\n\n  function readWord1() {\n\tcontainsEsc = false;\n\tvar word, first = true, start = tokPos;\n\tfor (;;) {\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (isIdentifierChar(ch)) {\n\t\tif (containsEsc) word += input.charAt(tokPos);\n\t\t++tokPos;\n\t  } else if (ch === 92) {\n\t\tif (!containsEsc) word = input.slice(start, tokPos);\n\t\tcontainsEsc = true;\n\t\tif (input.charCodeAt(++tokPos) != 117)\n\t\t  raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n\t\t++tokPos;\n\t\tvar esc = readHexChar(4);\n\t\tvar escStr = String.fromCharCode(esc);\n\t\tif (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\n\t\tif (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\n\t\t  raise(tokPos - 4, \"Invalid Unicode escape\");\n\t\tword += escStr;\n\t  } else {\n\t\tbreak;\n\t  }\n\t  first = false;\n\t}\n\treturn containsEsc ? word : input.slice(start, tokPos);\n  }\n\n  function readWord() {\n\tvar word = readWord1();\n\tvar type = _name;\n\tif (!containsEsc && isKeyword(word))\n\t  type = keywordTypes[word];\n\treturn finishToken(type, word);\n  }\n\n  function next() {\n\tlastStart = tokStart;\n\tlastEnd = tokEnd;\n\tlastEndLoc = tokEndLoc;\n\treadToken();\n  }\n\n  function setStrict(strct) {\n\tstrict = strct;\n\ttokPos = tokStart;\n\tif (options.locations) {\n\t  while (tokPos < tokLineStart) {\n\t\ttokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\n\t\t--tokCurLine;\n\t  }\n\t}\n\tskipSpace();\n\treadToken();\n  }\n\n  function node_t() {\n\tthis.type = null;\n\tthis.start = tokStart;\n\tthis.end = null;\n  }\n\n  function node_loc_t() {\n\tthis.start = tokStartLoc;\n\tthis.end = null;\n\tif (sourceFile !== null) this.source = sourceFile;\n  }\n\n  function startNode() {\n\tvar node = new node_t();\n\tif (options.locations)\n\t  node.loc = new node_loc_t();\n\tif (options.directSourceFile)\n\t  node.sourceFile = options.directSourceFile;\n\tif (options.ranges)\n\t  node.range = [tokStart, 0];\n\treturn node;\n  }\n\n  function startNodeFrom(other) {\n\tvar node = new node_t();\n\tnode.start = other.start;\n\tif (options.locations) {\n\t  node.loc = new node_loc_t();\n\t  node.loc.start = other.loc.start;\n\t}\n\tif (options.ranges)\n\t  node.range = [other.range[0], 0];\n\n\treturn node;\n  }\n\n  function finishNode(node, type) {\n\tnode.type = type;\n\tnode.end = lastEnd;\n\tif (options.locations)\n\t  node.loc.end = lastEndLoc;\n\tif (options.ranges)\n\t  node.range[1] = lastEnd;\n\treturn node;\n  }\n\n  function isUseStrict(stmt) {\n\treturn options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\n\t  stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\n  }\n\n  function eat(type) {\n\tif (tokType === type) {\n\t  next();\n\t  return true;\n\t}\n  }\n\n  function canInsertSemicolon() {\n\treturn !options.strictSemicolons &&\n\t  (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\n  }\n\n  function semicolon() {\n\tif (!eat(_semi) && !canInsertSemicolon()) unexpected();\n  }\n\n  function expect(type) {\n\tif (tokType === type) next();\n\telse unexpected();\n  }\n\n  function unexpected() {\n\traise(tokStart, \"Unexpected token\");\n  }\n\n  function checkLVal(expr) {\n\tif (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\")\n\t  raise(expr.start, \"Assigning to rvalue\");\n\tif (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name))\n\t  raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\n  }\n\n  function parseTopLevel(program) {\n\tlastStart = lastEnd = tokPos;\n\tif (options.locations) lastEndLoc = new line_loc_t;\n\tinFunction = strict = null;\n\tlabels = [];\n\treadToken();\n\n\tvar node = program || startNode(), first = true;\n\tif (!program) node.body = [];\n\twhile (tokType !== _eof) {\n\t  var stmt = parseStatement();\n\t  node.body.push(stmt);\n\t  if (first && isUseStrict(stmt)) setStrict(true);\n\t  first = false;\n\t}\n\treturn finishNode(node, \"Program\");\n  }\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  function parseStatement() {\n\tif (tokType === _slash || tokType === _assign && tokVal == \"/=\")\n\t  readToken(true);\n\n\tvar starttype = tokType, node = startNode();\n\n\tswitch (starttype) {\n\tcase _break: case _continue:\n\t  next();\n\t  var isBreak = starttype === _break;\n\t  if (eat(_semi) || canInsertSemicolon()) node.label = null;\n\t  else if (tokType !== _name) unexpected();\n\t  else {\n\t\tnode.label = parseIdent();\n\t\tsemicolon();\n\t  }\n\n\t  for (var i = 0; i < labels.length; ++i) {\n\t\tvar lab = labels[i];\n\t\tif (node.label == null || lab.name === node.label.name) {\n\t\t  if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n\t\t  if (node.label && isBreak) break;\n\t\t}\n\t  }\n\t  if (i === labels.length) raise(node.start, \"Unsyntactic \" + starttype.keyword);\n\t  return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n\n\tcase _debugger:\n\t  next();\n\t  semicolon();\n\t  return finishNode(node, \"DebuggerStatement\");\n\n\tcase _do:\n\t  next();\n\t  labels.push(loopLabel);\n\t  node.body = parseStatement();\n\t  labels.pop();\n\t  expect(_while);\n\t  node.test = parseParenExpression();\n\t  semicolon();\n\t  return finishNode(node, \"DoWhileStatement\");\n\n\tcase _for:\n\t  next();\n\t  labels.push(loopLabel);\n\t  expect(_parenL);\n\t  if (tokType === _semi) return parseFor(node, null);\n\t  if (tokType === _var) {\n\t\tvar init = startNode();\n\t\tnext();\n\t\tparseVar(init, true);\n\t\tfinishNode(init, \"VariableDeclaration\");\n\t\tif (init.declarations.length === 1 && eat(_in))\n\t\t  return parseForIn(node, init);\n\t\treturn parseFor(node, init);\n\t  }\n\t  var init = parseExpression(false, true);\n\t  if (eat(_in)) {checkLVal(init); return parseForIn(node, init);}\n\t  return parseFor(node, init);\n\n\tcase _function:\n\t  next();\n\t  return parseFunction(node, true);\n\n\tcase _if:\n\t  next();\n\t  node.test = parseParenExpression();\n\t  node.consequent = parseStatement();\n\t  node.alternate = eat(_else) ? parseStatement() : null;\n\t  return finishNode(node, \"IfStatement\");\n\n\tcase _return:\n\t  if (!inFunction && !options.allowReturnOutsideFunction)\n\t\traise(tokStart, \"'return' outside of function\");\n\t  next();\n\n\t  if (eat(_semi) || canInsertSemicolon()) node.argument = null;\n\t  else { node.argument = parseExpression(); semicolon(); }\n\t  return finishNode(node, \"ReturnStatement\");\n\n\tcase _switch:\n\t  next();\n\t  node.discriminant = parseParenExpression();\n\t  node.cases = [];\n\t  expect(_braceL);\n\t  labels.push(switchLabel);\n\n\t  for (var cur, sawDefault; tokType != _braceR;) {\n\t\tif (tokType === _case || tokType === _default) {\n\t\t  var isCase = tokType === _case;\n\t\t  if (cur) finishNode(cur, \"SwitchCase\");\n\t\t  node.cases.push(cur = startNode());\n\t\t  cur.consequent = [];\n\t\t  next();\n\t\t  if (isCase) cur.test = parseExpression();\n\t\t  else {\n\t\t\tif (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\n\t\t\tcur.test = null;\n\t\t  }\n\t\t  expect(_colon);\n\t\t} else {\n\t\t  if (!cur) unexpected();\n\t\t  cur.consequent.push(parseStatement());\n\t\t}\n\t  }\n\t  if (cur) finishNode(cur, \"SwitchCase\");\n\t  next();\n\t  labels.pop();\n\t  return finishNode(node, \"SwitchStatement\");\n\n\tcase _throw:\n\t  next();\n\t  if (newline.test(input.slice(lastEnd, tokStart)))\n\t\traise(lastEnd, \"Illegal newline after throw\");\n\t  node.argument = parseExpression();\n\t  semicolon();\n\t  return finishNode(node, \"ThrowStatement\");\n\n\tcase _try:\n\t  next();\n\t  node.block = parseBlock();\n\t  node.handler = null;\n\t  if (tokType === _catch) {\n\t\tvar clause = startNode();\n\t\tnext();\n\t\texpect(_parenL);\n\t\tclause.param = parseIdent();\n\t\tif (strict && isStrictBadIdWord(clause.param.name))\n\t\t  raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\n\t\texpect(_parenR);\n\t\tclause.guard = null;\n\t\tclause.body = parseBlock();\n\t\tnode.handler = finishNode(clause, \"CatchClause\");\n\t  }\n\t  node.guardedHandlers = empty;\n\t  node.finalizer = eat(_finally) ? parseBlock() : null;\n\t  if (!node.handler && !node.finalizer)\n\t\traise(node.start, \"Missing catch or finally clause\");\n\t  return finishNode(node, \"TryStatement\");\n\n\tcase _var:\n\t  next();\n\t  parseVar(node);\n\t  semicolon();\n\t  return finishNode(node, \"VariableDeclaration\");\n\n\tcase _while:\n\t  next();\n\t  node.test = parseParenExpression();\n\t  labels.push(loopLabel);\n\t  node.body = parseStatement();\n\t  labels.pop();\n\t  return finishNode(node, \"WhileStatement\");\n\n\tcase _with:\n\t  if (strict) raise(tokStart, \"'with' in strict mode\");\n\t  next();\n\t  node.object = parseParenExpression();\n\t  node.body = parseStatement();\n\t  return finishNode(node, \"WithStatement\");\n\n\tcase _braceL:\n\t  return parseBlock();\n\n\tcase _semi:\n\t  next();\n\t  return finishNode(node, \"EmptyStatement\");\n\n\tdefault:\n\t  var maybeName = tokVal, expr = parseExpression();\n\t  if (starttype === _name && expr.type === \"Identifier\" && eat(_colon)) {\n\t\tfor (var i = 0; i < labels.length; ++i)\n\t\t  if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n\t\tvar kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\n\t\tlabels.push({name: maybeName, kind: kind});\n\t\tnode.body = parseStatement();\n\t\tlabels.pop();\n\t\tnode.label = expr;\n\t\treturn finishNode(node, \"LabeledStatement\");\n\t  } else {\n\t\tnode.expression = expr;\n\t\tsemicolon();\n\t\treturn finishNode(node, \"ExpressionStatement\");\n\t  }\n\t}\n  }\n\n  function parseParenExpression() {\n\texpect(_parenL);\n\tvar val = parseExpression();\n\texpect(_parenR);\n\treturn val;\n  }\n\n  function parseBlock(allowStrict) {\n\tvar node = startNode(), first = true, strict = false, oldStrict;\n\tnode.body = [];\n\texpect(_braceL);\n\twhile (!eat(_braceR)) {\n\t  var stmt = parseStatement();\n\t  node.body.push(stmt);\n\t  if (first && allowStrict && isUseStrict(stmt)) {\n\t\toldStrict = strict;\n\t\tsetStrict(strict = true);\n\t  }\n\t  first = false;\n\t}\n\tif (strict && !oldStrict) setStrict(false);\n\treturn finishNode(node, \"BlockStatement\");\n  }\n\n  function parseFor(node, init) {\n\tnode.init = init;\n\texpect(_semi);\n\tnode.test = tokType === _semi ? null : parseExpression();\n\texpect(_semi);\n\tnode.update = tokType === _parenR ? null : parseExpression();\n\texpect(_parenR);\n\tnode.body = parseStatement();\n\tlabels.pop();\n\treturn finishNode(node, \"ForStatement\");\n  }\n\n  function parseForIn(node, init) {\n\tnode.left = init;\n\tnode.right = parseExpression();\n\texpect(_parenR);\n\tnode.body = parseStatement();\n\tlabels.pop();\n\treturn finishNode(node, \"ForInStatement\");\n  }\n\n  function parseVar(node, noIn) {\n\tnode.declarations = [];\n\tnode.kind = \"var\";\n\tfor (;;) {\n\t  var decl = startNode();\n\t  decl.id = parseIdent();\n\t  if (strict && isStrictBadIdWord(decl.id.name))\n\t\traise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\n\t  decl.init = eat(_eq) ? parseExpression(true, noIn) : null;\n\t  node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\n\t  if (!eat(_comma)) break;\n\t}\n\treturn node;\n  }\n\n  function parseExpression(noComma, noIn) {\n\tvar expr = parseMaybeAssign(noIn);\n\tif (!noComma && tokType === _comma) {\n\t  var node = startNodeFrom(expr);\n\t  node.expressions = [expr];\n\t  while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\n\t  return finishNode(node, \"SequenceExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseMaybeAssign(noIn) {\n\tvar left = parseMaybeConditional(noIn);\n\tif (tokType.isAssign) {\n\t  var node = startNodeFrom(left);\n\t  node.operator = tokVal;\n\t  node.left = left;\n\t  next();\n\t  node.right = parseMaybeAssign(noIn);\n\t  checkLVal(left);\n\t  return finishNode(node, \"AssignmentExpression\");\n\t}\n\treturn left;\n  }\n\n  function parseMaybeConditional(noIn) {\n\tvar expr = parseExprOps(noIn);\n\tif (eat(_question)) {\n\t  var node = startNodeFrom(expr);\n\t  node.test = expr;\n\t  node.consequent = parseExpression(true);\n\t  expect(_colon);\n\t  node.alternate = parseExpression(true, noIn);\n\t  return finishNode(node, \"ConditionalExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseExprOps(noIn) {\n\treturn parseExprOp(parseMaybeUnary(), -1, noIn);\n  }\n\n  function parseExprOp(left, minPrec, noIn) {\n\tvar prec = tokType.binop;\n\tif (prec != null && (!noIn || tokType !== _in)) {\n\t  if (prec > minPrec) {\n\t\tvar node = startNodeFrom(left);\n\t\tnode.left = left;\n\t\tnode.operator = tokVal;\n\t\tvar op = tokType;\n\t\tnext();\n\t\tnode.right = parseExprOp(parseMaybeUnary(), prec, noIn);\n\t\tvar exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\n\t\treturn parseExprOp(exprNode, minPrec, noIn);\n\t  }\n\t}\n\treturn left;\n  }\n\n  function parseMaybeUnary() {\n\tif (tokType.prefix) {\n\t  var node = startNode(), update = tokType.isUpdate;\n\t  node.operator = tokVal;\n\t  node.prefix = true;\n\t  tokRegexpAllowed = true;\n\t  next();\n\t  node.argument = parseMaybeUnary();\n\t  if (update) checkLVal(node.argument);\n\t  else if (strict && node.operator === \"delete\" &&\n\t\t\t   node.argument.type === \"Identifier\")\n\t\traise(node.start, \"Deleting local variable in strict mode\");\n\t  return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n\t}\n\tvar expr = parseExprSubscripts();\n\twhile (tokType.postfix && !canInsertSemicolon()) {\n\t  var node = startNodeFrom(expr);\n\t  node.operator = tokVal;\n\t  node.prefix = false;\n\t  node.argument = expr;\n\t  checkLVal(expr);\n\t  next();\n\t  expr = finishNode(node, \"UpdateExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseExprSubscripts() {\n\treturn parseSubscripts(parseExprAtom());\n  }\n\n  function parseSubscripts(base, noCalls) {\n\tif (eat(_dot)) {\n\t  var node = startNodeFrom(base);\n\t  node.object = base;\n\t  node.property = parseIdent(true);\n\t  node.computed = false;\n\t  return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n\t} else if (eat(_bracketL)) {\n\t  var node = startNodeFrom(base);\n\t  node.object = base;\n\t  node.property = parseExpression();\n\t  node.computed = true;\n\t  expect(_bracketR);\n\t  return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n\t} else if (!noCalls && eat(_parenL)) {\n\t  var node = startNodeFrom(base);\n\t  node.callee = base;\n\t  node.arguments = parseExprList(_parenR, false);\n\t  return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\n\t} else return base;\n  }\n\n  function parseExprAtom() {\n\tswitch (tokType) {\n\tcase _this:\n\t  var node = startNode();\n\t  next();\n\t  return finishNode(node, \"ThisExpression\");\n\tcase _name:\n\t  return parseIdent();\n\tcase _num: case _string: case _regexp:\n\t  var node = startNode();\n\t  node.value = tokVal;\n\t  node.raw = input.slice(tokStart, tokEnd);\n\t  next();\n\t  return finishNode(node, \"Literal\");\n\n\tcase _null: case _true: case _false:\n\t  var node = startNode();\n\t  node.value = tokType.atomValue;\n\t  node.raw = tokType.keyword;\n\t  next();\n\t  return finishNode(node, \"Literal\");\n\n\tcase _parenL:\n\t  var tokStartLoc1 = tokStartLoc, tokStart1 = tokStart;\n\t  next();\n\t  var val = parseExpression();\n\t  val.start = tokStart1;\n\t  val.end = tokEnd;\n\t  if (options.locations) {\n\t\tval.loc.start = tokStartLoc1;\n\t\tval.loc.end = tokEndLoc;\n\t  }\n\t  if (options.ranges)\n\t\tval.range = [tokStart1, tokEnd];\n\t  expect(_parenR);\n\t  return val;\n\n\tcase _bracketL:\n\t  var node = startNode();\n\t  next();\n\t  node.elements = parseExprList(_bracketR, true, true);\n\t  return finishNode(node, \"ArrayExpression\");\n\n\tcase _braceL:\n\t  return parseObj();\n\n\tcase _function:\n\t  var node = startNode();\n\t  next();\n\t  return parseFunction(node, false);\n\n\tcase _new:\n\t  return parseNew();\n\n\tdefault:\n\t  unexpected();\n\t}\n  }\n\n  function parseNew() {\n\tvar node = startNode();\n\tnext();\n\tnode.callee = parseSubscripts(parseExprAtom(), true);\n\tif (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\n\telse node.arguments = empty;\n\treturn finishNode(node, \"NewExpression\");\n  }\n\n  function parseObj() {\n\tvar node = startNode(), first = true, sawGetSet = false;\n\tnode.properties = [];\n\tnext();\n\twhile (!eat(_braceR)) {\n\t  if (!first) {\n\t\texpect(_comma);\n\t\tif (options.allowTrailingCommas && eat(_braceR)) break;\n\t  } else first = false;\n\n\t  var prop = {key: parsePropertyName()}, isGetSet = false, kind;\n\t  if (eat(_colon)) {\n\t\tprop.value = parseExpression(true);\n\t\tkind = prop.kind = \"init\";\n\t  } else if (options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n\t\t\t\t (prop.key.name === \"get\" || prop.key.name === \"set\")) {\n\t\tisGetSet = sawGetSet = true;\n\t\tkind = prop.kind = prop.key.name;\n\t\tprop.key = parsePropertyName();\n\t\tif (tokType !== _parenL) unexpected();\n\t\tprop.value = parseFunction(startNode(), false);\n\t  } else unexpected();\n\n\t  if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\n\t\tfor (var i = 0; i < node.properties.length; ++i) {\n\t\t  var other = node.properties[i];\n\t\t  if (other.key.name === prop.key.name) {\n\t\t\tvar conflict = kind == other.kind || isGetSet && other.kind === \"init\" ||\n\t\t\t  kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\n\t\t\tif (conflict && !strict && kind === \"init\" && other.kind === \"init\") conflict = false;\n\t\t\tif (conflict) raise(prop.key.start, \"Redefinition of property\");\n\t\t  }\n\t\t}\n\t  }\n\t  node.properties.push(prop);\n\t}\n\treturn finishNode(node, \"ObjectExpression\");\n  }\n\n  function parsePropertyName() {\n\tif (tokType === _num || tokType === _string) return parseExprAtom();\n\treturn parseIdent(true);\n  }\n\n  function parseFunction(node, isStatement) {\n\tif (tokType === _name) node.id = parseIdent();\n\telse if (isStatement) unexpected();\n\telse node.id = null;\n\tnode.params = [];\n\tvar first = true;\n\texpect(_parenL);\n\twhile (!eat(_parenR)) {\n\t  if (!first) expect(_comma); else first = false;\n\t  node.params.push(parseIdent());\n\t}\n\n\tvar oldInFunc = inFunction, oldLabels = labels;\n\tinFunction = true; labels = [];\n\tnode.body = parseBlock(true);\n\tinFunction = oldInFunc; labels = oldLabels;\n\n\tif (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\n\t  for (var i = node.id ? -1 : 0; i < node.params.length; ++i) {\n\t\tvar id = i < 0 ? node.id : node.params[i];\n\t\tif (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name))\n\t\t  raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\n\t\tif (i >= 0) for (var j = 0; j < i; ++j) if (id.name === node.params[j].name)\n\t\t  raise(id.start, \"Argument name clash in strict mode\");\n\t  }\n\t}\n\n\treturn finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }\n\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\n\tvar elts = [], first = true;\n\twhile (!eat(close)) {\n\t  if (!first) {\n\t\texpect(_comma);\n\t\tif (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\n\t  } else first = false;\n\n\t  if (allowEmpty && tokType === _comma) elts.push(null);\n\t  else elts.push(parseExpression(true));\n\t}\n\treturn elts;\n  }\n\n  function parseIdent(liberal) {\n\tvar node = startNode();\n\tif (liberal && options.forbidReserved == \"everywhere\") liberal = false;\n\tif (tokType === _name) {\n\t  if (!liberal &&\n\t\t  (options.forbidReserved &&\n\t\t   (options.ecmaVersion === 3 ? isReservedWord3 : isReservedWord5)(tokVal) ||\n\t\t   strict && isStrictReservedWord(tokVal)) &&\n\t\t  input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\n\t\traise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\n\t  node.name = tokVal;\n\t} else if (liberal && tokType.keyword) {\n\t  node.name = tokType.keyword;\n\t} else {\n\t  unexpected();\n\t}\n\ttokRegexpAllowed = false;\n\tnext();\n\treturn finishNode(node, \"Identifier\");\n  }\n\n});\n\n\t\tif (!acorn.version)\n\t\t\tacorn = null;\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn (global.acorn || acorn).parse(code, options);\n\t}\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': '__equals',\n\t\t'!=': '__equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': '__self'\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'equals', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{\n\t\t\t__self: function() {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction compile(code, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (node.prefix) {\n\t\t\t\t\t\t\tstr = '(' + str + ')';\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tparentType === 'AssignmentExpression' ||\n\t\t\t\t\t\t\tparentType === 'VariableDeclarator' ||\n\t\t\t\t\t\t\tparentType === 'BinaryExpression'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\t\t\texp = left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')';\n\t\t\t\t\t\t\treplaceCode(node, /^\\(.*\\)$/.test(getCode(node))\n\t\t\t\t\t\t\t\t\t? '(' + exp + ')' : exp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'ExportDefaultDeclaration':\n\t\t\t\treplaceCode({\n\t\t\t\t\trange: [node.start, node.declaration.start]\n\t\t\t\t}, 'module.exports = ');\n\t\t\t\tbreak;\n\t\t\tcase 'ExportNamedDeclaration':\n\t\t\t\tvar declaration = node.declaration;\n\t\t\t\tvar specifiers = node.specifiers;\n\t\t\t\tif (declaration) {\n\t\t\t\t\tvar declarations = declaration.declarations;\n\t\t\t\t\tif (declarations) {\n\t\t\t\t\t\tdeclarations.forEach(function(dec) {\n\t\t\t\t\t\t\treplaceCode(dec, 'module.exports.' + getCode(dec));\n\t\t\t\t\t\t});\n\t\t\t\t\t\treplaceCode({\n\t\t\t\t\t\t\trange: [\n\t\t\t\t\t\t\t\tnode.start,\n\t\t\t\t\t\t\t\tdeclaration.start + declaration.kind.length\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}, '');\n\t\t\t\t\t}\n\t\t\t\t} else if (specifiers) {\n\t\t\t\t\tvar exports = specifiers.map(function(specifier) {\n\t\t\t\t\t\tvar name = getCode(specifier);\n\t\t\t\t\t\treturn 'module.exports.' + name + ' = ' + name + '; ';\n\t\t\t\t\t}).join('');\n\t\t\t\t\tif (exports) {\n\t\t\t\t\t\treplaceCode(node, exports);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction encodeVLQ(value) {\n\t\t\tvar res = '',\n\t\t\t\tbase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t\tvalue = (Math.abs(value) << 1) + (value < 0 ? 1 : 0);\n\t\t\twhile (value || !res) {\n\t\t\t\tvar next = value & (32 - 1);\n\t\t\t\tvalue >>= 5;\n\t\t\t\tif (value)\n\t\t\t\t\tnext |= 32;\n\t\t\t\tres += base64[next];\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tvar url = options.url || '',\n\t\t\tagent = paper.agent,\n\t\t\tversion = agent.versionNumber,\n\t\t\toffsetCode = false,\n\t\t\tsourceMaps = options.sourceMaps,\n\t\t\tsource = options.source || code,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg,\n\t\t\toffset = options.offset || 0,\n\t\t\tmap;\n\t\tif (sourceMaps && (agent.chrome && version >= 30\n\t\t\t\t|| agent.webkit && version >= 537.76\n\t\t\t\t|| agent.firefox && version >= 23\n\t\t\t\t|| agent.node)) {\n\t\t\tif (agent.node) {\n\t\t\t\toffset -= 2;\n\t\t\t} else if (window && url && !window.location.href.indexOf(url)) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\toffsetCode = offset > 0 && !(\n\t\t\t\t\tagent.chrome && version >= 36 ||\n\t\t\t\t\tagent.safari && version >= 600 ||\n\t\t\t\t\tagent.firefox && version >= 40 ||\n\t\t\t\t\tagent.node);\n\t\t\tvar mappings = ['AA' + encodeVLQ(offsetCode ? 0 : offset) + 'A'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1\n\t\t\t\t\t+ (offsetCode ? offset : 0);\n\t\t\tmap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url],\n\t\t\t\tsourcesContent: [source]\n\t\t\t};\n\t\t}\n\t\twalkAST(parse(code, {\n\t\t\tranges: true,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module'\n\t\t}));\n\t\tif (map) {\n\t\t\tif (offsetCode) {\n\t\t\t\tcode = new Array(offset + 1).join('\\n') + code;\n\t\t\t}\n\t\t\tif (/^(inline|both)$/.test(sourceMaps)) {\n\t\t\t\tcode += \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t\t+ self.btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(map))));\n\t\t\t}\n\t\t\tcode += \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn {\n\t\t\turl: url,\n\t\t\tsource: source,\n\t\t\tcode: code,\n\t\t\tmap: map\n\t\t};\n\t}\n\n\tfunction execute(code, scope, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\btool\\.\\w+|\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/\n\t\t\t\t\t.test(code) && !/\\bnew\\s+Tool\\b/.test(code)\n\t\t\t\t\t\t? new Tool() : null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc,\n\t\t\tcompiled = typeof code === 'object' ? code : compile(code, options);\n\t\tcode = compiled.code;\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\tcode = 'var module = { exports: {} }; ' + code;\n\t\tvar exports = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push('module.exports.' + key + ' = ' + key + ';');\n\t\t\t}\n\t\t}, []).join('\\n');\n\t\tif (exports) {\n\t\t\tcode += '\\n' + exports;\n\t\t}\n\t\tcode += '\\nreturn module.exports;';\n\t\tvar agent = paper.agent;\n\t\tif (document && (agent.chrome\n\t\t\t\t|| agent.firefox && agent.versionNumber < 40)) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (agent.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'document.__paperscript__ = function(' + params + ') {' +\n\t\t\t\t\tcode +\n\t\t\t\t'\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = document.__paperscript__;\n\t\t\tdelete document.__paperscript__;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar exports = func && func.apply(scope, args);\n\t\tvar obj = exports || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = obj[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (obj.onResize)\n\t\t\t\tview.setOnResize(obj.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (obj.onFrame)\n\t\t\t\tview.setOnFrame(obj.onFrame);\n\t\t\tview.requestUpdate();\n\t\t}\n\t\treturn exports;\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: src,\n\t\t\t\t\tasync: async,\n\t\t\t\t\tmimeType: 'text/plain',\n\t\t\t\t\tonLoad: function(code) {\n\t\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document && document.getElementsByTagName('script'),\n\t\t\t\tloadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (window) {\n\t\tif (document.readyState === 'complete') {\n\t\t\tsetTimeout(loadAll);\n\t\t} else {\n\t\t\tDomEvent.add(window, { load: loadAll });\n\t\t}\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse,\n\t\tcalculateBinary: __$__,\n\t\tcalculateUnary: $__\n\t};\n\n}.call(this);\n\nvar paper = new (PaperScope.inject(Base.exports, {\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key,\n\tDomEvent: DomEvent,\n\tDomElement: DomElement,\n\tdocument: document,\n\twindow: window,\n\tSymbol: SymbolDefinition,\n\tPlacedSymbol: SymbolItem\n}))();\n\nif (paper.agent.node) {\n\trequire('./node/extend.js')(paper);\n}\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n}.call(this, typeof self === 'object' ? self : null);\n","function pen(parent,onDrawEnd,options){\r\n    function drawPath(option) {\r\n        let path = initPath(Object.assign({},options,option))\r\n        let movPoint = null;\r\n        console.log(\"pen is start\")\r\n        parent.onMouseDown = (event)=>{\r\n            if(path.curves.length > 0)\r\n            {\r\n                //close on loop back to first one\r\n                let fPoint = path.curves[0].points[0];\r\n                if(Math.abs(event.point.x - fPoint.x)<5 && Math.abs(event.point.y - fPoint.y)<5)\r\n                {\r\n                    path.closed = true;\r\n                    parent.onMouseMove()\r\n                    console.log(\"pen is closed\")\r\n                    parent.onMouseDown = null;\r\n                    parent.onMouseMove = null;\r\n                    path.selected = false;\r\n                    if(onDrawEnd) onDrawEnd();\r\n                    if(option && option.onDrawEnd) option.onDrawEnd(path);\r\n                    return;\r\n                }\r\n            }\r\n            if(!path.closed)\r\n            {\r\n                path.lineTo(event.point);\r\n            }\r\n        }\r\n        parent.onMouseMove = (event)=> {\r\n            if(movPoint)\r\n            {\r\n                path.removeSegment(path.segments.length - 1);\r\n                movPoint = null;\r\n            }\r\n            if(!path.closed)\r\n            {\r\n                let newPoint = event.point.clone();\r\n                path.lineTo(newPoint);\r\n                movPoint = newPoint;\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    function drawRectangle(option) {\r\n        console.log(\"rectangle is start\")\r\n        let path = initPath(Object.assign({},options,option));\r\n        let startPoint = null;\r\n        let movPoint = null;\r\n        parent.onMouseDown = parent.onTouchStart = (event)=>{\r\n            parent.onMouseMove = null;\r\n            if(!startPoint)\r\n            {\r\n                startPoint = event.point.clone();\r\n                movPoint = null;\r\n                if(path.segments.length===0)\r\n                {\r\n                    path.lineTo(startPoint)\r\n                }\r\n                else\r\n                {\r\n                    path.segments[0].point = startPoint\r\n                }\r\n\r\n                let width = 12;\r\n                let height = 12;\r\n                path.lineTo(new Point(startPoint.x + width,startPoint.y));\r\n                path.lineTo(new Point(startPoint.x + width,startPoint.y + height));\r\n                path.lineTo(new Point(startPoint.x,startPoint.y + height));\r\n                path.closed = true;\r\n            }\r\n        }\r\n        parent.onMouseDrag = parent.onTouchMove = (event)=> {\r\n            parent.onMouseDown = null;\r\n            parent.onTouchStart = null;\r\n            if(startPoint)\r\n            {\r\n                let newPos = event.point.clone();\r\n                path.segments[1].point.x =  newPos.x;\r\n                path.segments[2].point= newPos;\r\n                path.segments[3].point.y =  newPos.y;\r\n            }\r\n        }\r\n        parent.onMouseUp = (event)=> {\r\n            startPoint = null;\r\n            parent.onMouseDrag = null;\r\n            parent.onTouchMove = null;\r\n            parent.onMouseUp = null;\r\n            path.selected = false;\r\n            if(onDrawEnd) onDrawEnd();\r\n            if(option && option.onDrawEnd) option.onDrawEnd(path);\r\n            console.log(\"rectangle is end\")\r\n        }\r\n        parent.onMouseMove = (event)=> {\r\n            if(!startPoint && !path.closed)\r\n            {\r\n                if(!movPoint)\r\n                {\r\n                    let newPoint = event.point.clone();\r\n                    path.lineTo(newPoint);\r\n                    movPoint = newPoint;\r\n                }\r\n                else\r\n                {\r\n                    path.segments[0].point.x = event.point.x;\r\n                    path.segments[0].point.y = event.point.y;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function clearAllEvent() {\r\n        parent.onMouseDown = null;\r\n        parent.onTouchStart = null;\r\n        parent.onMouseDrag = null;\r\n        parent.onTouchMove = null;\r\n        parent.onMouseMove = null;\r\n        parent.onMouseUp = null;\r\n    }\r\n    function clear() {\r\n        clearAllEvent();\r\n        for(let j=0;j<project.layers.length;j++){\r\n            let layer = project.layers[j];\r\n            for(let i=layer.children.length-1;i>0;i--){\r\n                let item = layer.children[i]\r\n                if(item instanceof Path) {\r\n                    let item = layer.children[i];\r\n                    if(!item.closed)\r\n                    {\r\n                        item.remove();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function initPath(option) {\r\n        let path = new Path();\r\n        path.option = option;\r\n        path.name = option.name;\r\n        path.closed = false;\r\n        path.selected = option.selected || true;\r\n        path.locked = option.locked || false;\r\n        path.strokeColor = option.strokeColor;\r\n        path.selectedColor = option.selectedColor;\r\n        path.fillColor = option.fillColor;\r\n        return path;\r\n    }\r\n    function draw(points,option) {\r\n        let path = initPath(option)\r\n        for(let i=0;i<points.length;i++){\r\n            let point = points[i];\r\n            path.lineTo(point);\r\n        }\r\n        path.closed = true;\r\n        path.selected = false;\r\n        return path;\r\n    }\r\n    return {\r\n        clear,\r\n        draw,\r\n        drawPath,\r\n        drawRectangle\r\n    }\r\n}\r\n\r\nmodule.exports = pen","function move(parent,canvasElement,options){\r\n    //{move,select,zoom}\r\n    let me = {options};\r\n    let movingShift = new Point(0,0);\r\n    let selectedElement = null;\r\n    let selectedFullMove = false;\r\n    let hitOptions = {\r\n        segments: true,\r\n        stroke: true,\r\n        fill: true,\r\n        tolerance: 10\r\n    };\r\n\r\n    function scaleOffset(obj,offset){\r\n        var newScale = obj.scaling.x + offset;\r\n        if(newScale<0.05) return;\r\n        if(offset< 0 && (obj.bounds.width * (1+offset) < 20 ||obj.bounds.height * (1+offset) < 20 )) return;\r\n        console.log(obj.bounds.width + \" \"  + obj.scaling.x)\r\n        obj.scaling.x = newScale;\r\n        obj.scaling.y = newScale;\r\n    }\r\n    function start() {\r\n        parent.onMouseDown = function(event) {\r\n            if(me.options.select === false) return;\r\n            let hit = project.hitTest(event.point,hitOptions);\r\n            disSelected();\r\n            if (hit) {\r\n                if (event.modifiers.shift && event.modifiers.control) {\r\n                    if (hit.item instanceof Path) {\r\n                        hit.item.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                if (event.modifiers.shift) {\r\n                    if (hit.type === 'segment') {\r\n                        hit.segment.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                if (event.modifiers.control) {\r\n                    if (hit.type === 'stroke') {\r\n                        let location = hit.location;\r\n                        let segment = hit.item.insert(location.index + 1, event.point);\r\n                    }\r\n                    return;\r\n                }\r\n                if (hit.type === 'stroke') {\r\n                    selectedElement = hit.location.curve;\r\n                    selectedElement.selected = true;\r\n                    console.log(`click ${event.point} on stroke ${selectedElement.point1} ${selectedElement.point2}`);\r\n                    movingShift.x = event.point.x;\r\n                    movingShift.y = event.point.y;\r\n                    selectedElement.point1.oldX = selectedElement.point1.x;\r\n                    selectedElement.point1.oldY = selectedElement.point1.y;\r\n                    selectedElement.point2.oldX = selectedElement.point2.x;\r\n                    selectedElement.point2.oldY = selectedElement.point2.y;\r\n                    return;\r\n                }\r\n                selectedElement = hit.segment || hit.item;\r\n                console.log(`click ${event.point} with selected ${JSON.stringify(selectedElement)}`)\r\n                selectedElement.selected = true;\r\n                if (me.options.onSelected) me.options.onSelected(hit.item);\r\n                if (selectedElement.onSelected) selectedElement.onSelected(selectedElement);\r\n                //hit.item.crossings[0].segment.selected = true;\r\n            }\r\n            if(me.options.move && selectedElement && selectedElement.move !== false){\r\n                let selectedPosition = selectedElement.position || selectedElement.point;\r\n                movingShift.x = selectedPosition.x - event.point.x;\r\n                movingShift.y = selectedPosition.y - event.point.y;\r\n                return;\r\n            }\r\n            if(me.options.fullMove)\r\n            {\r\n                let selectedPosition = project.activeLayer.position;\r\n                movingShift.x = selectedPosition.x - event.point.x;\r\n                movingShift.y = selectedPosition.y - event.point.y;\r\n                selectedFullMove = true;\r\n            }\r\n        }\r\n        parent.onMouseDrag= function (event) {\r\n            if(me.options.move && selectedElement && selectedElement.move !== false && !selectedElement.locked  && selectedElement.selected){\r\n                if(selectedElement instanceof Curve)\r\n                {\r\n                    let addX = event.point.x - movingShift.x;\r\n                    let addY = event.point.y - movingShift.y;\r\n                    selectedElement.point1.x = selectedElement.point1.oldX + addX;\r\n                    selectedElement.point1.y = selectedElement.point1.oldY + addY;\r\n                    selectedElement.point2.x = selectedElement.point2.oldX + addX;\r\n                    selectedElement.point2.y = selectedElement.point2.oldY + addY;\r\n                }\r\n                else\r\n                {\r\n                    let selectedPosition = selectedElement.position || selectedElement.point;\r\n                    selectedPosition.x = event.point.x + movingShift.x;\r\n                    selectedPosition.y = event.point.y + movingShift.y;\r\n                }\r\n                if(selectedElement instanceof Path || selectedElement instanceof Raster)\r\n                {\r\n                    document.body.style.cursor = 'move';\r\n                }\r\n                return;\r\n            }\r\n            if(me.options.fullMove && selectedFullMove)\r\n            {\r\n                document.body.style.cursor = 'move';\r\n                project.activeLayer.position.x = event.point.x + movingShift.x;\r\n                project.activeLayer.position.y = event.point.y + movingShift.y;\r\n                return;\r\n            }\r\n        }\r\n        parent.onMouseUp = function(event){\r\n            document.body.style.cursor = 'default';\r\n            disSelected();\r\n            if(me.options.fullMove){\r\n                selectedFullMove = false;\r\n            }\r\n        }\r\n        canvasElement.removeEventListener('wheel', scroll)\r\n        canvasElement.addEventListener('wheel', scroll);\r\n    }\r\n    function disSelected() {\r\n        if(selectedElement)\r\n        {\r\n            selectedElement.selected  = false;\r\n            selectedElement = null;\r\n        }\r\n    }\r\n    function stop() {\r\n        disSelected();\r\n        parent.onMouseDrag = parent.onMouseDown = null;\r\n        canvasElement.removeEventListener('wheel', scroll)\r\n    }\r\n    function scroll(event){\r\n        let delta;\r\n        if (event.wheelDelta){\r\n            delta = event.wheelDelta;\r\n        }else{\r\n            delta = -1 * event.deltaY;\r\n        }\r\n        event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\r\n        if (delta < 0){\r\n            //console.log(\"DOWN\");\r\n            if(me.options.zoom && selectedElement && selectedElement.selected && selectedElement.zoom !== false)\r\n            {\r\n                scaleOffset(selectedElement,-0.1);\r\n                return;\r\n            }\r\n            zoomIn()\r\n        }\r\n        else if (delta > 0){\r\n            //console.log(\"UP\");\r\n            if(me.options.zoom && selectedElement && selectedElement.selected  && selectedElement.zoom !== false)\r\n            {\r\n                scaleOffset(selectedElement,0.1);\r\n                return;\r\n            }\r\n            zoomOut();\r\n        }\r\n    }\r\n    function zoomIn() {\r\n        if(me.options.fullZoom && parseFloat(project.view.zoom).toFixed(1)>0.1)\r\n        {\r\n            project.view.zoom -= 0.1\r\n        }\r\n    }\r\n    function zoomOut() {\r\n        if(me.options.fullZoom){\r\n            project.view.zoom += 0.1\r\n        }\r\n    }\r\n    return {\r\n        start,\r\n        stop,\r\n        options:me.options\r\n    }\r\n}\r\n\r\nmodule.exports = move","import paper from 'paper'\r\nimport pen from './pen'\r\nimport move from './move'\r\nfunction cropper(canvasId,options) {\r\n    let me=this;\r\n    console.log('init cropper')\r\n    //install to global\r\n    destroy()\r\n    if(!window.paper) {\r\n        paper.install(window);\r\n    }\r\n    const defaultOption = {\r\n        move:true,\r\n        select:true,\r\n        zoom:true,\r\n        fullZoom:true,\r\n        strokeColor:\"#39f\",\r\n        selectedColor:null,\r\n        fillColor:new Color(0,0,0,0.1),\r\n        onDrawEnd:null,\r\n        onSelected:null\r\n    };\r\n\r\n    me.options = Object.assign({},defaultOption,options);\r\n\r\n    let canvas = (typeof canvasId ===\"string\")?document.getElementById(canvasId):canvasId;\r\n    if(!canvas) throw new Error(\"canvas does not exist\")\r\n    paper.setup(canvas);\r\n    canvas.oncontextmenu = function (e) {\r\n        e.preventDefault();\r\n    };\r\n\r\n    let tool = new Tool();\r\n    let myMove = new move(tool,canvas,me.options);\r\n    startAction();\r\n    let myPen = new pen(tool,()=>{\r\n        startAction();\r\n    },me.options);\r\n\r\n    let raster = new Raster();\r\n    raster.position = view.center;\r\n\r\n    function startPen(option) {\r\n        stopAction();\r\n        myPen.drawPath(Object.assign({},me.options,option));\r\n    }\r\n    function startRectangle(option) {\r\n        stopAction();\r\n        myPen.drawRectangle(Object.assign({},me.options,option));\r\n    }\r\n    /*\r\n     * full move model\r\n     * it will move image and drawing object when you selected image\r\n     * it will move path if you selected path\r\n     */\r\n    function enableFullMove() {\r\n        raster.move = false;\r\n        raster.zoom = false;\r\n        me.options.fullMove = true;\r\n    }\r\n    function disableFullMove() {\r\n        raster.move = true;\r\n        raster.zoom = true;\r\n        me.options.fullMove = false;\r\n    }\r\n    function getPos(){\r\n        myPen.clear();\r\n        if(raster.source===\"data:,\") return;\r\n        let output = [];\r\n        for(let i=0;i<project.layers[0].children.length;i++)\r\n        {\r\n            let item = project.layers[0].children[i]\r\n            if(item instanceof Path && item.closed){\r\n                output.push(item.getPos());\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    function clear() {\r\n        if(raster) raster.position = view.center;\r\n        paper.view.zoom = 1;\r\n        for(let j=0;j<project.layers.length;j++){\r\n            let layer = project.layers[j];\r\n            for(let i=layer.children.length-1;i>0;i--){\r\n                let item = layer.children[i]\r\n                if(item instanceof Path) {\r\n                    let item = layer.children[i]\r\n                    item.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function destroy() {\r\n        if(paper && paper.projects && paper.projects.length > 0){\r\n            console.log('destroy cropper')\r\n            if(raster) raster.clear();\r\n            clear();\r\n            paper.tool.remove();\r\n            paper.project.clear();\r\n            paper.projects = [];\r\n            paper.remove();\r\n        }\r\n    }\r\n    function crop(imgPos){\r\n        let canvas=document.createElement(\"CANVAS\");\r\n        canvas.width = imgPos.bounds.width;\r\n        canvas.height = imgPos.bounds.height;\r\n        let ctx=canvas.getContext(\"2d\");\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.moveTo(imgPos.points[0].x - imgPos.bounds.x, imgPos.points[0].y - imgPos.bounds.y);\r\n        for(let i=1;i<imgPos.points.length;i++)\r\n        {\r\n            ctx.lineTo(imgPos.points[i].x - imgPos.bounds.x, imgPos.points[i].y - imgPos.bounds.y);\r\n        }\r\n        ctx.clip();\r\n        ctx.drawImage(raster.image,imgPos.bounds.x, imgPos.bounds.y, canvas.width, canvas.height, 0, 0, canvas.width, canvas.height);\r\n        ctx.restore(); /// restore de\r\n        return canvas.toDataURL()\r\n    }\r\n    function cropBounds(imgPos) {\r\n        let canvas=document.createElement(\"CANVAS\");\r\n        canvas.width = imgPos.bounds.width;\r\n        canvas.height = imgPos.bounds.height;\r\n        let ctx=canvas.getContext(\"2d\");\r\n        ctx.save();\r\n        ctx.drawImage(raster.image,imgPos.bounds.x, imgPos.bounds.y, canvas.width, canvas.height, 0, 0, canvas.width, canvas.height);\r\n        ctx.restore();\r\n        return canvas.toDataURL()\r\n    }\r\n    function setImage(source) {\r\n        let image = new Image();\r\n        image.src = source;\r\n        image.onload = function() {\r\n            raster.source  = source;\r\n            if(image.width > view.size.width)\r\n            {\r\n                paper.project.layers[0].fitBounds(view.bounds,false)\r\n            }\r\n            else\r\n            {\r\n                raster.scaling = 1;\r\n\r\n            }\r\n        };\r\n    }\r\n    function getImage() {\r\n        return raster.source===\"data:,\"?undefined:raster.source;\r\n    }\r\n    function startAction() {\r\n        myMove.start()\r\n    }\r\n    function stopAction() {\r\n        myMove.stop();\r\n        myPen.clear();\r\n    }\r\n    function draw(points,option) {\r\n        let newPoints = [...points];\r\n        let imgX = raster.bounds.x;\r\n        let imgY = raster.bounds.y;\r\n        for(let i=0;i<newPoints.length;i++){\r\n            let newPoint = newPoints[i];\r\n            newPoint.x = newPoint.x * raster.scaling.x + imgX;\r\n            newPoint.y= newPoint.y * raster.scaling.y + imgY;\r\n        }\r\n        return myPen.draw(points,Object.assign({},me.options,option))\r\n    }\r\n\r\n    Path.prototype.getPos = function () {\r\n        let x = raster.bounds.x;\r\n        let y = raster.bounds.y;\r\n        let realPos = [];\r\n        let minX,maxX,minY,maxY;\r\n        for(let j=0; j < this.curves.length; j++) {\r\n            let point = this.curves[j].points[0];\r\n            let newX = (point.x  - x)/ raster.scaling.x;\r\n            let newY = (point.y - y) / raster.scaling.x;\r\n            realPos.push({x:newX,y:newY})\r\n            if(!minX || minX>newX) minX = newX;\r\n            if(!maxX || maxX<newX) maxX = newX;\r\n            if(!minY || minY>newY) minY = newY;\r\n            if(!maxY || maxY<newY) maxY = newY;\r\n        }\r\n        let boundWidth = maxX-minX;\r\n        let boundHeight = maxY-minY;\r\n        return {\r\n            bounds:{x:minX,y:minY,width:boundWidth,height:boundHeight},\r\n            boundPos:[\r\n                {x:minX,y:minY},\r\n                {x:minX+boundWidth,y:minY},\r\n                {x:minX+boundWidth,y:minY+boundHeight},\r\n                {x:minX,y:minY+boundHeight},\r\n            ],\r\n            points:realPos\r\n        };\r\n    }\r\n    return {\r\n        setImage,\r\n        getImage,\r\n        getPos,\r\n        startPen,\r\n        startRectangle,\r\n        clear,\r\n        destroy,\r\n        crop,\r\n        cropBounds,\r\n        options:me.options,\r\n        objects:project.layers[0].children,\r\n        draw,\r\n        enableFullMove,\r\n        disableFullMove\r\n    }\r\n}\r\nwindow.Cropper = cropper;\r\nexport default cropper\r\n","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n  // (2019). This influences support for strict mode, the set of\n  // reserved words, and support for new syntax features. The default\n  // is 9.\n  ecmaVersion: 9,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar SCOPE_TOP = 1;\nvar SCOPE_FUNCTION = 2;\nvar SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION;\nvar SCOPE_ASYNC = 4;\nvar SCOPE_GENERATOR = 8;\nvar SCOPE_ARROW = 16;\nvar SCOPE_SIMPLE_CATCH = 32;\nvar SCOPE_SUPER = 64;\nvar SCOPE_DIRECT_SUPER = 128;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal and declareName to determine the type of a binding\nvar BIND_NONE = 0;\nvar BIND_VAR = 1;\nvar BIND_LEXICAL = 2;\nvar BIND_FUNCTION = 3;\nvar BIND_SIMPLE_CATCH = 4;\nvar BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = {};\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\nprototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n// Switch to a getter for 7.0.0.\nParser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    if (this$1.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this$1.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this$1.raiseRecoverable(this$1.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91) { return true } // '['\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock(true, node)\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope, node) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  if ((kind === \"const\" || kind === \"let\") && this.isContextual(\"let\")) {\n    this.raiseRecoverable(this.start, \"let is disallowed as a lexically bound name\");\n  }\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1;\nvar FUNC_HANGING_STATEMENT = 2;\nvar FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var element = this$1.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this$1.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.strict = oldStrict;\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassElement = function(constructorAllowsSuper) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  var allowsDirectSuper = false;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n    allowsDirectSuper = constructorAllowsSuper;\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  if (this.type === types.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLVal(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n        // check if export is defined\n        this$1.checkLocalExport(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, BIND_LEXICAL);\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(noIn) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldShorthandAssign = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  if (oldShorthandAssign > -1) { refDestructuringErrors.shorthandAssign = oldShorthandAssign; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  while (true) {\n    var element = this$1.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n    if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n    base = element;\n  }\n};\n\npp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n  var computed = this.eat(types.bracketL);\n  if (computed || this.eat(types.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.property = computed ? this.parseExpression() : this.parseIdent(true);\n    node.computed = !!computed;\n    if (computed) { this.expect(types.bracketR); }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types.backQuote) {\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inNonArrowFunction())\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n\n  // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n  if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function(noIn) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign(noIn);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$5.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$5.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$5.declareName = function(name, bindingType, pos) {\n  var this$1 = this;\n\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this$1.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this$1.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this$1.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this$1.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$5.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$5.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$5.currentVarScope = function() {\n  var this$1 = this;\n\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this$1.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$5.currentThisScope = function() {\n  var this$1 = this;\n\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this$1.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types._const || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma9BinaryProperties + \" Extended_Pictographic\"\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\"\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\nbuildUnicodeData(9);\nbuildUnicodeData(10);\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 10 ? 10 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!has(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\n\nvar version = \"6.1.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, Parser, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n//# sourceMappingURL=acorn.mjs.map\n"],"sourceRoot":""}